<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd"><key id="d7" for="node" attr.name="path" attr.type="string"/>
<key id="d6" for="node" attr.name="name" attr.type="string"/>
<key id="d5" for="node" attr.name="end_code_line" attr.type="long"/>
<key id="d4" for="node" attr.name="start_code_line" attr.type="long"/>
<key id="d3" for="node" attr.name="desc" attr.type="string"/>
<key id="d2" for="node" attr.name="source_name" attr.type="string"/>
<key id="d1" for="node" attr.name="target_name" attr.type="string"/>
<key id="d0" for="node" attr.name="source_code" attr.type="string"/>
<graph edgedefault="directed"><node id="auth-bsdauth.c|bsdauth_init_ctx">
  <data key="d0"> 44: static void *
 45: bsdauth_init_ctx(Authctxt *authctxt)
 46: {
 47: 	return authctxt;
 48: }</data>
  <data key="d1"></data>
  <data key="d2">bsdauth_init_ctx</data>
  <data key="d3">初始化认证上下文</data>
  <data key="d4">44</data>
  <data key="d5">48</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|">
  <data key="d0"> 44: static void *
 45: bsdauth_init_ctx(Authctxt *authctxt)
 46: {
 47: 	return authctxt;
 48: }</data>
  <data key="d2">bsdauth_init_ctx</data>
  <data key="d1"></data>
  <data key="d3">初始化认证上下文</data>
  <data key="d4">44</data>
  <data key="d5">48</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|bsdauth_query">
  <data key="d0"> 90: 	(*prompts)[0] = xstrdup(challenge);</data>
  <data key="d1">xstrdup</data>
  <data key="d2">bsdauth_query</data>
  <data key="d3">复制字符串</data>
  <data key="d4">90</data>
  <data key="d5">90</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|debug2">
  <data key="d0"> 63: 		debug2("bsdauth_query: try reuse session");</data>
  <data key="d2">bsdauth_query</data>
  <data key="d1">debug2</data>
  <data key="d3">调试信息</data>
  <data key="d4">63</data>
  <data key="d5">63</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|auth_getitem">
  <data key="d0"> 64: 		challenge = auth_getitem(authctxt-&gt;as, AUTHV_CHALLENGE);</data>
  <data key="d2">bsdauth_query</data>
  <data key="d1">auth_getitem</data>
  <data key="d3">获取认证项目</data>
  <data key="d4">64</data>
  <data key="d5">64</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|auth_close">
  <data key="d0"> 66: 			auth_close(authctxt-&gt;as);</data>
  <data key="d2">bsdauth_query</data>
  <data key="d1">auth_close</data>
  <data key="d3">关闭认证会话</data>
  <data key="d4">66</data>
  <data key="d5">66</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|auth_userchallenge">
  <data key="d0"> 75: 		authctxt-&gt;as = auth_userchallenge(authctxt-&gt;user,</data>
  <data key="d2">bsdauth_query</data>
  <data key="d1">auth_userchallenge</data>
  <data key="d3">获取用户挑战</data>
  <data key="d4">75</data>
  <data key="d5">75</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|xstrdup">
  <data key="d0"> 85: 	*name = xstrdup("");</data>
  <data key="d2">bsdauth_query</data>
  <data key="d1">xstrdup</data>
  <data key="d3">复制字符串</data>
  <data key="d4">85</data>
  <data key="d5">85</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|xcalloc">
  <data key="d0"> 88: 	*prompts = xcalloc(*numprompts, sizeof(char *));</data>
  <data key="d2">bsdauth_query</data>
  <data key="d1">xcalloc</data>
  <data key="d3">分配内存</data>
  <data key="d4">88</data>
  <data key="d5">88</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|bsdauth_respond">
  <data key="d0">110: 	authok = auth_userresponse(authctxt-&gt;as, responses[0], 0);</data>
  <data key="d1">auth_userresponse</data>
  <data key="d2">bsdauth_respond</data>
  <data key="d3">用户响应处理</data>
  <data key="d4">110</data>
  <data key="d5">110</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|auth_userresponse">
  <data key="d0">110: 	authok = auth_userresponse(authctxt-&gt;as, responses[0], 0);</data>
  <data key="d2">bsdauth_respond</data>
  <data key="d1">auth_userresponse</data>
  <data key="d3">用户响应处理</data>
  <data key="d4">110</data>
  <data key="d5">110</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth-bsdauth.c|bsdauth_free_ctx">
  <data key="d0">123: 		auth_close(authctxt-&gt;as);</data>
  <data key="d1">auth_close</data>
  <data key="d2">bsdauth_free_ctx</data>
  <data key="d3">关闭认证会话</data>
  <data key="d4">123</data>
  <data key="d5">123</data>
  <data key="d6">auth-bsdauth.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth-bsdauth.c</data>
</node>
<node id="auth2-hostbased.c|userauth_hostbased">
  <data key="d0">156: 	sshbuf_free(b);</data>
  <data key="d1">sshbuf_free</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d3">释放ssh缓冲区</data>
  <data key="d4">156</data>
  <data key="d5">156</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshpkt_get_cstring">
  <data key="d0"> 61: {
 62: 	Authctxt *authctxt = ssh-&gt;authctxt;
 63: 	struct sshbuf *b;
 64: 	struct sshkey *key = NULL;
 65: 	char *pkalg, *cuser, *chost;
 66: 	u_char *pkblob, *sig;
 67: 	size_t alen, blen, slen;
 68: 	int r, pktype, authenticated = 0;
 69: 
 70: 	/* XXX use sshkey_froms() */
 71: 	if ((r = sshpkt_get_cstring(ssh, &amp;pkalg, &amp;alen)) != 0 ||
 72: 	    (r = sshpkt_get_string(ssh, &amp;pkblob, &amp;blen)) != 0 ||
 73: 	    (r = sshpkt_get_cstring(ssh, &amp;chost, NULL)) != 0 ||
 74: 	    (r = sshpkt_get_cstring(ssh, &amp;cuser, NULL)) != 0 ||
 75: 	    (r = sshpkt_get_string(ssh, &amp;sig, &amp;slen)) != 0)</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshpkt_get_cstring</data>
  <data key="d3">获取字符串数据</data>
  <data key="d4">61</data>
  <data key="d5">75</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshpkt_get_string">
  <data key="d0"> 71: 	if ((r = sshpkt_get_cstring(ssh, &amp;pkalg, &amp;alen)) != 0 ||
 72: 	    (r = sshpkt_get_string(ssh, &amp;pkblob, &amp;blen)) != 0 ||</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshpkt_get_string</data>
  <data key="d3">获取字符串数据</data>
  <data key="d4">71</data>
  <data key="d5">72</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|debug_f">
  <data key="d0"> 78: 	debug_f("cuser %s chost %s pkalg %s slen %zu",
 79: 	    cuser, chost, pkalg, slen);</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">debug_f</data>
  <data key="d3">调试输出用户主机信息</data>
  <data key="d4">78</data>
  <data key="d5">79</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshkey_type_from_name">
  <data key="d0"> 84: 	pktype = sshkey_type_from_name(pkalg);</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshkey_type_from_name</data>
  <data key="d3">根据名称获取密钥类型</data>
  <data key="d4">84</data>
  <data key="d5">84</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|logit_f">
  <data key="d0"> 87: 		logit_f("unsupported public key algorithm: %s",
 88: 		    pkalg);
 89: 		goto done;</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">logit_f</data>
  <data key="d3">记录日志：不支持的公钥算法</data>
  <data key="d4">87</data>
  <data key="d5">89</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshkey_from_blob">
  <data key="d0"> 91: 	if ((r = sshkey_from_blob(pkblob, blen, &amp;key)) != 0) {</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshkey_from_blob</data>
  <data key="d3">从数据块创建公钥</data>
  <data key="d4">91</data>
  <data key="d5">91</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|error_fr">
  <data key="d0"> 92: 		error_fr(r, "key_from_blob");
 93: 		goto done;</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">error_fr</data>
  <data key="d3">记录错误信息：从数据块创建密钥失败</data>
  <data key="d4">92</data>
  <data key="d5">93</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|error_f">
  <data key="d0"> 96: 		error_f("cannot decode key: %s", pkalg);
 97: 		goto done;</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">error_f</data>
  <data key="d3">记录错误信息：无法解码密钥</data>
  <data key="d4">96</data>
  <data key="d5">97</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|match_pattern_list">
  <data key="d0">104: 	if (match_pattern_list(pkalg, options.hostbased_accepted_algos, 0) != 1) {</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">match_pattern_list</data>
  <data key="d3">匹配公钥算法</data>
  <data key="d4">104</data>
  <data key="d5">104</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshkey_check_cert_sigtype">
  <data key="d0">109: 	if ((r = sshkey_check_cert_sigtype(key,
110: 	    options.ca_sign_algorithms)) != 0) {</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshkey_check_cert_sigtype</data>
  <data key="d3">检查证书签名类型</data>
  <data key="d4">109</data>
  <data key="d5">110</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|logit_fr">
  <data key="d0">111: 		logit_fr(r, "certificate signature algorithm %s",
112: 		    (key-&gt;cert == NULL || key-&gt;cert-&gt;signature_type == NULL) ?
113: 		    "(null)" : key-&gt;cert-&gt;signature_type);
114: 		goto done;</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">logit_fr</data>
  <data key="d3">记录日志：证书签名算法不符合</data>
  <data key="d4">111</data>
  <data key="d5">114</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshkey_check_rsa_length">
  <data key="d0">116: 	if ((r = sshkey_check_rsa_length(key,
117: 	    options.required_rsa_size)) != 0) {</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshkey_check_rsa_length</data>
  <data key="d3">检查RSA密钥长度</data>
  <data key="d4">116</data>
  <data key="d5">117</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|logit_r">
  <data key="d0">118: 		logit_r(r, "refusing %s key", sshkey_type(key));
119: 		goto done;
120: 	}</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">logit_r</data>
  <data key="d3">记录日志：拒绝不合规的RSA密钥</data>
  <data key="d4">118</data>
  <data key="d5">120</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshbuf_new">
  <data key="d0">127: 	if ((b = sshbuf_new()) == NULL)</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshbuf_new</data>
  <data key="d3">创建新的ssh缓冲区</data>
  <data key="d4">127</data>
  <data key="d5">127</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|fatal_f">
  <data key="d0">128: 		fatal_f("sshbuf_new failed");</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">fatal_f</data>
  <data key="d3">记录错误：sshbuf_new失败</data>
  <data key="d4">128</data>
  <data key="d5">128</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshbuf_put_stringb">
  <data key="d0">130: 	if ((r = sshbuf_put_stringb(b, ssh-&gt;kex-&gt;session_id)) != 0 ||</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshbuf_put_stringb</data>
  <data key="d3">向ssh缓冲区添加字符串</data>
  <data key="d4">130</data>
  <data key="d5">130</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshbuf_put_u8">
  <data key="d0">131: 	    (r = sshbuf_put_u8(b, SSH2_MSG_USERAUTH_REQUEST)) != 0 ||</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshbuf_put_u8</data>
  <data key="d3">向ssh缓冲区添加字节</data>
  <data key="d4">131</data>
  <data key="d5">131</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshbuf_put_cstring">
  <data key="d0">132: 	    (r = sshbuf_put_cstring(b, authctxt-&gt;user)) != 0 ||
133: 	    (r = sshbuf_put_cstring(b, authctxt-&gt;service)) != 0 ||
134: 	    (r = sshbuf_put_cstring(b, method)) != 0 ||</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshbuf_put_cstring</data>
  <data key="d3">向ssh缓冲区添加C字符串</data>
  <data key="d4">132</data>
  <data key="d5">134</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|fatal_fr">
  <data key="d0">139: 		fatal_fr(r, "reconstruct packet");</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">fatal_fr</data>
  <data key="d3">记录错误信息：重构数据包失败</data>
  <data key="d4">139</data>
  <data key="d5">139</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|auth2_record_info">
  <data key="d0">144: 	auth2_record_info(authctxt,
145: 	    "client user \"%.100s\", client host \"%.100s\"", cuser, chost);</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">auth2_record_info</data>
  <data key="d3">记录认证信息</data>
  <data key="d4">144</data>
  <data key="d5">145</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|mm_hostbased_key_allowed">
  <data key="d0">149: 	if (mm_hostbased_key_allowed(ssh, authctxt-&gt;pw, cuser,
150: 	    chost, key) &amp;&amp;</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">mm_hostbased_key_allowed</data>
  <data key="d3">检查主机密钥权限</data>
  <data key="d4">149</data>
  <data key="d5">150</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|mm_sshkey_verify">
  <data key="d0">151: 	    mm_sshkey_verify(key, sig, slen,
152: 	    sshbuf_ptr(b), sshbuf_len(b), pkalg, ssh-&gt;compat, NULL) == 0)</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">mm_sshkey_verify</data>
  <data key="d3">验证SSH密钥</data>
  <data key="d4">151</data>
  <data key="d5">152</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|auth2_record_key">
  <data key="d0">155: 	auth2_record_key(authctxt, authenticated, key);</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">auth2_record_key</data>
  <data key="d3">记录认证密钥信息</data>
  <data key="d4">155</data>
  <data key="d5">155</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshbuf_free">
  <data key="d0">156: 	sshbuf_free(b);</data>
  <data key="d2">userauth_hostbased</data>
  <data key="d1">sshbuf_free</data>
  <data key="d3">释放ssh缓冲区</data>
  <data key="d4">156</data>
  <data key="d5">156</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|hostbased_key_allowed">
  <data key="d0">249: 		free(fp);</data>
  <data key="d1">free</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d3">释放内存</data>
  <data key="d4">249</data>
  <data key="d5">249</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|auth_key_is_revoked">
  <data key="d0">178: 	if (auth_key_is_revoked(key))</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">auth_key_is_revoked</data>
  <data key="d3">检查密钥是否被撤销</data>
  <data key="d4">178</data>
  <data key="d5">178</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|auth_get_canonical_hostname">
  <data key="d0">181: 	resolvedname = auth_get_canonical_hostname(ssh, options.use_dns);</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">auth_get_canonical_hostname</data>
  <data key="d3">获取规范主机名</data>
  <data key="d4">181</data>
  <data key="d5">181</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|ssh_remote_ipaddr">
  <data key="d0">182: 	ipaddr = ssh_remote_ipaddr(ssh);</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">ssh_remote_ipaddr</data>
  <data key="d3">获取远程IP地址</data>
  <data key="d4">182</data>
  <data key="d5">182</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|auth_rhosts2">
  <data key="d0">193: 		if (auth_rhosts2(pw, cuser, chost, chost) == 0) {
194: 			debug2_f("auth_rhosts2 refused user \"%.100s\" "</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">auth_rhosts2</data>
  <data key="d3">验证用户主机名</data>
  <data key="d4">193</data>
  <data key="d5">194</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|strcasecmp">
  <data key="d0">200: 		if (strcasecmp(resolvedname, chost) != 0)</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">strcasecmp</data>
  <data key="d3">比较字符串不区分大小写</data>
  <data key="d4">200</data>
  <data key="d5">200</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshkey_is_cert">
  <data key="d0">214: 	if (sshkey_is_cert(key) &amp;&amp;</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">sshkey_is_cert</data>
  <data key="d3">检查密钥是否为证书</data>
  <data key="d4">214</data>
  <data key="d5">214</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshkey_cert_check_authority_now">
  <data key="d0">215: 	    sshkey_cert_check_authority_now(key, 1, 0, 0, lookup, &amp;reason)) {</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">sshkey_cert_check_authority_now</data>
  <data key="d3">检查证书的授权</data>
  <data key="d4">215</data>
  <data key="d5">215</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|check_key_in_hostfiles">
  <data key="d0">221: 	host_status = check_key_in_hostfiles(pw, key, lookup,
222: 	    _PATH_SSH_SYSTEM_HOSTFILE,</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">check_key_in_hostfiles</data>
  <data key="d3">检查密钥在主机文件中的状态</data>
  <data key="d4">221</data>
  <data key="d5">222</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|sshkey_fingerprint">
  <data key="d0">235: 			if ((fp = sshkey_fingerprint(key-&gt;cert-&gt;signature_key,
236: 			    options.fingerprint_hash, SSH_FP_DEFAULT)) == NULL)</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">sshkey_fingerprint</data>
  <data key="d3">获取密钥指纹</data>
  <data key="d4">235</data>
  <data key="d5">236</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|verbose">
  <data key="d0">238: 			verbose("Accepted certificate ID \"%s\" signed by "
239: 			    "%s CA %s from %s@%s", key-&gt;cert-&gt;key_id,
240: 			    sshkey_type(key-&gt;cert-&gt;signature_key), fp,
241: 			    cuser, lookup);</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">verbose</data>
  <data key="d3">输出接收证书的信息</data>
  <data key="d4">238</data>
  <data key="d5">241</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-hostbased.c|free">
  <data key="d0">249: 		free(fp);</data>
  <data key="d2">hostbased_key_allowed</data>
  <data key="d1">free</data>
  <data key="d3">释放内存</data>
  <data key="d4">249</data>
  <data key="d5">249</data>
  <data key="d6">auth2-hostbased.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-hostbased.c</data>
</node>
<node id="auth2-kbdint.c|userauth_kbdint">
  <data key="d0">48: userauth_kbdint(struct ssh *ssh, const char *method)
49: {
50: 	int r, authenticated = 0;
51: 	char *lang, *devs;
52: 
53: 	if ((r = sshpkt_get_cstring(ssh, &amp;lang, NULL)) != 0 ||
54: 	    (r = sshpkt_get_cstring(ssh, &amp;devs, NULL)) != 0 ||
55: 	    (r = sshpkt_get_end(ssh)) != 0)
56: 		fatal_fr(r, "parse packet");
57: 
58: 	debug("keyboard-interactive devs %s", devs);
59: 
60: 	if (options.kbd_interactive_authentication)
61: 		authenticated = auth2_challenge(ssh, devs);
62: 
63: 	free(devs);
64: 	free(lang);
65: 	return authenticated;
66: }</data>
  <data key="d1">auth2_challenge</data>
  <data key="d2">userauth_kbdint</data>
  <data key="d3">认证挑战</data>
  <data key="d4">48</data>
  <data key="d5">66</data>
  <data key="d6">auth2-kbdint.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-kbdint.c</data>
</node>
<node id="auth2-kbdint.c|sshpkt_get_cstring">
  <data key="d0">48: userauth_kbdint(struct ssh *ssh, const char *method)
49: {
50: 	int r, authenticated = 0;
51: 	char *lang, *devs;
52: 
53: 	if ((r = sshpkt_get_cstring(ssh, &amp;lang, NULL)) != 0 ||
54: 	    (r = sshpkt_get_cstring(ssh, &amp;devs, NULL)) != 0 ||
55: 	    (r = sshpkt_get_end(ssh)) != 0)
56: 		fatal_fr(r, "parse packet");
57: 
58: 	debug("keyboard-interactive devs %s", devs);
59: 
60: 	if (options.kbd_interactive_authentication)
61: 		authenticated = auth2_challenge(ssh, devs);
62: 
63: 	free(devs);
64: 	free(lang);
65: 	return authenticated;
66: }</data>
  <data key="d2">userauth_kbdint</data>
  <data key="d1">sshpkt_get_cstring</data>
  <data key="d3">获取字符串</data>
  <data key="d4">48</data>
  <data key="d5">66</data>
  <data key="d6">auth2-kbdint.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-kbdint.c</data>
</node>
<node id="auth2-kbdint.c|sshpkt_get_end">
  <data key="d0">48: userauth_kbdint(struct ssh *ssh, const char *method)
49: {
50: 	int r, authenticated = 0;
51: 	char *lang, *devs;
52: 
53: 	if ((r = sshpkt_get_cstring(ssh, &amp;lang, NULL)) != 0 ||
54: 	    (r = sshpkt_get_cstring(ssh, &amp;devs, NULL)) != 0 ||
55: 	    (r = sshpkt_get_end(ssh)) != 0)
56: 		fatal_fr(r, "parse packet");
57: 
58: 	debug("keyboard-interactive devs %s", devs);
59: 
60: 	if (options.kbd_interactive_authentication)
61: 		authenticated = auth2_challenge(ssh, devs);
62: 
63: 	free(devs);
64: 	free(lang);
65: 	return authenticated;
66: }</data>
  <data key="d2">userauth_kbdint</data>
  <data key="d1">sshpkt_get_end</data>
  <data key="d3">获取数据结束</data>
  <data key="d4">48</data>
  <data key="d5">66</data>
  <data key="d6">auth2-kbdint.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-kbdint.c</data>
</node>
<node id="auth2-kbdint.c|fatal_fr">
  <data key="d0">48: userauth_kbdint(struct ssh *ssh, const char *method)
49: {
50: 	int r, authenticated = 0;
51: 	char *lang, *devs;
52: 
53: 	if ((r = sshpkt_get_cstring(ssh, &amp;lang, NULL)) != 0 ||
54: 	    (r = sshpkt_get_cstring(ssh, &amp;devs, NULL)) != 0 ||
55: 	    (r = sshpkt_get_end(ssh)) != 0)
56: 		fatal_fr(r, "parse packet");
57: 
58: 	debug("keyboard-interactive devs %s", devs);
59: 
60: 	if (options.kbd_interactive_authentication)
61: 		authenticated = auth2_challenge(ssh, devs);
62: 
63: 	free(devs);
64: 	free(lang);
65: 	return authenticated;
66: }</data>
  <data key="d2">userauth_kbdint</data>
  <data key="d1">fatal_fr</data>
  <data key="d3">处理解析错误</data>
  <data key="d4">48</data>
  <data key="d5">66</data>
  <data key="d6">auth2-kbdint.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-kbdint.c</data>
</node>
<node id="auth2-kbdint.c|debug">
  <data key="d0">48: userauth_kbdint(struct ssh *ssh, const char *method)
49: {
50: 	int r, authenticated = 0;
51: 	char *lang, *devs;
52: 
53: 	if ((r = sshpkt_get_cstring(ssh, &amp;lang, NULL)) != 0 ||
54: 	    (r = sshpkt_get_cstring(ssh, &amp;devs, NULL)) != 0 ||
55: 	    (r = sshpkt_get_end(ssh)) != 0)
56: 		fatal_fr(r, "parse packet");
57: 
58: 	debug("keyboard-interactive devs %s", devs);
59: 
60: 	if (options.kbd_interactive_authentication)
61: 		authenticated = auth2_challenge(ssh, devs);
62: 
63: 	free(devs);
64: 	free(lang);
65: 	return authenticated;
66: }</data>
  <data key="d2">userauth_kbdint</data>
  <data key="d1">debug</data>
  <data key="d3">调试信息</data>
  <data key="d4">48</data>
  <data key="d5">66</data>
  <data key="d6">auth2-kbdint.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-kbdint.c</data>
</node>
<node id="auth2-kbdint.c|auth2_challenge">
  <data key="d0">48: userauth_kbdint(struct ssh *ssh, const char *method)
49: {
50: 	int r, authenticated = 0;
51: 	char *lang, *devs;
52: 
53: 	if ((r = sshpkt_get_cstring(ssh, &amp;lang, NULL)) != 0 ||
54: 	    (r = sshpkt_get_cstring(ssh, &amp;devs, NULL)) != 0 ||
55: 	    (r = sshpkt_get_end(ssh)) != 0)
56: 		fatal_fr(r, "parse packet");
57: 
58: 	debug("keyboard-interactive devs %s", devs);
59: 
60: 	if (options.kbd_interactive_authentication)
61: 		authenticated = auth2_challenge(ssh, devs);
62: 
63: 	free(devs);
64: 	free(lang);
65: 	return authenticated;
66: }</data>
  <data key="d2">userauth_kbdint</data>
  <data key="d1">auth2_challenge</data>
  <data key="d3">认证挑战</data>
  <data key="d4">48</data>
  <data key="d5">66</data>
  <data key="d6">auth2-kbdint.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-kbdint.c</data>
</node>
<node id="auth2-kbdint.c|method_kbdint">
  <data key="d0">68: Authmethod method_kbdint = {
69: 	&amp;methodcfg_kbdint,
70: 	userauth_kbdint,
71: };</data>
  <data key="d1">userauth_kbdint</data>
  <data key="d2">method_kbdint</data>
  <data key="d3">键盘交互认证方法</data>
  <data key="d4">68</data>
  <data key="d5">71</data>
  <data key="d6">auth2-kbdint.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-kbdint.c</data>
</node>
<node id="auth2-passwd.c|userauth_passwd">
  <data key="d0">72: 	freezero(password, len);</data>
  <data key="d1">freezero</data>
  <data key="d2">userauth_passwd</data>
  <data key="d3">释放密码内存</data>
  <data key="d4">72</data>
  <data key="d5">72</data>
  <data key="d6">auth2-passwd.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-passwd.c</data>
</node>
<node id="auth2-passwd.c|sshpkt_get_u8">
  <data key="d0">60: 	if ((r = sshpkt_get_u8(ssh, &amp;change)) != 0 ||</data>
  <data key="d2">userauth_passwd</data>
  <data key="d1">sshpkt_get_u8</data>
  <data key="d3">获取第一个8位无符号整数</data>
  <data key="d4">60</data>
  <data key="d5">60</data>
  <data key="d6">auth2-passwd.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-passwd.c</data>
</node>
<node id="auth2-passwd.c|sshpkt_get_cstring">
  <data key="d0">61: 	    (r = sshpkt_get_cstring(ssh, &amp;password, &amp;len)) != 0 ||</data>
  <data key="d2">userauth_passwd</data>
  <data key="d1">sshpkt_get_cstring</data>
  <data key="d3">获取字符串</data>
  <data key="d4">61</data>
  <data key="d5">61</data>
  <data key="d6">auth2-passwd.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-passwd.c</data>
</node>
<node id="auth2-passwd.c|sshpkt_get_end">
  <data key="d0">63: 	    (r = sshpkt_get_end(ssh)) != 0) {</data>
  <data key="d2">userauth_passwd</data>
  <data key="d1">sshpkt_get_end</data>
  <data key="d3">结束数据包解析</data>
  <data key="d4">63</data>
  <data key="d5">63</data>
  <data key="d6">auth2-passwd.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-passwd.c</data>
</node>
<node id="auth2-passwd.c|mm_auth_password">
  <data key="d0">70: 	else if (mm_auth_password(ssh, password) == 1)</data>
  <data key="d2">userauth_passwd</data>
  <data key="d1">mm_auth_password</data>
  <data key="d3">执行密码认证</data>
  <data key="d4">70</data>
  <data key="d5">70</data>
  <data key="d6">auth2-passwd.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-passwd.c</data>
</node>
<node id="auth2-passwd.c|freezero">
  <data key="d0">72: 	freezero(password, len);</data>
  <data key="d2">userauth_passwd</data>
  <data key="d1">freezero</data>
  <data key="d3">释放密码内存</data>
  <data key="d4">72</data>
  <data key="d5">72</data>
  <data key="d6">auth2-passwd.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-passwd.c</data>
</node>
<node id="auth2-passwd.c|method_passwd">
  <data key="d0">78: 	userauth_passwd,</data>
  <data key="d1">userauth_passwd</data>
  <data key="d2">method_passwd</data>
  <data key="d3">密码认证方法</data>
  <data key="d4">78</data>
  <data key="d5">78</data>
  <data key="d6">auth2-passwd.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-passwd.c</data>
</node>
<node id="auth2-pubkey.c|format_key">
  <data key="d0"> 78: format_key(const struct sshkey *key)
 79: {
 80: 	char *ret, *fp = sshkey_fingerprint(key,
 81: 	    options.fingerprint_hash, SSH_FP_DEFAULT);
 82: 
 83: 	xasprintf(&amp;ret, "%s %s", sshkey_type(key), fp);
 84: 	free(fp);
 85: 	return ret;</data>
  <data key="d1">sshkey_fingerprint</data>
  <data key="d2">format_key</data>
  <data key="d3">生成密钥指纹</data>
  <data key="d4">78</data>
  <data key="d5">85</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|sshkey_fingerprint">
  <data key="d0"> 78: format_key(const struct sshkey *key)
 79: {
 80: 	char *ret, *fp = sshkey_fingerprint(key,
 81: 	    options.fingerprint_hash, SSH_FP_DEFAULT);
 82: 
 83: 	xasprintf(&amp;ret, "%s %s", sshkey_type(key), fp);
 84: 	free(fp);
 85: 	return ret;</data>
  <data key="d2">format_key</data>
  <data key="d1">sshkey_fingerprint</data>
  <data key="d3">生成密钥指纹</data>
  <data key="d4">78</data>
  <data key="d5">85</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|userauth_pubkey">
  <data key="d0">178: 	key_s = format_key(key);</data>
  <data key="d1">format_key</data>
  <data key="d2">userauth_pubkey</data>
  <data key="d3">格式化密钥</data>
  <data key="d4">178</data>
  <data key="d5">178</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|sshpkt_get_u8">
  <data key="d0">105: 	if ((r = sshpkt_get_u8(ssh, &amp;have_sig)) != 0 ||</data>
  <data key="d2">userauth_pubkey</data>
  <data key="d1">sshpkt_get_u8</data>
  <data key="d3">获取包中的uint8值</data>
  <data key="d4">105</data>
  <data key="d5">105</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|sshpkt_get_cstring">
  <data key="d0">106: 	    (r = sshpkt_get_cstring(ssh, &amp;pkalg, NULL)) != 0 ||</data>
  <data key="d2">userauth_pubkey</data>
  <data key="d1">sshpkt_get_cstring</data>
  <data key="d3">获取字符串</data>
  <data key="d4">106</data>
  <data key="d5">106</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|sshpkt_get_string">
  <data key="d0">107: 	    (r = sshpkt_get_string(ssh, &amp;pkblob, &amp;blen)) != 0)</data>
  <data key="d2">userauth_pubkey</data>
  <data key="d1">sshpkt_get_string</data>
  <data key="d3">获取字符串</data>
  <data key="d4">107</data>
  <data key="d5">107</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|sshauthopt_free">
  <data key="d0">304: 	sshauthopt_free(authopts);</data>
  <data key="d2">userauth_pubkey</data>
  <data key="d1">sshauthopt_free</data>
  <data key="d3">释放认证选项</data>
  <data key="d4">304</data>
  <data key="d5">304</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|sshkey_free">
  <data key="d0">305: 	sshkey_free(key);</data>
  <data key="d2">userauth_pubkey</data>
  <data key="d1">sshkey_free</data>
  <data key="d3">释放SSH密钥</data>
  <data key="d4">305</data>
  <data key="d5">305</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|user_key_allowed">
  <data key="d0">753: user_key_allowed(struct ssh *ssh, struct passwd *pw, struct sshkey *key,
754:     int auth_attempt, struct sshauthopt **authoptsp)</data>
  <data key="d1">user_key_command_allowed2</data>
  <data key="d2">user_key_allowed</data>
  <data key="d3">检查命令中公钥是否被允许</data>
  <data key="d4">753</data>
  <data key="d5">754</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|user_key_allowed2">
  <data key="d0">603: 		found_key = auth_check_authkeys_file(pw, f, file,</data>
  <data key="d2">user_key_allowed2</data>
  <data key="d1">auth_check_authkeys_file</data>
  <data key="d3">检查授权密钥文件</data>
  <data key="d4">603</data>
  <data key="d5">603</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|user_cert_trusted_ca">
  <data key="d0">501: 	if ((r = sshkey_in_file(key-&gt;cert-&gt;signature_key,</data>
  <data key="d2">user_cert_trusted_ca</data>
  <data key="d1">sshkey_in_file</data>
  <data key="d3">检查CA是否在文件中</data>
  <data key="d4">501</data>
  <data key="d5">501</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|user_key_command_allowed2">
  <data key="d0">721: 	ok = auth_check_authkeys_file(user_pw, f,</data>
  <data key="d2">user_key_command_allowed2</data>
  <data key="d1">auth_check_authkeys_file</data>
  <data key="d3">检查授权命令文件</data>
  <data key="d4">721</data>
  <data key="d5">721</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|sshkey_in_file">
  <data key="d0">501: 	if ((r = sshkey_in_file(key-&gt;cert-&gt;signature_key,</data>
  <data key="d2">user_cert_trusted_ca</data>
  <data key="d1">sshkey_in_file</data>
  <data key="d3">检查CA是否在文件中</data>
  <data key="d4">501</data>
  <data key="d5">501</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|user_principals">
  <data key="d0">333: 	success = auth_process_principals(f, file, cert, authoptsp);</data>
  <data key="d1">auth_process_principals</data>
  <data key="d2">user_principals</data>
  <data key="d3">处理principals文件</data>
  <data key="d4">333</data>
  <data key="d5">333</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|auth_openprincipals">
  <data key="d0">329: 	if ((f = auth_openprincipals(file, pw, options.strict_modes)) == NULL) {</data>
  <data key="d2">user_principals</data>
  <data key="d1">auth_openprincipals</data>
  <data key="d3">打开授权的principals文件</data>
  <data key="d4">329</data>
  <data key="d5">329</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|auth_process_principals">
  <data key="d0">333: 	success = auth_process_principals(f, file, cert, authoptsp);</data>
  <data key="d2">user_principals</data>
  <data key="d1">auth_process_principals</data>
  <data key="d3">处理principals文件</data>
  <data key="d4">333</data>
  <data key="d5">333</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|auth_openkeyfile">
  <data key="d0">602: 	if ((f = auth_openkeyfile(file, pw, options.strict_modes)) != NULL) {</data>
  <data key="d2">user_key_allowed2</data>
  <data key="d1">auth_openkeyfile</data>
  <data key="d3">打开公钥文件</data>
  <data key="d4">602</data>
  <data key="d5">602</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="auth2-pubkey.c|auth_check_authkeys_file">
  <data key="d0">603: 		found_key = auth_check_authkeys_file(pw, f, file,</data>
  <data key="d2">user_key_allowed2</data>
  <data key="d1">auth_check_authkeys_file</data>
  <data key="d3">检查授权密钥文件</data>
  <data key="d4">603</data>
  <data key="d5">603</data>
  <data key="d6">auth2-pubkey.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\auth2-pubkey.c</data>
</node>
<node id="dispatch.c|dispatch_protocol_error">
  <data key="d0"> 49: 		sshpkt_fatal(ssh, r, "%s", __func__);</data>
  <data key="d1">sshpkt_fatal</data>
  <data key="d2">dispatch_protocol_error</data>
  <data key="d3">致命错误处理</data>
  <data key="d4">49</data>
  <data key="d5">49</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|logit">
  <data key="d0"> 40: dispatch_protocol_error(int type, u_int32_t seq, struct ssh *ssh)
 41: {
 42: 	int r;
 43: 
 44: 	logit("dispatch_protocol_error: type %d seq %u", type, seq);</data>
  <data key="d2">dispatch_protocol_error</data>
  <data key="d1">logit</data>
  <data key="d3">记录协议错误信息</data>
  <data key="d4">40</data>
  <data key="d5">44</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|sshpkt_start">
  <data key="d0"> 45: 	if ((r = sshpkt_start(ssh, SSH2_MSG_UNIMPLEMENTED)) != 0 ||</data>
  <data key="d2">dispatch_protocol_error</data>
  <data key="d1">sshpkt_start</data>
  <data key="d3">启动数据包</data>
  <data key="d4">45</data>
  <data key="d5">45</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|sshpkt_put_u32">
  <data key="d0"> 46: 	    (r = sshpkt_put_u32(ssh, seq)) != 0 ||</data>
  <data key="d2">dispatch_protocol_error</data>
  <data key="d1">sshpkt_put_u32</data>
  <data key="d3">添加32位无符号整数</data>
  <data key="d4">46</data>
  <data key="d5">46</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|sshpkt_send">
  <data key="d0"> 47: 	    (r = sshpkt_send(ssh)) != 0 ||</data>
  <data key="d2">dispatch_protocol_error</data>
  <data key="d1">sshpkt_send</data>
  <data key="d3">发送数据包</data>
  <data key="d4">47</data>
  <data key="d5">47</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_packet_write_wait">
  <data key="d0"> 48: 	    (r = ssh_packet_write_wait(ssh)) != 0)</data>
  <data key="d2">dispatch_protocol_error</data>
  <data key="d1">ssh_packet_write_wait</data>
  <data key="d3">等待写入数据包</data>
  <data key="d4">48</data>
  <data key="d5">48</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|sshpkt_fatal">
  <data key="d0"> 49: 		sshpkt_fatal(ssh, r, "%s", __func__);</data>
  <data key="d2">dispatch_protocol_error</data>
  <data key="d1">sshpkt_fatal</data>
  <data key="d3">致命错误处理</data>
  <data key="d4">49</data>
  <data key="d5">49</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|dispatch_protocol_ignore">
  <data key="d0"> 54: dispatch_protocol_ignore(int type, u_int32_t seq, struct ssh *ssh)
 55: {
 56: 	logit("dispatch_protocol_ignore: type %d seq %u", type, seq);</data>
  <data key="d1">logit</data>
  <data key="d2">dispatch_protocol_ignore</data>
  <data key="d3">记录忽略信息</data>
  <data key="d4">54</data>
  <data key="d5">56</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_dispatch_init">
  <data key="d0"> 60: void
 61: ssh_dispatch_init(struct ssh *ssh, dispatch_fn *dflt)
 62: {
 63: 	u_int i;
 64: 	for (i = 0; i &lt; DISPATCH_MAX; i++)
 65: 		ssh-&gt;dispatch[i] = dflt;
 66: }</data>
  <data key="d1"></data>
  <data key="d2">ssh_dispatch_init</data>
  <data key="d3">初始化分发表</data>
  <data key="d4">60</data>
  <data key="d5">66</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|">
  <data key="d0"> 60: void
 61: ssh_dispatch_init(struct ssh *ssh, dispatch_fn *dflt)
 62: {
 63: 	u_int i;
 64: 	for (i = 0; i &lt; DISPATCH_MAX; i++)
 65: 		ssh-&gt;dispatch[i] = dflt;
 66: }</data>
  <data key="d2">ssh_dispatch_init</data>
  <data key="d1"></data>
  <data key="d3">初始化分发表</data>
  <data key="d4">60</data>
  <data key="d5">66</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_dispatch_range">
  <data key="d0"> 69: ssh_dispatch_range(struct ssh *ssh, u_int from, u_int to, dispatch_fn *fn)
 70: {
 71: 	u_int i;
 72: 
 73: 	for (i = from; i &lt;= to; i++) {
 74: 		if (i &gt;= DISPATCH_MAX)
 75: 			break;
 76: 		ssh-&gt;dispatch[i] = fn;
 77: 	}
 78: }</data>
  <data key="d1"></data>
  <data key="d2">ssh_dispatch_range</data>
  <data key="d3">设置分发范围</data>
  <data key="d4">69</data>
  <data key="d5">78</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_dispatch_set">
  <data key="d0"> 81: ssh_dispatch_set(struct ssh *ssh, int type, dispatch_fn *fn)
 82: {
 83: 	ssh-&gt;dispatch[type] = fn;
 84: }</data>
  <data key="d1"></data>
  <data key="d2">ssh_dispatch_set</data>
  <data key="d3">设置指定类型的分发函数</data>
  <data key="d4">81</data>
  <data key="d5">84</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_dispatch_run">
  <data key="d0">116: 			r = sshpkt_disconnect(ssh,</data>
  <data key="d1">sshpkt_disconnect</data>
  <data key="d2">ssh_dispatch_run</data>
  <data key="d3">断开连接处理</data>
  <data key="d4">116</data>
  <data key="d5">116</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_packet_read_seqnr">
  <data key="d0"> 95: 			r = ssh_packet_read_seqnr(ssh, &amp;type, &amp;seqnr);</data>
  <data key="d2">ssh_dispatch_run</data>
  <data key="d1">ssh_packet_read_seqnr</data>
  <data key="d3">读取数据包顺序号</data>
  <data key="d4">95</data>
  <data key="d5">95</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_packet_read_poll_seqnr">
  <data key="d0"> 99: 			r = ssh_packet_read_poll_seqnr(ssh, &amp;type, &amp;seqnr);</data>
  <data key="d2">ssh_dispatch_run</data>
  <data key="d1">ssh_packet_read_poll_seqnr</data>
  <data key="d3">轮询读取数据包顺序号</data>
  <data key="d4">99</data>
  <data key="d5">99</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|debug2">
  <data key="d0">108: 				debug2("skipped packet (type %u)", type);</data>
  <data key="d2">ssh_dispatch_run</data>
  <data key="d1">debug2</data>
  <data key="d3">调试信息记录</data>
  <data key="d4">108</data>
  <data key="d5">108</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh-&gt;dispatch[type]">
  <data key="d0">112: 			r = (*ssh-&gt;dispatch[type])(type, seqnr, ssh);</data>
  <data key="d2">ssh_dispatch_run</data>
  <data key="d1">ssh-&gt;dispatch[type]</data>
  <data key="d3">调用分发函数</data>
  <data key="d4">112</data>
  <data key="d5">112</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|sshpkt_disconnect">
  <data key="d0">116: 			r = sshpkt_disconnect(ssh,</data>
  <data key="d2">ssh_dispatch_run</data>
  <data key="d1">sshpkt_disconnect</data>
  <data key="d3">断开连接处理</data>
  <data key="d4">116</data>
  <data key="d5">116</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="dispatch.c|ssh_dispatch_run_fatal">
  <data key="d0">133: 		sshpkt_fatal(ssh, r, "%s", __func__);</data>
  <data key="d1">sshpkt_fatal</data>
  <data key="d2">ssh_dispatch_run_fatal</data>
  <data key="d3">致命错误处理</data>
  <data key="d4">133</data>
  <data key="d5">133</data>
  <data key="d6">dispatch.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\dispatch.c</data>
</node>
<node id="hash.c|crypto_hash_sha512">
  <data key="d0">32: crypto_hash_sha512(unsigned char *out, const unsigned char *in,
33:     unsigned long long inlen)
34: {
35: 
36: 	SHA2_CTX ctx;
37: 
38: 	SHA512Init(&amp;ctx);
39: 	SHA512Update(&amp;ctx, in, inlen);
40: 	SHA512Final(out, &amp;ctx);
41: 	return 0;
42: }</data>
  <data key="d1">SHA512Final</data>
  <data key="d2">crypto_hash_sha512</data>
  <data key="d3">完成SHA512哈希计算</data>
  <data key="d4">32</data>
  <data key="d5">42</data>
  <data key="d6">hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\hash.c</data>
</node>
<node id="hash.c|EVP_Digest">
  <data key="d0">17: crypto_hash_sha512(unsigned char *out, const unsigned char *in,
18:     unsigned long long inlen)
19: {
20: 
21: 	if (!EVP_Digest(in, inlen, out, NULL, EVP_sha512(), NULL))
22: 		return -1;
23: 	return 0;
24: }</data>
  <data key="d2">crypto_hash_sha512</data>
  <data key="d1">EVP_Digest</data>
  <data key="d3">计算SHA512哈希</data>
  <data key="d4">17</data>
  <data key="d5">24</data>
  <data key="d6">hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\hash.c</data>
</node>
<node id="hash.c|SHA512Init">
  <data key="d0">32: crypto_hash_sha512(unsigned char *out, const unsigned char *in,
33:     unsigned long long inlen)
34: {
35: 
36: 	SHA2_CTX ctx;
37: 
38: 	SHA512Init(&amp;ctx);
39: 	SHA512Update(&amp;ctx, in, inlen);
40: 	SHA512Final(out, &amp;ctx);
41: 	return 0;
42: }</data>
  <data key="d2">crypto_hash_sha512</data>
  <data key="d1">SHA512Init</data>
  <data key="d3">初始化SHA512上下文</data>
  <data key="d4">32</data>
  <data key="d5">42</data>
  <data key="d6">hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\hash.c</data>
</node>
<node id="hash.c|SHA512Update">
  <data key="d0">32: crypto_hash_sha512(unsigned char *out, const unsigned char *in,
33:     unsigned long long inlen)
34: {
35: 
36: 	SHA2_CTX ctx;
37: 
38: 	SHA512Init(&amp;ctx);
39: 	SHA512Update(&amp;ctx, in, inlen);
40: 	SHA512Final(out, &amp;ctx);
41: 	return 0;
42: }</data>
  <data key="d2">crypto_hash_sha512</data>
  <data key="d1">SHA512Update</data>
  <data key="d3">更新SHA512哈希</data>
  <data key="d4">32</data>
  <data key="d5">42</data>
  <data key="d6">hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\hash.c</data>
</node>
<node id="hash.c|SHA512Final">
  <data key="d0">32: crypto_hash_sha512(unsigned char *out, const unsigned char *in,
33:     unsigned long long inlen)
34: {
35: 
36: 	SHA2_CTX ctx;
37: 
38: 	SHA512Init(&amp;ctx);
39: 	SHA512Update(&amp;ctx, in, inlen);
40: 	SHA512Final(out, &amp;ctx);
41: 	return 0;
42: }</data>
  <data key="d2">crypto_hash_sha512</data>
  <data key="d1">SHA512Final</data>
  <data key="d3">完成SHA512哈希计算</data>
  <data key="d4">32</data>
  <data key="d5">42</data>
  <data key="d6">hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\hash.c</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb3">
  <data key="d0">   2: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb3(uint64_t a, uint64_t b) {
   3:   return libcrux_sha3_portable_keccak__vxarq_u64_423(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_423</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb3</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">2</data>
  <data key="d5">3</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_423">
  <data key="d0">   2: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb3(uint64_t a, uint64_t b) {
   3:   return libcrux_sha3_portable_keccak__vxarq_u64_423(a, b);</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb3</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_423</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">2</data>
  <data key="d5">3</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_424">
  <data key="d0">  24: libcrux_sha3_portable_keccak__vxarq_u64_424(uint64_t a, uint64_t b) {
  25:   uint64_t ab = a ^ b;
  26:   return libcrux_sha3_portable_keccak_rotate_left_cb4(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb4</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_424</data>
  <data key="d3">执行旋转</data>
  <data key="d4">24</data>
  <data key="d5">26</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb4">
  <data key="d0">  24: libcrux_sha3_portable_keccak__vxarq_u64_424(uint64_t a, uint64_t b) {
  25:   uint64_t ab = a ^ b;
  26:   return libcrux_sha3_portable_keccak_rotate_left_cb4(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_424</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb4</data>
  <data key="d3">执行旋转</data>
  <data key="d4">24</data>
  <data key="d5">26</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb4">
  <data key="d0">  40: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb4(uint64_t a, uint64_t b) {
  41:   return libcrux_sha3_portable_keccak__vxarq_u64_424(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_424</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb4</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">40</data>
  <data key="d5">41</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_425">
  <data key="d0">  62: libcrux_sha3_portable_keccak__vxarq_u64_425(uint64_t a, uint64_t b) {
  63:   uint64_t ab = a ^ b;
  64:   return libcrux_sha3_portable_keccak_rotate_left_cb5(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb5</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_425</data>
  <data key="d3">执行旋转</data>
  <data key="d4">62</data>
  <data key="d5">64</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb5">
  <data key="d0">  62: libcrux_sha3_portable_keccak__vxarq_u64_425(uint64_t a, uint64_t b) {
  63:   uint64_t ab = a ^ b;
  64:   return libcrux_sha3_portable_keccak_rotate_left_cb5(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_425</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb5</data>
  <data key="d3">执行旋转</data>
  <data key="d4">62</data>
  <data key="d5">64</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb5">
  <data key="d0">  78: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb5(uint64_t a, uint64_t b) {
  79:   return libcrux_sha3_portable_keccak__vxarq_u64_425(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_425</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb5</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">78</data>
  <data key="d5">79</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_426">
  <data key="d0"> 100: libcrux_sha3_portable_keccak__vxarq_u64_426(uint64_t a, uint64_t b) {
 101:   uint64_t ab = a ^ b;
 102:   return libcrux_sha3_portable_keccak_rotate_left_cb6(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb6</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_426</data>
  <data key="d3">执行旋转</data>
  <data key="d4">100</data>
  <data key="d5">102</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb6">
  <data key="d0"> 100: libcrux_sha3_portable_keccak__vxarq_u64_426(uint64_t a, uint64_t b) {
 101:   uint64_t ab = a ^ b;
 102:   return libcrux_sha3_portable_keccak_rotate_left_cb6(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_426</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb6</data>
  <data key="d3">执行旋转</data>
  <data key="d4">100</data>
  <data key="d5">102</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb6">
  <data key="d0"> 116: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb6(uint64_t a, uint64_t b) {
 117:   return libcrux_sha3_portable_keccak__vxarq_u64_426(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_426</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb6</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">116</data>
  <data key="d5">117</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_427">
  <data key="d0"> 138: libcrux_sha3_portable_keccak__vxarq_u64_427(uint64_t a, uint64_t b) {
 139:   uint64_t ab = a ^ b;
 140:   return libcrux_sha3_portable_keccak_rotate_left_cb7(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb7</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_427</data>
  <data key="d3">执行旋转</data>
  <data key="d4">138</data>
  <data key="d5">140</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb7">
  <data key="d0"> 138: libcrux_sha3_portable_keccak__vxarq_u64_427(uint64_t a, uint64_t b) {
 139:   uint64_t ab = a ^ b;
 140:   return libcrux_sha3_portable_keccak_rotate_left_cb7(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_427</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb7</data>
  <data key="d3">执行旋转</data>
  <data key="d4">138</data>
  <data key="d5">140</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb7">
  <data key="d0"> 154: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb7(uint64_t a, uint64_t b) {
 155:   return libcrux_sha3_portable_keccak__vxarq_u64_427(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_427</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb7</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">154</data>
  <data key="d5">155</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_428">
  <data key="d0"> 176: libcrux_sha3_portable_keccak__vxarq_u64_428(uint64_t a, uint64_t b) {
 177:   uint64_t ab = a ^ b;
 178:   return libcrux_sha3_portable_keccak_rotate_left_cb8(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb8</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_428</data>
  <data key="d3">执行旋转</data>
  <data key="d4">176</data>
  <data key="d5">178</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb8">
  <data key="d0"> 176: libcrux_sha3_portable_keccak__vxarq_u64_428(uint64_t a, uint64_t b) {
 177:   uint64_t ab = a ^ b;
 178:   return libcrux_sha3_portable_keccak_rotate_left_cb8(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_428</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb8</data>
  <data key="d3">执行旋转</data>
  <data key="d4">176</data>
  <data key="d5">178</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb8">
  <data key="d0"> 192: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb8(uint64_t a, uint64_t b) {
 193:   return libcrux_sha3_portable_keccak__vxarq_u64_428(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_428</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb8</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">192</data>
  <data key="d5">193</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_429">
  <data key="d0"> 214: libcrux_sha3_portable_keccak__vxarq_u64_429(uint64_t a, uint64_t b) {
 215:   uint64_t ab = a ^ b;
 216:   return libcrux_sha3_portable_keccak_rotate_left_cb9(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb9</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_429</data>
  <data key="d3">执行旋转</data>
  <data key="d4">214</data>
  <data key="d5">216</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb9">
  <data key="d0"> 214: libcrux_sha3_portable_keccak__vxarq_u64_429(uint64_t a, uint64_t b) {
 215:   uint64_t ab = a ^ b;
 216:   return libcrux_sha3_portable_keccak_rotate_left_cb9(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_429</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb9</data>
  <data key="d3">执行旋转</data>
  <data key="d4">214</data>
  <data key="d5">216</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb9">
  <data key="d0"> 230: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb9(uint64_t a, uint64_t b) {
 231:   return libcrux_sha3_portable_keccak__vxarq_u64_429(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_429</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb9</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">230</data>
  <data key="d5">231</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4210">
  <data key="d0"> 252: libcrux_sha3_portable_keccak__vxarq_u64_4210(uint64_t a, uint64_t b) {
 253:   uint64_t ab = a ^ b;
 254:   return libcrux_sha3_portable_keccak_rotate_left_cb10(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb10</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4210</data>
  <data key="d3">执行旋转</data>
  <data key="d4">252</data>
  <data key="d5">254</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb10">
  <data key="d0"> 252: libcrux_sha3_portable_keccak__vxarq_u64_4210(uint64_t a, uint64_t b) {
 253:   uint64_t ab = a ^ b;
 254:   return libcrux_sha3_portable_keccak_rotate_left_cb10(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4210</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb10</data>
  <data key="d3">执行旋转</data>
  <data key="d4">252</data>
  <data key="d5">254</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb10">
  <data key="d0"> 268: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb10(uint64_t a, uint64_t b) {
 269:   return libcrux_sha3_portable_keccak__vxarq_u64_4210(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4210</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb10</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">268</data>
  <data key="d5">269</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4211">
  <data key="d0"> 290: libcrux_sha3_portable_keccak__vxarq_u64_4211(uint64_t a, uint64_t b) {
 291:   uint64_t ab = a ^ b;
 292:   return libcrux_sha3_portable_keccak_rotate_left_cb11(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb11</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4211</data>
  <data key="d3">执行旋转</data>
  <data key="d4">290</data>
  <data key="d5">292</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb11">
  <data key="d0"> 290: libcrux_sha3_portable_keccak__vxarq_u64_4211(uint64_t a, uint64_t b) {
 291:   uint64_t ab = a ^ b;
 292:   return libcrux_sha3_portable_keccak_rotate_left_cb11(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4211</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb11</data>
  <data key="d3">执行旋转</data>
  <data key="d4">290</data>
  <data key="d5">292</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb11">
  <data key="d0"> 306: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb11(uint64_t a, uint64_t b) {
 307:   return libcrux_sha3_portable_keccak__vxarq_u64_4211(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4211</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb11</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">306</data>
  <data key="d5">307</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4212">
  <data key="d0"> 328: libcrux_sha3_portable_keccak__vxarq_u64_4212(uint64_t a, uint64_t b) {
 329:   uint64_t ab = a ^ b;
 330:   return libcrux_sha3_portable_keccak_rotate_left_cb12(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb12</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4212</data>
  <data key="d3">执行旋转</data>
  <data key="d4">328</data>
  <data key="d5">330</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb12">
  <data key="d0"> 328: libcrux_sha3_portable_keccak__vxarq_u64_4212(uint64_t a, uint64_t b) {
 329:   uint64_t ab = a ^ b;
 330:   return libcrux_sha3_portable_keccak_rotate_left_cb12(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4212</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb12</data>
  <data key="d3">执行旋转</data>
  <data key="d4">328</data>
  <data key="d5">330</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb12">
  <data key="d0"> 344: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb12(uint64_t a, uint64_t b) {
 345:   return libcrux_sha3_portable_keccak__vxarq_u64_4212(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4212</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb12</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">344</data>
  <data key="d5">345</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4213">
  <data key="d0"> 366: libcrux_sha3_portable_keccak__vxarq_u64_4213(uint64_t a, uint64_t b) {
 367:   uint64_t ab = a ^ b;
 368:   return libcrux_sha3_portable_keccak_rotate_left_cb13(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb13</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4213</data>
  <data key="d3">执行旋转</data>
  <data key="d4">366</data>
  <data key="d5">368</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb13">
  <data key="d0"> 366: libcrux_sha3_portable_keccak__vxarq_u64_4213(uint64_t a, uint64_t b) {
 367:   uint64_t ab = a ^ b;
 368:   return libcrux_sha3_portable_keccak_rotate_left_cb13(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4213</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb13</data>
  <data key="d3">执行旋转</data>
  <data key="d4">366</data>
  <data key="d5">368</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb13">
  <data key="d0"> 382: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb13(uint64_t a, uint64_t b) {
 383:   return libcrux_sha3_portable_keccak__vxarq_u64_4213(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4213</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb13</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">382</data>
  <data key="d5">383</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4214">
  <data key="d0"> 404: libcrux_sha3_portable_keccak__vxarq_u64_4214(uint64_t a, uint64_t b) {
 405:   uint64_t ab = a ^ b;
 406:   return libcrux_sha3_portable_keccak_rotate_left_cb14(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb14</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4214</data>
  <data key="d3">执行旋转</data>
  <data key="d4">404</data>
  <data key="d5">406</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb14">
  <data key="d0"> 404: libcrux_sha3_portable_keccak__vxarq_u64_4214(uint64_t a, uint64_t b) {
 405:   uint64_t ab = a ^ b;
 406:   return libcrux_sha3_portable_keccak_rotate_left_cb14(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4214</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb14</data>
  <data key="d3">执行旋转</data>
  <data key="d4">404</data>
  <data key="d5">406</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb14">
  <data key="d0"> 420: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb14(uint64_t a, uint64_t b) {
 421:   return libcrux_sha3_portable_keccak__vxarq_u64_4214(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4214</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb14</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">420</data>
  <data key="d5">421</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4215">
  <data key="d0"> 442: libcrux_sha3_portable_keccak__vxarq_u64_4215(uint64_t a, uint64_t b) {
 443:   uint64_t ab = a ^ b;
 444:   return libcrux_sha3_portable_keccak_rotate_left_cb15(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb15</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4215</data>
  <data key="d3">执行旋转</data>
  <data key="d4">442</data>
  <data key="d5">444</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb15">
  <data key="d0"> 442: libcrux_sha3_portable_keccak__vxarq_u64_4215(uint64_t a, uint64_t b) {
 443:   uint64_t ab = a ^ b;
 444:   return libcrux_sha3_portable_keccak_rotate_left_cb15(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4215</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb15</data>
  <data key="d3">执行旋转</data>
  <data key="d4">442</data>
  <data key="d5">444</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb15">
  <data key="d0"> 458: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb15(uint64_t a, uint64_t b) {
 459:   return libcrux_sha3_portable_keccak__vxarq_u64_4215(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4215</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb15</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">458</data>
  <data key="d5">459</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4216">
  <data key="d0"> 480: libcrux_sha3_portable_keccak__vxarq_u64_4216(uint64_t a, uint64_t b) {
 481:   uint64_t ab = a ^ b;
 482:   return libcrux_sha3_portable_keccak_rotate_left_cb16(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb16</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4216</data>
  <data key="d3">执行旋转</data>
  <data key="d4">480</data>
  <data key="d5">482</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb16">
  <data key="d0"> 480: libcrux_sha3_portable_keccak__vxarq_u64_4216(uint64_t a, uint64_t b) {
 481:   uint64_t ab = a ^ b;
 482:   return libcrux_sha3_portable_keccak_rotate_left_cb16(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4216</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb16</data>
  <data key="d3">执行旋转</data>
  <data key="d4">480</data>
  <data key="d5">482</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb16">
  <data key="d0"> 496: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb16(uint64_t a, uint64_t b) {
 497:   return libcrux_sha3_portable_keccak__vxarq_u64_4216(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4216</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb16</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">496</data>
  <data key="d5">497</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4217">
  <data key="d0"> 518: libcrux_sha3_portable_keccak__vxarq_u64_4217(uint64_t a, uint64_t b) {
 519:   uint64_t ab = a ^ b;
 520:   return libcrux_sha3_portable_keccak_rotate_left_cb17(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb17</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4217</data>
  <data key="d3">执行旋转</data>
  <data key="d4">518</data>
  <data key="d5">520</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb17">
  <data key="d0"> 518: libcrux_sha3_portable_keccak__vxarq_u64_4217(uint64_t a, uint64_t b) {
 519:   uint64_t ab = a ^ b;
 520:   return libcrux_sha3_portable_keccak_rotate_left_cb17(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4217</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb17</data>
  <data key="d3">执行旋转</data>
  <data key="d4">518</data>
  <data key="d5">520</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb17">
  <data key="d0"> 534: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb17(uint64_t a, uint64_t b) {
 535:   return libcrux_sha3_portable_keccak__vxarq_u64_4217(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4217</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb17</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">534</data>
  <data key="d5">535</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4218">
  <data key="d0"> 556: libcrux_sha3_portable_keccak__vxarq_u64_4218(uint64_t a, uint64_t b) {
 557:   uint64_t ab = a ^ b;
 558:   return libcrux_sha3_portable_keccak_rotate_left_cb18(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb18</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4218</data>
  <data key="d3">执行旋转</data>
  <data key="d4">556</data>
  <data key="d5">558</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb18">
  <data key="d0"> 556: libcrux_sha3_portable_keccak__vxarq_u64_4218(uint64_t a, uint64_t b) {
 557:   uint64_t ab = a ^ b;
 558:   return libcrux_sha3_portable_keccak_rotate_left_cb18(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4218</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb18</data>
  <data key="d3">执行旋转</data>
  <data key="d4">556</data>
  <data key="d5">558</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb18">
  <data key="d0"> 572: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb18(uint64_t a, uint64_t b) {
 573:   return libcrux_sha3_portable_keccak__vxarq_u64_4218(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4218</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb18</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">572</data>
  <data key="d5">573</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4219">
  <data key="d0"> 594: libcrux_sha3_portable_keccak__vxarq_u64_4219(uint64_t a, uint64_t b) {
 595:   uint64_t ab = a ^ b;
 596:   return libcrux_sha3_portable_keccak_rotate_left_cb19(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb19</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4219</data>
  <data key="d3">执行旋转</data>
  <data key="d4">594</data>
  <data key="d5">596</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb19">
  <data key="d0"> 594: libcrux_sha3_portable_keccak__vxarq_u64_4219(uint64_t a, uint64_t b) {
 595:   uint64_t ab = a ^ b;
 596:   return libcrux_sha3_portable_keccak_rotate_left_cb19(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4219</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb19</data>
  <data key="d3">执行旋转</data>
  <data key="d4">594</data>
  <data key="d5">596</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb19">
  <data key="d0"> 610: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb19(uint64_t a, uint64_t b) {
 611:   return libcrux_sha3_portable_keccak__vxarq_u64_4219(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4219</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb19</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">610</data>
  <data key="d5">611</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4220">
  <data key="d0"> 632: libcrux_sha3_portable_keccak__vxarq_u64_4220(uint64_t a, uint64_t b) {
 633:   uint64_t ab = a ^ b;
 634:   return libcrux_sha3_portable_keccak_rotate_left_cb20(ab);</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb20</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4220</data>
  <data key="d3">执行旋转</data>
  <data key="d4">632</data>
  <data key="d5">634</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb20">
  <data key="d0"> 632: libcrux_sha3_portable_keccak__vxarq_u64_4220(uint64_t a, uint64_t b) {
 633:   uint64_t ab = a ^ b;
 634:   return libcrux_sha3_portable_keccak_rotate_left_cb20(ab);</data>
  <data key="d2">libcrux_sha3_portable_keccak__vxarq_u64_4220</data>
  <data key="d1">libcrux_sha3_portable_keccak_rotate_left_cb20</data>
  <data key="d3">执行旋转</data>
  <data key="d4">632</data>
  <data key="d5">634</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb20">
  <data key="d0"> 648: libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb20(uint64_t a, uint64_t b) {
 649:   return libcrux_sha3_portable_keccak__vxarq_u64_4220(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak__vxarq_u64_4220</data>
  <data key="d2">libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb20</data>
  <data key="d3">执行XOR并旋转</data>
  <data key="d4">648</data>
  <data key="d5">649</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_2c0">
  <data key="d0">1228:     uint64_t (*s)[5U], Eurydice_slice blocks[1U]) {
1229:   for (size_t i = (size_t)0U; i &lt; (size_t)136U / (size_t)8U; i++) {
1230:     size_t i0 = i;
1231:     uint8_t uu____0[8U];
1232:     Result_56 dst;
1233:     Eurydice_slice_to_array2(
1234:         &amp;dst,
1235:         Eurydice_slice_subslice2(blocks[0U], (size_t)8U * i0,
1236:                                  (size_t)8U * i0 + (size_t)8U, uint8_t),
1237:         Eurydice_slice, uint8_t[8U]);
1238:     unwrap_41_ac(dst, uu____0);
1239:     size_t uu____1 = i0 / (size_t)5U;
1240:     size_t uu____2 = i0 % (size_t)5U;
1241:     s[uu____1][uu____2] =
1242:         s[uu____1][uu____2] ^ core_num__u64_9__from_le_bytes(uu____0);
1243:   }
1244: }
1245: 
1246: /**
1247: This function found in impl {(libcrux_sha3::traits::internal::KeccakItem&lt;1:
1248: usize&gt; for u64)}
1249: */
1250: /**
1251: A monomorphic instance of libcrux_sha3.portable_keccak.load_block_5a
1252: with const generics
1253: - RATE= 136
1254: */
1255: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_load_block_5a_b80(
1256:     uint64_t (*a)[5U], Eurydice_slice b[1U]) {
1257:   uint64_t(*uu____0)[5U] = a;
1258:   /* Passing arrays by value in Rust generates a copy in C */
1259:   Eurydice_slice copy_of_b[1U];
1260:   memcpy(copy_of_b, b, (size_t)1U * sizeof(Eurydice_slice));
1261:   libcrux_sha3_portable_keccak_load_block_2c0(uu____0, copy_of_b);
1262: }</data>
  <data key="d1">libcrux_sha3_portable_keccak_load_block_5a_b80</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_2c0</data>
  <data key="d3">执行加载块</data>
  <data key="d4">1228</data>
  <data key="d5">1262</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_5a_b80">
  <data key="d0">1256:     uint64_t (*a)[5U], Eurydice_slice b[1U]) {
1257:   uint64_t(*uu____0)[5U] = a;
1258:   /* Passing arrays by value in Rust generates a copy in C */
1259:   Eurydice_slice copy_of_b[1U];
1260:   memcpy(copy_of_b, b, (size_t)1U * sizeof(Eurydice_slice));
1261:   libcrux_sha3_portable_keccak_load_block_2c0(uu____0, copy_of_b);
1262: }
1263: 
1264: /**
1265: A monomorphic instance of libcrux_sha3.generic_keccak.absorb_block
1266: with types uint64_t
1267: with const generics
1268: - N= 1
1269: - RATE= 136
1270: */
1271: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_absorb_block_df0(
1272:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice blocks[1U]) {
1273:   uint64_t(*uu____0)[5U] = s-&gt;st;
1274:   Eurydice_slice uu____1[1U];
1275:   memcpy(uu____1, blocks, (size_t)1U * sizeof(Eurydice_slice));
1276:   libcrux_sha3_portable_keccak_load_block_5a_b80(uu____0, uu____1);
1277:   libcrux_sha3_generic_keccak_keccakf1600_21(s);</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_5a_b80</data>
  <data key="d1">libcrux_sha3_generic_keccak_absorb_block_df0</data>
  <data key="d3">执行吸收块</data>
  <data key="d4">1256</data>
  <data key="d5">1277</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_block_df0">
  <data key="d0">1256:     uint64_t (*a)[5U], Eurydice_slice b[1U]) {
1257:   uint64_t(*uu____0)[5U] = a;
1258:   /* Passing arrays by value in Rust generates a copy in C */
1259:   Eurydice_slice copy_of_b[1U];
1260:   memcpy(copy_of_b, b, (size_t)1U * sizeof(Eurydice_slice));
1261:   libcrux_sha3_portable_keccak_load_block_2c0(uu____0, copy_of_b);
1262: }
1263: 
1264: /**
1265: A monomorphic instance of libcrux_sha3.generic_keccak.absorb_block
1266: with types uint64_t
1267: with const generics
1268: - N= 1
1269: - RATE= 136
1270: */
1271: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_absorb_block_df0(
1272:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice blocks[1U]) {
1273:   uint64_t(*uu____0)[5U] = s-&gt;st;
1274:   Eurydice_slice uu____1[1U];
1275:   memcpy(uu____1, blocks, (size_t)1U * sizeof(Eurydice_slice));
1276:   libcrux_sha3_portable_keccak_load_block_5a_b80(uu____0, uu____1);
1277:   libcrux_sha3_generic_keccak_keccakf1600_21(s);</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_5a_b80</data>
  <data key="d1">libcrux_sha3_generic_keccak_absorb_block_df0</data>
  <data key="d3">执行吸收块</data>
  <data key="d4">1256</data>
  <data key="d5">1277</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_keccakf1600_21">
  <data key="d0"> 900:     libcrux_sha3_generic_keccak_pi_1d(s);
 901:     libcrux_sha3_generic_keccak_chi_12(s);
 902:     libcrux_sha3_generic_keccak_iota_62(s, i0);</data>
  <data key="d1">libcrux_sha3_generic_keccak_iota_62</data>
  <data key="d2">libcrux_sha3_generic_keccak_keccakf1600_21</data>
  <data key="d3">执行回合常量吸收</data>
  <data key="d4">900</data>
  <data key="d5">902</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_iota_62">
  <data key="d0"> 900:     libcrux_sha3_generic_keccak_pi_1d(s);
 901:     libcrux_sha3_generic_keccak_chi_12(s);
 902:     libcrux_sha3_generic_keccak_iota_62(s, i0);</data>
  <data key="d2">libcrux_sha3_generic_keccak_keccakf1600_21</data>
  <data key="d1">libcrux_sha3_generic_keccak_iota_62</data>
  <data key="d3">执行回合常量吸收</data>
  <data key="d4">900</data>
  <data key="d5">902</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_full_df0">
  <data key="d0">1286:     uint64_t (*s)[5U], uint8_t blocks[1U][200U]) {
1287:   Eurydice_slice buf[1U] = {
1288:       Eurydice_array_to_slice((size_t)200U, blocks[0U], uint8_t)};
1289:   libcrux_sha3_portable_keccak_load_block_2c0(s, buf);
1290: }</data>
  <data key="d1">libcrux_sha3_portable_keccak_load_block_5a_b80</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_full_df0</data>
  <data key="d3">执行全块加载</data>
  <data key="d4">1286</data>
  <data key="d5">1290</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_full_5a_d20">
  <data key="d0">1301: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_load_block_full_5a_d20(
1302:     uint64_t (*a)[5U], uint8_t b[1U][200U]) {</data>
  <data key="d1">libcrux_sha3_o_c</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_full_5a_d20</data>
  <data key="d3">执行加载全块</data>
  <data key="d4">1301</data>
  <data key="d5">1302</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_o_c">
  <data key="d0">1301: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_load_block_full_5a_d20(
1302:     uint64_t (*a)[5U], uint8_t b[1U][200U]) {</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_full_5a_d20</data>
  <data key="d1">libcrux_sha3_o_c</data>
  <data key="d3">执行加载全块</data>
  <data key="d4">1301</data>
  <data key="d5">1302</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf">
  <data key="d0">1106:     libcrux_sha3_generic_keccak_KeccakState_48 s, Eurydice_slice out[1U]) {
1107:   libcrux_sha3_generic_keccak_keccakf1600_21(&amp;s);
1108:   uint8_t b[1U][200U];</data>
  <data key="d1">libcrux_sha3_generic_keccak_squeeze_first_block_84</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_last_cf</data>
  <data key="d3">执行挤压最后块</data>
  <data key="d4">1106</data>
  <data key="d5">1108</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_block_84">
  <data key="d0">1081:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice out[1U]) {
1082:   libcrux_sha3_portable_keccak_store_block_5a_59(s-&gt;st, out);
1083: }
1084: 
1085: /**
1086: A monomorphic instance of libcrux_sha3.generic_keccak.squeeze_next_block
1087: with types uint64_t
1088: with const generics
1089: - N= 1
1090: - RATE= 72
1091: */
1092: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_squeeze_next_block_fc(
1093:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice out[1U]) {
1094:   libcrux_sha3_generic_keccak_keccakf1600_21(s);
1095:   libcrux_sha3_portable_keccak_store_block_5a_59(s-&gt;st, out);</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_first_block_84</data>
  <data key="d1">libcrux_sha3_generic_keccak_squeeze_next_block_fc</data>
  <data key="d3">执行挤压下一个块</data>
  <data key="d4">1081</data>
  <data key="d5">1095</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_next_block_fc">
  <data key="d0">1081:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice out[1U]) {
1082:   libcrux_sha3_portable_keccak_store_block_5a_59(s-&gt;st, out);
1083: }
1084: 
1085: /**
1086: A monomorphic instance of libcrux_sha3.generic_keccak.squeeze_next_block
1087: with types uint64_t
1088: with const generics
1089: - N= 1
1090: - RATE= 72
1091: */
1092: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_squeeze_next_block_fc(
1093:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice out[1U]) {
1094:   libcrux_sha3_generic_keccak_keccakf1600_21(s);
1095:   libcrux_sha3_portable_keccak_store_block_5a_59(s-&gt;st, out);</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_first_block_84</data>
  <data key="d1">libcrux_sha3_generic_keccak_squeeze_next_block_fc</data>
  <data key="d3">执行挤压下一个块</data>
  <data key="d4">1081</data>
  <data key="d5">1095</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_2d2">
  <data key="d0">   5: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_store_block_full_2d2(
   6:     uint64_t (*s)[5U], uint8_t ret[1U][200U]) {
   7:   uint8_t out[200U] = {0U};
   8:   Eurydice_slice buf[1U] = {
   9:       Eurydice_array_to_slice((size_t)200U, out, uint8_t)};
  10:   libcrux_sha3_portable_keccak_store_block_583(s, buf);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_583</data>
  <data key="d2">libcrux_sha3_portable_keccak_store_block_full_2d2</data>
  <data key="d3">存储数据块</data>
  <data key="d4">5</data>
  <data key="d5">10</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_583">
  <data key="d0">   5: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_store_block_full_2d2(
   6:     uint64_t (*s)[5U], uint8_t ret[1U][200U]) {
   7:   uint8_t out[200U] = {0U};
   8:   Eurydice_slice buf[1U] = {
   9:       Eurydice_array_to_slice((size_t)200U, out, uint8_t)};
  10:   libcrux_sha3_portable_keccak_store_block_583(s, buf);</data>
  <data key="d2">libcrux_sha3_portable_keccak_store_block_full_2d2</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_583</data>
  <data key="d3">存储数据块</data>
  <data key="d4">5</data>
  <data key="d5">10</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_292">
  <data key="d0">  26: static KRML_MUSTINLINE void
  27: libcrux_sha3_portable_keccak_store_block_full_5a_292(uint64_t (*a)[5U],
  28:                                                      uint8_t ret[1U][200U]) {
  29:   libcrux_sha3_portable_keccak_store_block_full_2d2(a, ret);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_full_2d2</data>
  <data key="d2">libcrux_sha3_portable_keccak_store_block_full_5a_292</data>
  <data key="d3">调用另一个存储函数</data>
  <data key="d4">26</data>
  <data key="d5">29</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_and_last_c52">
  <data key="d0">  40: libcrux_sha3_generic_keccak_squeeze_first_and_last_c52(
  41:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice out[1U]) {
  42:   uint8_t b[1U][200U];
  43:   libcrux_sha3_portable_keccak_store_block_full_5a_292(s-&gt;st, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_full_5a_292</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_first_and_last_c52</data>
  <data key="d3">处理并压缩数据</data>
  <data key="d4">40</data>
  <data key="d5">43</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_5a_593">
  <data key="d0">  68: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_store_block_5a_593(
  69:     uint64_t (*a)[5U], Eurydice_slice b[1U]) {
  70:   libcrux_sha3_portable_keccak_store_block_583(a, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_583</data>
  <data key="d2">libcrux_sha3_portable_keccak_store_block_5a_593</data>
  <data key="d3">存储数据块</data>
  <data key="d4">68</data>
  <data key="d5">70</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_block_843">
  <data key="d0">  80: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_squeeze_first_block_843(
  81:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice out[1U]) {
  82:   libcrux_sha3_portable_keccak_store_block_5a_593(s-&gt;st, out);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_5a_593</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_first_block_843</data>
  <data key="d3">提取第一个数据块</data>
  <data key="d4">80</data>
  <data key="d5">82</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_next_block_fc3">
  <data key="d0">  95:   libcrux_sha3_portable_keccak_store_block_5a_593(s-&gt;st, out);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_5a_593</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_next_block_fc3</data>
  <data key="d3">提取下一个数据块</data>
  <data key="d4">95</data>
  <data key="d5">95</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf2">
  <data key="d0"> 109:   libcrux_sha3_portable_keccak_store_block_full_5a_292(s.st, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_full_5a_292</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_last_cf2</data>
  <data key="d3">处理最后一个数据块</data>
  <data key="d4">109</data>
  <data key="d5">109</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_5a_b83">
  <data key="d0"> 310: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_load_block_5a_b83(
 311:     uint64_t (*a)[5U], Eurydice_slice b[1U]) {
 312:   uint64_t(*uu____0)[5U] = a;
 313:   /* Passing arrays by value in Rust generates a copy in C */
 314:   Eurydice_slice copy_of_b[1U];
 315:   memcpy(copy_of_b, b, (size_t)1U * sizeof(Eurydice_slice));
 316:   libcrux_sha3_portable_keccak_load_block_2c1(uu____0, copy_of_b);</data>
  <data key="d1">libcrux_sha3_portable_keccak_load_block_2c1</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_5a_b83</data>
  <data key="d3">加载数据块</data>
  <data key="d4">310</data>
  <data key="d5">316</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_2c1">
  <data key="d0"> 310: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_load_block_5a_b83(
 311:     uint64_t (*a)[5U], Eurydice_slice b[1U]) {
 312:   uint64_t(*uu____0)[5U] = a;
 313:   /* Passing arrays by value in Rust generates a copy in C */
 314:   Eurydice_slice copy_of_b[1U];
 315:   memcpy(copy_of_b, b, (size_t)1U * sizeof(Eurydice_slice));
 316:   libcrux_sha3_portable_keccak_load_block_2c1(uu____0, copy_of_b);</data>
  <data key="d2">libcrux_sha3_portable_keccak_load_block_5a_b83</data>
  <data key="d1">libcrux_sha3_portable_keccak_load_block_2c1</data>
  <data key="d3">加载数据块</data>
  <data key="d4">310</data>
  <data key="d5">316</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_block_df3">
  <data key="d0"> 326: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_absorb_block_df3(
 327:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice blocks[1U]) {
 328:   uint64_t(*uu____0)[5U] = s-&gt;st;
 329:   Eurydice_slice uu____1[1U];
 330:   memcpy(uu____1, blocks, (size_t)1U * sizeof(Eurydice_slice));
 331:   libcrux_sha3_portable_keccak_load_block_5a_b83(uu____0, uu____1);</data>
  <data key="d1">libcrux_sha3_portable_keccak_load_block_5a_b83</data>
  <data key="d2">libcrux_sha3_generic_keccak_absorb_block_df3</data>
  <data key="d3">吸收数据块</data>
  <data key="d4">326</data>
  <data key="d5">331</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_2d3">
  <data key="d0"> 340: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_store_block_full_2d3(
 341:     uint64_t (*s)[5U], uint8_t ret[1U][200U]) {
 342:   uint8_t out[200U] = {0U};
 343:   Eurydice_slice buf[1U] = {
 344:       Eurydice_array_to_slice((size_t)200U, out, uint8_t)};
 345:   libcrux_sha3_portable_keccak_store_block_581(s, buf);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_581</data>
  <data key="d2">libcrux_sha3_portable_keccak_store_block_full_2d3</data>
  <data key="d3">存储数据块</data>
  <data key="d4">340</data>
  <data key="d5">345</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_581">
  <data key="d0"> 340: static KRML_MUSTINLINE void libcrux_sha3_portable_keccak_store_block_full_2d3(
 341:     uint64_t (*s)[5U], uint8_t ret[1U][200U]) {
 342:   uint8_t out[200U] = {0U};
 343:   Eurydice_slice buf[1U] = {
 344:       Eurydice_array_to_slice((size_t)200U, out, uint8_t)};
 345:   libcrux_sha3_portable_keccak_store_block_581(s, buf);</data>
  <data key="d2">libcrux_sha3_portable_keccak_store_block_full_2d3</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_581</data>
  <data key="d3">存储数据块</data>
  <data key="d4">340</data>
  <data key="d5">345</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_293">
  <data key="d0"> 361: static KRML_MUSTINLINE void
 362: libcrux_sha3_portable_keccak_store_block_full_5a_293(uint64_t (*a)[5U],
 363:                                                      uint8_t ret[1U][200U]) {
 364:   libcrux_sha3_portable_keccak_store_block_full_2d3(a, ret);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_full_2d3</data>
  <data key="d2">libcrux_sha3_portable_keccak_store_block_full_5a_293</data>
  <data key="d3">存储数据块</data>
  <data key="d4">361</data>
  <data key="d5">364</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_and_last_c53">
  <data key="d0"> 375: libcrux_sha3_generic_keccak_squeeze_first_and_last_c53(
 376:     libcrux_sha3_generic_keccak_KeccakState_48 *s, Eurydice_slice out[1U]) {
 377:   uint8_t b[1U][200U];
 378:   libcrux_sha3_portable_keccak_store_block_full_5a_293(s-&gt;st, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_full_5a_293</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_first_and_last_c53</data>
  <data key="d3">处理并压缩数据</data>
  <data key="d4">375</data>
  <data key="d5">378</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf3">
  <data key="d0"> 405:   libcrux_sha3_portable_keccak_store_block_full_5a_293(s.st, b);</data>
  <data key="d1">libcrux_sha3_portable_keccak_store_block_full_5a_293</data>
  <data key="d2">libcrux_sha3_generic_keccak_squeeze_last_cf3</data>
  <data key="d3">处理最后一个数据块</data>
  <data key="d4">405</data>
  <data key="d5">405</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccakx1_ce3">
  <data key="d0"> 204: static KRML_MUSTINLINE void libcrux_sha3_portable_keccakx1_ce3(
 205:     Eurydice_slice data[1U], Eurydice_slice out[1U]) {
 206:   /* Passing arrays by value in Rust generates a copy in C */
 207:   Eurydice_slice copy_of_data[1U];
 208:   memcpy(copy_of_data, data, (size_t)1U * sizeof(Eurydice_slice));
 209:   libcrux_sha3_generic_keccak_keccak_e93(copy_of_data, out);</data>
  <data key="d1">libcrux_sha3_generic_keccak_keccak_e93</data>
  <data key="d2">libcrux_sha3_portable_keccakx1_ce3</data>
  <data key="d3">处理数据</data>
  <data key="d4">204</data>
  <data key="d5">209</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_keccak_e93">
  <data key="d0"> 204: static KRML_MUSTINLINE void libcrux_sha3_portable_keccakx1_ce3(
 205:     Eurydice_slice data[1U], Eurydice_slice out[1U]) {
 206:   /* Passing arrays by value in Rust generates a copy in C */
 207:   Eurydice_slice copy_of_data[1U];
 208:   memcpy(copy_of_data, data, (size_t)1U * sizeof(Eurydice_slice));
 209:   libcrux_sha3_generic_keccak_keccak_e93(copy_of_data, out);</data>
  <data key="d2">libcrux_sha3_portable_keccakx1_ce3</data>
  <data key="d1">libcrux_sha3_generic_keccak_keccak_e93</data>
  <data key="d3">处理数据</data>
  <data key="d4">204</data>
  <data key="d5">209</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha384">
  <data key="d0"> 215: static KRML_MUSTINLINE void libcrux_sha3_portable_sha384(Eurydice_slice digest,
 216:                                                          Eurydice_slice data) {
 217:   Eurydice_slice buf0[1U] = {data};
 218:   Eurydice_slice buf[1U] = {digest};
 219:   libcrux_sha3_portable_keccakx1_ce3(buf0, buf);
 220: }</data>
  <data key="d1">libcrux_sha3_portable_keccakx1_ce3</data>
  <data key="d2">libcrux_sha3_portable_sha384</data>
  <data key="d3">处理SHA384数据</data>
  <data key="d4">215</data>
  <data key="d5">220</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha224_ema">
  <data key="d0"> 228: static KRML_MUSTINLINE void libcrux_sha3_sha224_ema(Eurydice_slice digest,
 229:                                                     Eurydice_slice payload) {
 230:   libcrux_sha3_portable_sha224(digest, payload);
 231: }</data>
  <data key="d1">libcrux_sha3_portable_sha224</data>
  <data key="d2">libcrux_sha3_sha224_ema</data>
  <data key="d3">处理SHA224数据</data>
  <data key="d4">228</data>
  <data key="d5">231</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha224">
  <data key="d0"> 228: static KRML_MUSTINLINE void libcrux_sha3_sha224_ema(Eurydice_slice digest,
 229:                                                     Eurydice_slice payload) {
 230:   libcrux_sha3_portable_sha224(digest, payload);
 231: }</data>
  <data key="d2">libcrux_sha3_sha224_ema</data>
  <data key="d1">libcrux_sha3_portable_sha224</data>
  <data key="d3">处理SHA224数据</data>
  <data key="d4">228</data>
  <data key="d5">231</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha224">
  <data key="d0"> 236: static KRML_MUSTINLINE void libcrux_sha3_sha224(Eurydice_slice data,
 237:                                                 uint8_t ret[28U]) {
 238:   uint8_t out[28U] = {0U};
 239:   libcrux_sha3_sha224_ema(Eurydice_array_to_slice((size_t)28U, out, uint8_t),
 240:                           data);
 241:   memcpy(ret, out, (size_t)28U * sizeof(uint8_t));</data>
  <data key="d1">libcrux_sha3_sha224_ema</data>
  <data key="d2">libcrux_sha3_sha224</data>
  <data key="d3">处理SHA224数据</data>
  <data key="d4">236</data>
  <data key="d5">241</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha256_ema">
  <data key="d0"> 248:                                                     Eurydice_slice payload) {
 249:   libcrux_sha3_portable_sha256(digest, payload);</data>
  <data key="d1">libcrux_sha3_portable_sha256</data>
  <data key="d2">libcrux_sha3_sha256_ema</data>
  <data key="d3">处理SHA256数据</data>
  <data key="d4">248</data>
  <data key="d5">249</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha256">
  <data key="d0"> 248:                                                     Eurydice_slice payload) {
 249:   libcrux_sha3_portable_sha256(digest, payload);</data>
  <data key="d2">libcrux_sha3_sha256_ema</data>
  <data key="d1">libcrux_sha3_portable_sha256</data>
  <data key="d3">处理SHA256数据</data>
  <data key="d4">248</data>
  <data key="d5">249</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha256">
  <data key="d0"> 255: static KRML_MUSTINLINE void libcrux_sha3_sha256(Eurydice_slice data,
 256:                                                 uint8_t ret[32U]) {
 257:   uint8_t out[32U] = {0U};
 258:   libcrux_sha3_sha256_ema(Eurydice_array_to_slice((size_t)32U, out, uint8_t),
 259:                           data);
 260:   memcpy(ret, out, (size_t)32U * sizeof(uint8_t));</data>
  <data key="d1">libcrux_sha3_sha256_ema</data>
  <data key="d2">libcrux_sha3_sha256</data>
  <data key="d3">处理SHA256数据</data>
  <data key="d4">255</data>
  <data key="d5">260</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha384_ema">
  <data key="d0"> 266: static KRML_MUSTINLINE void libcrux_sha3_sha384_ema(Eurydice_slice digest,
 267:                                                     Eurydice_slice payload) {
 268:   libcrux_sha3_portable_sha384(digest, payload);
 269: }</data>
  <data key="d1">libcrux_sha3_portable_sha384</data>
  <data key="d2">libcrux_sha3_sha384_ema</data>
  <data key="d3">处理SHA384数据</data>
  <data key="d4">266</data>
  <data key="d5">269</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha384">
  <data key="d0"> 274: static KRML_MUSTINLINE void libcrux_sha3_sha384(Eurydice_slice data,
 275:                                                 uint8_t ret[48U]) {
 276:   uint8_t out[48U] = {0U};
 277:   libcrux_sha3_sha384_ema(Eurydice_array_to_slice((size_t)48U, out, uint8_t),
 278:                           data);
 279:   memcpy(ret, out, (size_t)48U * sizeof(uint8_t));</data>
  <data key="d1">libcrux_sha3_sha384_ema</data>
  <data key="d2">libcrux_sha3_sha384</data>
  <data key="d3">处理SHA384数据</data>
  <data key="d4">274</data>
  <data key="d5">279</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha512_ema">
  <data key="d0"> 285: static KRML_MUSTINLINE void libcrux_sha3_sha512_ema(Eurydice_slice digest,
 286:                                                     Eurydice_slice payload) {
 287:   libcrux_sha3_portable_sha512(digest, payload);
 288: }</data>
  <data key="d1">libcrux_sha3_portable_sha512</data>
  <data key="d2">libcrux_sha3_sha512_ema</data>
  <data key="d3">处理SHA512数据</data>
  <data key="d4">285</data>
  <data key="d5">288</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha512">
  <data key="d0"> 285: static KRML_MUSTINLINE void libcrux_sha3_sha512_ema(Eurydice_slice digest,
 286:                                                     Eurydice_slice payload) {
 287:   libcrux_sha3_portable_sha512(digest, payload);
 288: }</data>
  <data key="d2">libcrux_sha3_sha512_ema</data>
  <data key="d1">libcrux_sha3_portable_sha512</data>
  <data key="d3">处理SHA512数据</data>
  <data key="d4">285</data>
  <data key="d5">288</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_sha512">
  <data key="d0"> 293: static KRML_MUSTINLINE void libcrux_sha3_sha512(Eurydice_slice data,
 294:                                                 uint8_t ret[64U]) {
 295:   uint8_t out[64U] = {0U};
 296:   libcrux_sha3_sha512_ema(Eurydice_array_to_slice((size_t)64U, out, uint8_t),
 297:                           data);
 298:   memcpy(ret, out, (size_t)64U * sizeof(uint8_t));</data>
  <data key="d1">libcrux_sha3_sha512_ema</data>
  <data key="d2">libcrux_sha3_sha512</data>
  <data key="d3">处理SHA512数据</data>
  <data key="d4">293</data>
  <data key="d5">298</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_fill_buffer_9d_b0">
  <data key="d0"> 888: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_absorb_9d_7b(
 889:     libcrux_sha3_generic_keccak_KeccakXofState_4f *self,
 890:     Eurydice_slice inputs[1U]) {
 891:   libcrux_sha3_generic_keccak_KeccakXofState_4f *uu____0 = self;
 892:   /* Passing arrays by value in Rust generates a copy in C */
 893:   Eurydice_slice copy_of_inputs[1U];
 894:   memcpy(copy_of_inputs, inputs, (size_t)1U * sizeof(Eurydice_slice));
 895:   size_t input_remainder_len =
 896:       libcrux_sha3_generic_keccak_absorb_full_9d_f8(uu____0, copy_of_inputs);</data>
  <data key="d1">libcrux_sha3_generic_keccak_absorb_full_9d_f8</data>
  <data key="d2">libcrux_sha3_generic_keccak_fill_buffer_9d_b0</data>
  <data key="d3">填充数据块</data>
  <data key="d4">888</data>
  <data key="d5">896</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_full_9d_f8">
  <data key="d0"> 888: static KRML_MUSTINLINE void libcrux_sha3_generic_keccak_absorb_9d_7b(
 889:     libcrux_sha3_generic_keccak_KeccakXofState_4f *self,
 890:     Eurydice_slice inputs[1U]) {
 891:   libcrux_sha3_generic_keccak_KeccakXofState_4f *uu____0 = self;
 892:   /* Passing arrays by value in Rust generates a copy in C */
 893:   Eurydice_slice copy_of_inputs[1U];
 894:   memcpy(copy_of_inputs, inputs, (size_t)1U * sizeof(Eurydice_slice));
 895:   size_t input_remainder_len =
 896:       libcrux_sha3_generic_keccak_absorb_full_9d_f8(uu____0, copy_of_inputs);</data>
  <data key="d2">libcrux_sha3_generic_keccak_fill_buffer_9d_b0</data>
  <data key="d1">libcrux_sha3_generic_keccak_absorb_full_9d_f8</data>
  <data key="d3">填充数据块</data>
  <data key="d4">888</data>
  <data key="d5">896</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_9d_7b">
  <data key="d0"> 922: static inline void libcrux_sha3_portable_incremental_absorb_7d(
 923:     libcrux_sha3_generic_keccak_KeccakXofState_4f *self, Eurydice_slice input) {
 924:   Eurydice_slice buf[1U] = {input};
 925:   libcrux_sha3_generic_keccak_absorb_9d_7b(self, buf);
 926: }</data>
  <data key="d1">libcrux_sha3_portable_incremental_absorb_final</data>
  <data key="d2">libcrux_sha3_generic_keccak_absorb_9d_7b</data>
  <data key="d3">处理最后的吸收</data>
  <data key="d4">922</data>
  <data key="d5">926</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_incremental_absorb_final">
  <data key="d0"> 922: static inline void libcrux_sha3_portable_incremental_absorb_7d(
 923:     libcrux_sha3_generic_keccak_KeccakXofState_4f *self, Eurydice_slice input) {
 924:   Eurydice_slice buf[1U] = {input};
 925:   libcrux_sha3_generic_keccak_absorb_9d_7b(self, buf);
 926: }</data>
  <data key="d2">libcrux_sha3_generic_keccak_absorb_9d_7b</data>
  <data key="d1">libcrux_sha3_portable_incremental_absorb_final</data>
  <data key="d3">处理最后的吸收</data>
  <data key="d4">922</data>
  <data key="d5">926</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc">
  <data key="d0">772:       uu____2, libcrux_ml_kem_types_from_b6_da(copy_of_public_key));</data>
  <data key="d1">libcrux_ml_kem_types_from_17_35</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d3">返回密钥对</data>
  <data key="d4">772</data>
  <data key="d5">772</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_variant_cpa_keygen_seed_d8_0e">
  <data key="d0">603: libcrux_ml_kem_ind_cpa_generate_keypair_fc(Eurydice_slice key_generation_seed) {
604:   uint8_t hashed[64U];
605:   libcrux_ml_kem_variant_cpa_keygen_seed_d8_0e(key_generation_seed, hashed);
606:   Eurydice_slice_uint8_t_x2 uu____0 = Eurydice_slice_split_at(</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_variant_cpa_keygen_seed_d8_0e</data>
  <data key="d3">生成密钥对</data>
  <data key="d4">603</data>
  <data key="d5">606</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_utils_into_padded_array_ea1">
  <data key="d0">613:   libcrux_ml_kem_utils_into_padded_array_ea1(seed_for_A0, ret);</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_utils_into_padded_array_ea1</data>
  <data key="d3">填充数组</data>
  <data key="d4">613</data>
  <data key="d5">613</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_matrix_sample_matrix_A_38">
  <data key="d0">614:   libcrux_ml_kem_matrix_sample_matrix_A_38(ret, true, A_transpose);</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_matrix_sample_matrix_A_38</data>
  <data key="d3">抽样矩阵A</data>
  <data key="d4">614</data>
  <data key="d5">614</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_utils_into_padded_array_ea2">
  <data key="d0">616:   libcrux_ml_kem_utils_into_padded_array_ea2(seed_for_secret_and_error,</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_utils_into_padded_array_ea2</data>
  <data key="d3">填充数组</data>
  <data key="d4">616</data>
  <data key="d5">616</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_sample_vector_cbd_then_ntt_fc">
  <data key="d0">621:   tuple_b0 uu____2 = libcrux_ml_kem_ind_cpa_sample_vector_cbd_then_ntt_fc(
622:       copy_of_prf_input0, 0U);</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_ind_cpa_sample_vector_cbd_then_ntt_fc</data>
  <data key="d3">采样向量</data>
  <data key="d4">621</data>
  <data key="d5">622</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_matrix_compute_As_plus_e_60">
  <data key="d0">639:   libcrux_ml_kem_matrix_compute_As_plus_e_60(A_transpose, secret_as_ntt,
640:                                              error_as_ntt, t_as_ntt);</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_matrix_compute_As_plus_e_60</data>
  <data key="d3">计算矩阵结果</data>
  <data key="d4">639</data>
  <data key="d5">640</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_serialize_public_key_79">
  <data key="d0">646:   libcrux_ml_kem_ind_cpa_serialize_public_key_79(</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_ind_cpa_serialize_public_key_79</data>
  <data key="d3">序列化公钥</data>
  <data key="d4">646</data>
  <data key="d5">646</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_serialize_secret_key_b5">
  <data key="d0">650:   libcrux_ml_kem_ind_cpa_serialize_secret_key_b5(secret_as_ntt,</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_ind_cpa_serialize_secret_key_b5</data>
  <data key="d3">序列化私钥</data>
  <data key="d4">650</data>
  <data key="d5">650</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|memcpy">
  <data key="d0">753:   memcpy(ind_cpa_private_key, uu____0.fst, (size_t)1152U * sizeof(uint8_t));</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">memcpy</data>
  <data key="d3">复制密钥</data>
  <data key="d4">753</data>
  <data key="d5">753</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_types_from_05_f2">
  <data key="d0">766:       libcrux_ml_kem_types_from_05_f2(copy_of_secret_key_serialized);</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_types_from_05_f2</data>
  <data key="d3">转换私钥类型</data>
  <data key="d4">766</data>
  <data key="d5">766</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_types_from_17_35">
  <data key="d0">772:       uu____2, libcrux_ml_kem_types_from_b6_da(copy_of_public_key));</data>
  <data key="d2">libcrux_ml_kem_ind_cpa_generate_keypair_fc</data>
  <data key="d1">libcrux_ml_kem_types_from_17_35</data>
  <data key="d3">返回密钥对</data>
  <data key="d4">772</data>
  <data key="d5">772</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_decapsulate_700">
  <data key="d0">919:   libcrux_ml_kem_ind_cpa_encrypt_60(uu____5, copy_of_decrypted,</data>
  <data key="d1">libcrux_ml_kem_ind_cpa_encrypt_60</data>
  <data key="d2">libcrux_ml_kem_ind_cca_decapsulate_700</data>
  <data key="d3">加密</data>
  <data key="d4">919</data>
  <data key="d5">919</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_decrypt_43">
  <data key="d0">884:   libcrux_ml_kem_ind_cpa_decrypt_43(ind_cpa_secret_key, ciphertext-&gt;value,</data>
  <data key="d2">libcrux_ml_kem_ind_cca_decapsulate_700</data>
  <data key="d1">libcrux_ml_kem_ind_cpa_decrypt_43</data>
  <data key="d3">解密</data>
  <data key="d4">884</data>
  <data key="d5">884</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_utils_into_padded_array_ea">
  <data key="d0">887:   libcrux_ml_kem_utils_into_padded_array_ea(
888:       Eurydice_array_to_slice((size_t)32U, decrypted, uint8_t), to_hash0);</data>
  <data key="d2">libcrux_ml_kem_ind_cca_decapsulate_700</data>
  <data key="d1">libcrux_ml_kem_utils_into_padded_array_ea</data>
  <data key="d3">填充数组</data>
  <data key="d4">887</data>
  <data key="d5">888</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_encrypt_60">
  <data key="d0">919:   libcrux_ml_kem_ind_cpa_encrypt_60(uu____5, copy_of_decrypted,</data>
  <data key="d2">libcrux_ml_kem_ind_cca_decapsulate_700</data>
  <data key="d1">libcrux_ml_kem_ind_cpa_encrypt_60</data>
  <data key="d3">加密</data>
  <data key="d4">919</data>
  <data key="d5">919</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_variant_kdf_33_f0">
  <data key="d0">839:   libcrux_ml_kem_hash_functions_portable_PRF_f1_ee(</data>
  <data key="d1">libcrux_ml_kem_hash_functions_portable_PRF_f1_ee</data>
  <data key="d2">libcrux_ml_kem_variant_kdf_33_f0</data>
  <data key="d3">伪随机函数计算</data>
  <data key="d4">839</data>
  <data key="d5">839</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_hash_functions_portable_H_f1_1a">
  <data key="d0">831:   libcrux_ml_kem_hash_functions_portable_H_f1_1a(</data>
  <data key="d2">libcrux_ml_kem_variant_kdf_33_f0</data>
  <data key="d1">libcrux_ml_kem_hash_functions_portable_H_f1_1a</data>
  <data key="d3">哈希处理</data>
  <data key="d4">831</data>
  <data key="d5">831</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_hash_functions_portable_PRF_f1_ee">
  <data key="d0">839:   libcrux_ml_kem_hash_functions_portable_PRF_f1_ee(</data>
  <data key="d2">libcrux_ml_kem_variant_kdf_33_f0</data>
  <data key="d1">libcrux_ml_kem_hash_functions_portable_PRF_f1_ee</data>
  <data key="d3">伪随机函数计算</data>
  <data key="d4">839</data>
  <data key="d5">839</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_kyber_encapsulate_7a">
  <data key="d0">118: libcrux_ml_kem_ind_cca_instantiations_portable_kyber_encapsulate_7a(
119:     libcrux_ml_kem_types_MlKemPublicKey_15 *public_key,
120:     uint8_t randomness[32U]) {
121:   libcrux_ml_kem_types_MlKemPublicKey_15 *uu____0 = public_key;
122:   /* Passing arrays by value in Rust generates a copy in C */
123:   uint8_t copy_of_randomness[32U];
124:   memcpy(copy_of_randomness, randomness, (size_t)32U * sizeof(uint8_t));
125:   return libcrux_ml_kem_ind_cca_encapsulate_cd0(uu____0, copy_of_randomness);</data>
  <data key="d1">libcrux_ml_kem_ind_cca_encapsulate_cd0</data>
  <data key="d2">libcrux_ml_kem_ind_cca_instantiations_portable_kyber_encapsulate_7a</data>
  <data key="d3">执行加密操作</data>
  <data key="d4">118</data>
  <data key="d5">125</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_encapsulate_cd0">
  <data key="d0">118: libcrux_ml_kem_ind_cca_instantiations_portable_kyber_encapsulate_7a(
119:     libcrux_ml_kem_types_MlKemPublicKey_15 *public_key,
120:     uint8_t randomness[32U]) {
121:   libcrux_ml_kem_types_MlKemPublicKey_15 *uu____0 = public_key;
122:   /* Passing arrays by value in Rust generates a copy in C */
123:   uint8_t copy_of_randomness[32U];
124:   memcpy(copy_of_randomness, randomness, (size_t)32U * sizeof(uint8_t));
125:   return libcrux_ml_kem_ind_cca_encapsulate_cd0(uu____0, copy_of_randomness);</data>
  <data key="d2">libcrux_ml_kem_ind_cca_instantiations_portable_kyber_encapsulate_7a</data>
  <data key="d1">libcrux_ml_kem_ind_cca_encapsulate_cd0</data>
  <data key="d3">执行加密操作</data>
  <data key="d4">118</data>
  <data key="d5">125</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_generate_keypair_8c0">
  <data key="d0">271:       libcrux_ml_kem_ind_cpa_generate_keypair_fc0(ind_cpa_keypair_randomness);
272:   uint8_t ind_cpa_private_key[1152U];
273:   memcpy(ind_cpa_private_key, uu____0.fst, (size_t)1152U * sizeof(uint8_t));
274:   uint8_t public_key[1184U];
275:   memcpy(public_key, uu____0.snd, (size_t)1184U * sizeof(uint8_t));</data>
  <data key="d1">libcrux_ml_kem_ind_cca_generate_keypair_fc0</data>
  <data key="d2">libcrux_ml_kem_ind_cca_generate_keypair_8c0</data>
  <data key="d3">返回密钥对</data>
  <data key="d4">271</data>
  <data key="d5">275</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_variant_cpa_keygen_seed_33_b6">
  <data key="d0">174: libcrux_ml_kem_ind_cpa_generate_keypair_fc0(
175:     Eurydice_slice key_generation_seed) {
176:   uint8_t hashed[64U];
177:   libcrux_ml_kem_variant_cpa_keygen_seed_33_b6(key_generation_seed, hashed);</data>
  <data key="d2">libcrux_ml_kem_ind_cca_generate_keypair_8c0</data>
  <data key="d1">libcrux_ml_kem_variant_cpa_keygen_seed_33_b6</data>
  <data key="d3">生成密钥对</data>
  <data key="d4">174</data>
  <data key="d5">177</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_generate_keypair_fc0">
  <data key="d0">271:       libcrux_ml_kem_ind_cpa_generate_keypair_fc0(ind_cpa_keypair_randomness);
272:   uint8_t ind_cpa_private_key[1152U];
273:   memcpy(ind_cpa_private_key, uu____0.fst, (size_t)1152U * sizeof(uint8_t));
274:   uint8_t public_key[1184U];
275:   memcpy(public_key, uu____0.snd, (size_t)1184U * sizeof(uint8_t));</data>
  <data key="d2">libcrux_ml_kem_ind_cca_generate_keypair_8c0</data>
  <data key="d1">libcrux_ml_kem_ind_cca_generate_keypair_fc0</data>
  <data key="d3">返回密钥对</data>
  <data key="d4">271</data>
  <data key="d5">275</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_kyber_generate_keypair_9b">
  <data key="d0">313:   return libcrux_ml_kem_ind_cca_generate_keypair_8c0(copy_of_randomness);</data>
  <data key="d1">libcrux_ml_kem_ind_cca_generate_keypair_8c0</data>
  <data key="d2">libcrux_ml_kem_ind_cca_instantiations_portable_kyber_generate_keypair_9b</data>
  <data key="d3">生成密钥对</data>
  <data key="d4">313</data>
  <data key="d5">313</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_mlkem768_portable_kyber_generate_key_pair">
  <data key="d0">325:   return libcrux_ml_kem_ind_cca_instantiations_portable_kyber_generate_keypair_9b(</data>
  <data key="d1">libcrux_ml_kem_ind_cca_instantiations_portable_kyber_generate_keypair_9b</data>
  <data key="d2">libcrux_ml_kem_mlkem768_portable_kyber_generate_key_pair</data>
  <data key="d3">生成密钥对</data>
  <data key="d4">325</data>
  <data key="d5">325</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_validate_private_key_e7">
  <data key="d0">348:   libcrux_ml_kem_hash_functions_portable_H_f1_1a(</data>
  <data key="d1">libcrux_ml_kem_hash_functions_portable_H_f1_1a</data>
  <data key="d2">libcrux_ml_kem_ind_cca_validate_private_key_e7</data>
  <data key="d3">验证私钥</data>
  <data key="d4">348</data>
  <data key="d5">348</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_validate_private_key_9c">
  <data key="d0">375:   return libcrux_ml_kem_ind_cca_validate_private_key_e7(private_key,
376:                                                         ciphertext);</data>
  <data key="d1">libcrux_ml_kem_ind_cca_validate_private_key_e7</data>
  <data key="d2">libcrux_ml_kem_ind_cca_instantiations_portable_validate_private_key_9c</data>
  <data key="d3">验证私钥</data>
  <data key="d4">375</data>
  <data key="d5">376</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_mlkem768_portable_validate_private_key">
  <data key="d0">387:   return libcrux_ml_kem_ind_cca_instantiations_portable_validate_private_key_9c(
388:       private_key, ciphertext);</data>
  <data key="d1">libcrux_ml_kem_ind_cca_instantiations_portable_validate_private_key_9c</data>
  <data key="d2">libcrux_ml_kem_mlkem768_portable_validate_private_key</data>
  <data key="d3">验证私钥</data>
  <data key="d4">387</data>
  <data key="d5">388</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_validate_public_key_19">
  <data key="d0">463:   libcrux_ml_kem_serialize_deserialize_ring_elements_reduced_330(
464:       Eurydice_array_to_subslice_to((size_t)1184U, public_key, (size_t)1152U,</data>
  <data key="d1">libcrux_ml_kem_serialize_deserialize_ring_elements_reduced_330</data>
  <data key="d2">libcrux_ml_kem_ind_cca_validate_public_key_19</data>
  <data key="d3">验证公钥</data>
  <data key="d4">463</data>
  <data key="d5">464</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_serialize_deserialize_ring_elements_reduced_330">
  <data key="d0">463:   libcrux_ml_kem_serialize_deserialize_ring_elements_reduced_330(
464:       Eurydice_array_to_subslice_to((size_t)1184U, public_key, (size_t)1152U,</data>
  <data key="d2">libcrux_ml_kem_ind_cca_validate_public_key_19</data>
  <data key="d1">libcrux_ml_kem_serialize_deserialize_ring_elements_reduced_330</data>
  <data key="d3">验证公钥</data>
  <data key="d4">463</data>
  <data key="d5">464</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_validate_public_key_4b">
  <data key="d0">492:   return libcrux_ml_kem_ind_cca_validate_public_key_19(public_key);</data>
  <data key="d1">libcrux_ml_kem_ind_cca_validate_public_key_19</data>
  <data key="d2">libcrux_ml_kem_ind_cca_instantiations_portable_validate_public_key_4b</data>
  <data key="d3">验证公钥</data>
  <data key="d4">492</data>
  <data key="d5">492</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="libcrux_mlkem768_sha3.h|libcrux_ml_kem_mlkem768_portable_validate_public_key">
  <data key="d0">501:     libcrux_ml_kem_types_MlKemPublicKey_15 *public_key) {
502:   return libcrux_ml_kem_ind_cca_instantiations_portable_validate_public_key_4b(</data>
  <data key="d1">libcrux_ml_kem_ind_cca_instantiations_portable_validate_public_key_4b</data>
  <data key="d2">libcrux_ml_kem_mlkem768_portable_validate_public_key</data>
  <data key="d3">验证公钥</data>
  <data key="d4">501</data>
  <data key="d5">502</data>
  <data key="d6">libcrux_mlkem768_sha3.h</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\libcrux_mlkem768_sha3.h</data>
</node>
<node id="msg.c|ssh_msg_send">
  <data key="d0">55: 		error_f("write: %s", strerror(errno));</data>
  <data key="d1">error_f</data>
  <data key="d2">ssh_msg_send</data>
  <data key="d3">记录写入错误</data>
  <data key="d4">55</data>
  <data key="d5">55</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|sshbuf_len">
  <data key="d0">48: 	u_int mlen = sshbuf_len(m);</data>
  <data key="d2">ssh_msg_send</data>
  <data key="d1">sshbuf_len</data>
  <data key="d3">获取消息长度</data>
  <data key="d4">48</data>
  <data key="d5">48</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|put_u32">
  <data key="d0">52: 	put_u32(buf, mlen + 1);</data>
  <data key="d2">ssh_msg_send</data>
  <data key="d1">put_u32</data>
  <data key="d3">向缓冲区放入32位无符号整数</data>
  <data key="d4">52</data>
  <data key="d5">52</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|atomicio">
  <data key="d0">54: 	if (atomicio(vwrite, fd, buf, sizeof(buf)) != sizeof(buf)) {
55: 		error_f("write: %s", strerror(errno));
56: 		return (-1);
57: 	}
58: 	if (atomicio(vwrite, fd, sshbuf_mutable_ptr(m), mlen) != mlen) {</data>
  <data key="d2">ssh_msg_send</data>
  <data key="d1">atomicio</data>
  <data key="d3">写入数据到文件</data>
  <data key="d4">54</data>
  <data key="d5">58</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|error_f">
  <data key="d0">55: 		error_f("write: %s", strerror(errno));</data>
  <data key="d2">ssh_msg_send</data>
  <data key="d1">error_f</data>
  <data key="d3">记录写入错误</data>
  <data key="d4">55</data>
  <data key="d5">55</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|ssh_msg_recv">
  <data key="d0">91: 		error_f("read: %s", strerror(errno));</data>
  <data key="d1">error_f</data>
  <data key="d2">ssh_msg_recv</data>
  <data key="d3">记录读取错误</data>
  <data key="d4">91</data>
  <data key="d5">91</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|get_u32">
  <data key="d0">80: 	msg_len = get_u32(buf);</data>
  <data key="d2">ssh_msg_recv</data>
  <data key="d1">get_u32</data>
  <data key="d3">从缓冲区获取32位无符号整数</data>
  <data key="d4">80</data>
  <data key="d5">80</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|sshbuf_reset">
  <data key="d0">85: 	sshbuf_reset(m);</data>
  <data key="d2">ssh_msg_recv</data>
  <data key="d1">sshbuf_reset</data>
  <data key="d3">重置缓冲区</data>
  <data key="d4">85</data>
  <data key="d5">85</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|sshbuf_reserve">
  <data key="d0">86: 	if ((r = sshbuf_reserve(m, msg_len, &amp;p)) != 0) {</data>
  <data key="d2">ssh_msg_recv</data>
  <data key="d1">sshbuf_reserve</data>
  <data key="d3">预留缓冲区空间</data>
  <data key="d4">86</data>
  <data key="d5">86</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="msg.c|error_fr">
  <data key="d0">87: 		error_fr(r, "reserve");</data>
  <data key="d2">ssh_msg_recv</data>
  <data key="d1">error_fr</data>
  <data key="d3">记录预留错误</data>
  <data key="d4">87</data>
  <data key="d5">87</data>
  <data key="d6">msg.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\msg.c</data>
</node>
<node id="platform-listen.c|platform_pre_listen">
  <data key="d0">31: platform_pre_listen(void)
32: {
33: #ifdef LINUX_OOM_ADJUST
34: 	/* Adjust out-of-memory killer so listening process is not killed */
35: 	oom_adjust_setup();</data>
  <data key="d1">oom_adjust_setup</data>
  <data key="d2">platform_pre_listen</data>
  <data key="d3">调整OOM设置</data>
  <data key="d4">31</data>
  <data key="d5">35</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|oom_adjust_setup">
  <data key="d0">31: platform_pre_listen(void)
32: {
33: #ifdef LINUX_OOM_ADJUST
34: 	/* Adjust out-of-memory killer so listening process is not killed */
35: 	oom_adjust_setup();</data>
  <data key="d2">platform_pre_listen</data>
  <data key="d1">oom_adjust_setup</data>
  <data key="d3">调整OOM设置</data>
  <data key="d4">31</data>
  <data key="d5">35</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|platform_post_listen">
  <data key="d0">41: {
42: #ifdef SYSTEMD_NOTIFY
43: 	ssh_systemd_notify_ready();</data>
  <data key="d1">ssh_systemd_notify_ready</data>
  <data key="d2">platform_post_listen</data>
  <data key="d3">通知SystemD已准备好</data>
  <data key="d4">41</data>
  <data key="d5">43</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|ssh_systemd_notify_ready">
  <data key="d0">41: {
42: #ifdef SYSTEMD_NOTIFY
43: 	ssh_systemd_notify_ready();</data>
  <data key="d2">platform_post_listen</data>
  <data key="d1">ssh_systemd_notify_ready</data>
  <data key="d3">通知SystemD已准备好</data>
  <data key="d4">41</data>
  <data key="d5">43</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|platform_pre_fork">
  <data key="d0">51: 	solaris_contract_pre_fork();</data>
  <data key="d1">solaris_contract_pre_fork</data>
  <data key="d2">platform_pre_fork</data>
  <data key="d3">Solaris前契约处理</data>
  <data key="d4">51</data>
  <data key="d5">51</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|solaris_contract_pre_fork">
  <data key="d0">51: 	solaris_contract_pre_fork();</data>
  <data key="d2">platform_pre_fork</data>
  <data key="d1">solaris_contract_pre_fork</data>
  <data key="d3">Solaris前契约处理</data>
  <data key="d4">51</data>
  <data key="d5">51</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|platform_pre_restart">
  <data key="d0">62: 	oom_adjust_restore();</data>
  <data key="d1">oom_adjust_restore</data>
  <data key="d2">platform_pre_restart</data>
  <data key="d3">恢复OOM设置</data>
  <data key="d4">62</data>
  <data key="d5">62</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|ssh_systemd_notify_reload">
  <data key="d0">59: 	ssh_systemd_notify_reload();</data>
  <data key="d2">platform_pre_restart</data>
  <data key="d1">ssh_systemd_notify_reload</data>
  <data key="d3">通知SystemD重载</data>
  <data key="d4">59</data>
  <data key="d5">59</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|oom_adjust_restore">
  <data key="d0">62: 	oom_adjust_restore();</data>
  <data key="d2">platform_pre_restart</data>
  <data key="d1">oom_adjust_restore</data>
  <data key="d3">恢复OOM设置</data>
  <data key="d4">62</data>
  <data key="d5">62</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|platform_post_fork_parent">
  <data key="d0">70: 	solaris_contract_post_fork_parent(child_pid);</data>
  <data key="d1">solaris_contract_post_fork_parent</data>
  <data key="d2">platform_post_fork_parent</data>
  <data key="d3">Solaris后契约处理</data>
  <data key="d4">70</data>
  <data key="d5">70</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|solaris_contract_post_fork_parent">
  <data key="d0">70: 	solaris_contract_post_fork_parent(child_pid);</data>
  <data key="d2">platform_post_fork_parent</data>
  <data key="d1">solaris_contract_post_fork_parent</data>
  <data key="d3">Solaris后契约处理</data>
  <data key="d4">70</data>
  <data key="d5">70</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|platform_post_fork_child">
  <data key="d0">81: 	oom_adjust_restore();</data>
  <data key="d1">oom_adjust_restore</data>
  <data key="d2">platform_post_fork_child</data>
  <data key="d3">恢复OOM设置</data>
  <data key="d4">81</data>
  <data key="d5">81</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-listen.c|solaris_contract_post_fork_child">
  <data key="d0">78: 	solaris_contract_post_fork_child();</data>
  <data key="d2">platform_post_fork_child</data>
  <data key="d1">solaris_contract_post_fork_child</data>
  <data key="d3">Solaris子进程后契约处理</data>
  <data key="d4">78</data>
  <data key="d5">78</data>
  <data key="d6">platform-listen.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-listen.c</data>
</node>
<node id="platform-pledge.c|platform_pledge_agent">
  <data key="d0">35: void
36: platform_pledge_agent(void)
37: {
38: #ifdef USE_SOLARIS_PRIVS
39: 	/*
40: 	 * Note: Solaris priv dropping is closer to tame() than pledge(), but
41: 	 * we will use what we have.
42: 	 */
43: 	solaris_drop_privs_root_pinfo_net();</data>
  <data key="d1">solaris_drop_privs_root_pinfo_net</data>
  <data key="d2">platform_pledge_agent</data>
  <data key="d3">丢弃不必要的权限</data>
  <data key="d4">35</data>
  <data key="d5">43</data>
  <data key="d6">platform-pledge.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-pledge.c</data>
</node>
<node id="platform-pledge.c|solaris_drop_privs_root_pinfo_net">
  <data key="d0">35: void
36: platform_pledge_agent(void)
37: {
38: #ifdef USE_SOLARIS_PRIVS
39: 	/*
40: 	 * Note: Solaris priv dropping is closer to tame() than pledge(), but
41: 	 * we will use what we have.
42: 	 */
43: 	solaris_drop_privs_root_pinfo_net();</data>
  <data key="d2">platform_pledge_agent</data>
  <data key="d1">solaris_drop_privs_root_pinfo_net</data>
  <data key="d3">丢弃不必要的权限</data>
  <data key="d4">35</data>
  <data key="d5">43</data>
  <data key="d6">platform-pledge.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-pledge.c</data>
</node>
<node id="platform-pledge.c|platform_pledge_sftp_server">
  <data key="d0">51: void
52: platform_pledge_sftp_server(void)
53: {
54: #ifdef USE_SOLARIS_PRIVS
55: 	solaris_drop_privs_pinfo_net_fork_exec();</data>
  <data key="d1">solaris_drop_privs_pinfo_net_fork_exec</data>
  <data key="d2">platform_pledge_sftp_server</data>
  <data key="d3">丢弃不必要的权限</data>
  <data key="d4">51</data>
  <data key="d5">55</data>
  <data key="d6">platform-pledge.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-pledge.c</data>
</node>
<node id="platform-pledge.c|solaris_drop_privs_pinfo_net_fork_exec">
  <data key="d0">51: void
52: platform_pledge_sftp_server(void)
53: {
54: #ifdef USE_SOLARIS_PRIVS
55: 	solaris_drop_privs_pinfo_net_fork_exec();</data>
  <data key="d2">platform_pledge_sftp_server</data>
  <data key="d1">solaris_drop_privs_pinfo_net_fork_exec</data>
  <data key="d3">丢弃不必要的权限</data>
  <data key="d4">51</data>
  <data key="d5">55</data>
  <data key="d6">platform-pledge.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-pledge.c</data>
</node>
<node id="platform-pledge.c|platform_pledge_mux">
  <data key="d0">66: platform_pledge_mux(void)
67: {
68: #ifdef USE_SOLARIS_PRIVS
69: 	solaris_drop_privs_root_pinfo_net_exec();</data>
  <data key="d1">solaris_drop_privs_root_pinfo_net_exec</data>
  <data key="d2">platform_pledge_mux</data>
  <data key="d3">丢弃不必要的权限</data>
  <data key="d4">66</data>
  <data key="d5">69</data>
  <data key="d6">platform-pledge.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-pledge.c</data>
</node>
<node id="platform-pledge.c|solaris_drop_privs_root_pinfo_net_exec">
  <data key="d0">66: platform_pledge_mux(void)
67: {
68: #ifdef USE_SOLARIS_PRIVS
69: 	solaris_drop_privs_root_pinfo_net_exec();</data>
  <data key="d2">platform_pledge_mux</data>
  <data key="d1">solaris_drop_privs_root_pinfo_net_exec</data>
  <data key="d3">丢弃不必要的权限</data>
  <data key="d4">66</data>
  <data key="d5">69</data>
  <data key="d6">platform-pledge.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-pledge.c</data>
</node>
<node id="platform-tracing.c|platform_disable_tracing">
  <data key="d0">40: platform_disable_tracing(int strict)
41: {
42: #if defined(HAVE_PROCCTL) &amp;&amp; defined(PROC_TRACE_CTL)
43: 	/* On FreeBSD, we should make this process untraceable */
44: 	int disable_trace = PROC_TRACE_CTL_DISABLE;
45: 
46: 	/*
47: 	 * On FreeBSD, we should make this process untraceable.
48: 	 * pid=0 means "this process" but some older kernels do not
49: 	 * understand that so retry with our own pid before failing.
50: 	 */
51: 	if (procctl(P_PID, 0, PROC_TRACE_CTL, &amp;disable_trace) == 0)
52: 		return;
53: 	if (procctl(P_PID, getpid(), PROC_TRACE_CTL, &amp;disable_trace) == 0)
54: 		return;
55: 	if (strict)
56: 		fatal("unable to make the process untraceable: %s",
57: 		    strerror(errno));
58: #endif
59: #if defined(HAVE_PRCTL) &amp;&amp; defined(PR_SET_DUMPABLE)
60: 	/* Disable ptrace on Linux without sgid bit */
61: 	if (prctl(PR_SET_DUMPABLE, 0) != 0 &amp;&amp; strict)
62: 		fatal("unable to make the process undumpable: %s",
63: 		    strerror(errno));
64: #endif
65: #if defined(HAVE_SETPFLAGS) &amp;&amp; defined(__PROC_PROTECT)
66: 	/* On Solaris, we should make this process untraceable */
67: 	if (setpflags(__PROC_PROTECT, 1) != 0 &amp;&amp; strict)
68: 		fatal("unable to make the process untraceable: %s",
69: 		    strerror(errno));
70: #endif
71: #ifdef PT_DENY_ATTACH
72: 	/* Mac OS X */
73: 	if (ptrace(PT_DENY_ATTACH, 0, 0, 0) == -1 &amp;&amp; strict)
74: 		fatal("unable to set PT_DENY_ATTACH: %s", strerror(errno));
75: #endif
76: }</data>
  <data key="d1"></data>
  <data key="d2">platform_disable_tracing</data>
  <data key="d3">功能摘要（不超过20字）</data>
  <data key="d4">40</data>
  <data key="d5">76</data>
  <data key="d6">platform-tracing.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-tracing.c</data>
</node>
<node id="platform-tracing.c|procctl">
  <data key="d0">51: 	if (procctl(P_PID, 0, PROC_TRACE_CTL, &amp;disable_trace) == 0)</data>
  <data key="d2">platform_disable_tracing</data>
  <data key="d1">procctl</data>
  <data key="d3">进程控制</data>
  <data key="d4">51</data>
  <data key="d5">51</data>
  <data key="d6">platform-tracing.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-tracing.c</data>
</node>
<node id="platform-tracing.c|prctl">
  <data key="d0">61: 	if (prctl(PR_SET_DUMPABLE, 0) != 0 &amp;&amp; strict)</data>
  <data key="d2">platform_disable_tracing</data>
  <data key="d1">prctl</data>
  <data key="d3">设置可转储标志</data>
  <data key="d4">61</data>
  <data key="d5">61</data>
  <data key="d6">platform-tracing.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-tracing.c</data>
</node>
<node id="platform-tracing.c|setpflags">
  <data key="d0">67: 	if (setpflags(__PROC_PROTECT, 1) != 0 &amp;&amp; strict)</data>
  <data key="d2">platform_disable_tracing</data>
  <data key="d1">setpflags</data>
  <data key="d3">进程保护设置</data>
  <data key="d4">67</data>
  <data key="d5">67</data>
  <data key="d6">platform-tracing.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-tracing.c</data>
</node>
<node id="platform-tracing.c|ptrace">
  <data key="d0">73: 	if (ptrace(PT_DENY_ATTACH, 0, 0, 0) == -1 &amp;&amp; strict)</data>
  <data key="d2">platform_disable_tracing</data>
  <data key="d1">ptrace</data>
  <data key="d3">控制过程附着</data>
  <data key="d4">73</data>
  <data key="d5">73</data>
  <data key="d6">platform-tracing.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-tracing.c</data>
</node>
<node id="platform-tracing.c|">
  <data key="d0">40: platform_disable_tracing(int strict)
41: {
42: #if defined(HAVE_PROCCTL) &amp;&amp; defined(PROC_TRACE_CTL)
43: 	/* On FreeBSD, we should make this process untraceable */
44: 	int disable_trace = PROC_TRACE_CTL_DISABLE;
45: 
46: 	/*
47: 	 * On FreeBSD, we should make this process untraceable.
48: 	 * pid=0 means "this process" but some older kernels do not
49: 	 * understand that so retry with our own pid before failing.
50: 	 */
51: 	if (procctl(P_PID, 0, PROC_TRACE_CTL, &amp;disable_trace) == 0)
52: 		return;
53: 	if (procctl(P_PID, getpid(), PROC_TRACE_CTL, &amp;disable_trace) == 0)
54: 		return;
55: 	if (strict)
56: 		fatal("unable to make the process untraceable: %s",
57: 		    strerror(errno));
58: #endif
59: #if defined(HAVE_PRCTL) &amp;&amp; defined(PR_SET_DUMPABLE)
60: 	/* Disable ptrace on Linux without sgid bit */
61: 	if (prctl(PR_SET_DUMPABLE, 0) != 0 &amp;&amp; strict)
62: 		fatal("unable to make the process undumpable: %s",
63: 		    strerror(errno));
64: #endif
65: #if defined(HAVE_SETPFLAGS) &amp;&amp; defined(__PROC_PROTECT)
66: 	/* On Solaris, we should make this process untraceable */
67: 	if (setpflags(__PROC_PROTECT, 1) != 0 &amp;&amp; strict)
68: 		fatal("unable to make the process untraceable: %s",
69: 		    strerror(errno));
70: #endif
71: #ifdef PT_DENY_ATTACH
72: 	/* Mac OS X */
73: 	if (ptrace(PT_DENY_ATTACH, 0, 0, 0) == -1 &amp;&amp; strict)
74: 		fatal("unable to set PT_DENY_ATTACH: %s", strerror(errno));
75: #endif
76: }</data>
  <data key="d2">platform_disable_tracing</data>
  <data key="d1"></data>
  <data key="d3">功能摘要（不超过20字）</data>
  <data key="d4">40</data>
  <data key="d5">76</data>
  <data key="d6">platform-tracing.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\platform-tracing.c</data>
</node>
<node id="sftp-common.c|attrib_clear">
  <data key="d0"> 54: void
 55: attrib_clear(Attrib *a)
 56: {
 57: 	a-&gt;flags = 0;
 58: 	a-&gt;size = 0;
 59: 	a-&gt;uid = 0;
 60: 	a-&gt;gid = 0;
 61: 	a-&gt;perm = 0;
 62: 	a-&gt;atime = 0;
 63: 	a-&gt;mtime = 0;
 64: }</data>
  <data key="d1"></data>
  <data key="d2">attrib_clear</data>
  <data key="d3">清除属性结构内容</data>
  <data key="d4">54</data>
  <data key="d5">64</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|">
  <data key="d0"> 54: void
 55: attrib_clear(Attrib *a)
 56: {
 57: 	a-&gt;flags = 0;
 58: 	a-&gt;size = 0;
 59: 	a-&gt;uid = 0;
 60: 	a-&gt;gid = 0;
 61: 	a-&gt;perm = 0;
 62: 	a-&gt;atime = 0;
 63: 	a-&gt;mtime = 0;
 64: }</data>
  <data key="d2">attrib_clear</data>
  <data key="d1"></data>
  <data key="d3">清除属性结构内容</data>
  <data key="d4">54</data>
  <data key="d5">64</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|stat_to_attrib">
  <data key="d0"> 68: stat_to_attrib(const struct stat *st, Attrib *a)
 69: {
 70: 	attrib_clear(a);
 71: 	a-&gt;flags = 0;
 72: 	a-&gt;flags |= SSH2_FILEXFER_ATTR_SIZE;
 73: 	a-&gt;size = st-&gt;st_size;
 74: 	a-&gt;flags |= SSH2_FILEXFER_ATTR_UIDGID;
 75: 	a-&gt;uid = st-&gt;st_uid;
 76: 	a-&gt;gid = st-&gt;st_gid;
 77: 	a-&gt;flags |= SSH2_FILEXFER_ATTR_PERMISSIONS;
 78: 	a-&gt;perm = st-&gt;st_mode;
 79: 	a-&gt;flags |= SSH2_FILEXFER_ATTR_ACMODTIME;
 80: 	a-&gt;atime = st-&gt;st_atime;
 81: 	a-&gt;mtime = st-&gt;st_mtime;</data>
  <data key="d1"></data>
  <data key="d2">stat_to_attrib</data>
  <data key="d3">从struct stat转换为filexfer属性</data>
  <data key="d4">68</data>
  <data key="d5">81</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|attrib_to_stat">
  <data key="d0"> 86: attrib_to_stat(const Attrib *a, struct stat *st)
 87: {
 88: 	memset(st, 0, sizeof(*st));
 89: 
 90: 	if (a-&gt;flags &amp; SSH2_FILEXFER_ATTR_SIZE)
 91: 		st-&gt;st_size = a-&gt;size;
 92: 	if (a-&gt;flags &amp; SSH2_FILEXFER_ATTR_UIDGID) {
 93: 		st-&gt;st_uid = a-&gt;uid;
 94: 		st-&gt;st_gid = a-&gt;gid;
 95: 	}
 96: 	if (a-&gt;flags &amp; SSH2_FILEXFER_ATTR_PERMISSIONS)
 97: 		st-&gt;st_mode = a-&gt;perm;
 98: 	if (a-&gt;flags &amp; SSH2_FILEXFER_ATTR_ACMODTIME) {
 99: 		st-&gt;st_atime = a-&gt;atime;
100: 		st-&gt;st_mtime = a-&gt;mtime;
101: 	}
102: }</data>
  <data key="d1"></data>
  <data key="d2">attrib_to_stat</data>
  <data key="d3">从filexfer属性转换为struct stat</data>
  <data key="d4">86</data>
  <data key="d5">102</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|decode_attrib">
  <data key="d0">143: 			if ((r = sshbuf_get_cstring(b, &amp;type, NULL)) != 0 ||
144: 			    (r = sshbuf_get_string(b, &amp;data, &amp;dlen)) != 0)</data>
  <data key="d1">sshbuf_get_cstring</data>
  <data key="d2">decode_attrib</data>
  <data key="d3">从缓冲区获取字符串</data>
  <data key="d4">143</data>
  <data key="d5">144</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|sshbuf_get_u32">
  <data key="d0">111: 	if ((r = sshbuf_get_u32(b, &amp;a-&gt;flags)) != 0)</data>
  <data key="d2">decode_attrib</data>
  <data key="d1">sshbuf_get_u32</data>
  <data key="d3">从缓冲区获取u32</data>
  <data key="d4">111</data>
  <data key="d5">111</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|sshbuf_get_u64">
  <data key="d0">114: 		if ((r = sshbuf_get_u64(b, &amp;a-&gt;size)) != 0)</data>
  <data key="d2">decode_attrib</data>
  <data key="d1">sshbuf_get_u64</data>
  <data key="d3">从缓冲区获取u64</data>
  <data key="d4">114</data>
  <data key="d5">114</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|sshbuf_get_cstring">
  <data key="d0">143: 			if ((r = sshbuf_get_cstring(b, &amp;type, NULL)) != 0 ||
144: 			    (r = sshbuf_get_string(b, &amp;data, &amp;dlen)) != 0)</data>
  <data key="d2">decode_attrib</data>
  <data key="d1">sshbuf_get_cstring</data>
  <data key="d3">从缓冲区获取字符串</data>
  <data key="d4">143</data>
  <data key="d5">144</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|encode_attrib">
  <data key="d0">168: 		if ((r = sshbuf_put_u32(b, a-&gt;uid)) != 0 ||
169: 		    (r = sshbuf_put_u32(b, a-&gt;gid)) != 0)
170: 			return r;</data>
  <data key="d1">sshbuf_put_u32</data>
  <data key="d2">encode_attrib</data>
  <data key="d3">向缓冲区写入u32</data>
  <data key="d4">168</data>
  <data key="d5">170</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|sshbuf_put_u32">
  <data key="d0">161: 	if ((r = sshbuf_put_u32(b, a-&gt;flags)) != 0)</data>
  <data key="d2">encode_attrib</data>
  <data key="d1">sshbuf_put_u32</data>
  <data key="d3">向缓冲区写入u32</data>
  <data key="d4">161</data>
  <data key="d5">161</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|sshbuf_put_u64">
  <data key="d0">164: 		if ((r = sshbuf_put_u64(b, a-&gt;size)) != 0)</data>
  <data key="d2">encode_attrib</data>
  <data key="d1">sshbuf_put_u64</data>
  <data key="d3">向缓冲区写入u64</data>
  <data key="d4">164</data>
  <data key="d5">164</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|fx2txt">
  <data key="d0">186: fx2txt(int status)
187: {
188: 	switch (status) {
189: 	case SSH2_FX_OK:
190: 		return("No error");
191: 	case SSH2_FX_EOF:
192: 		return("End of file");
193: 	case SSH2_FX_NO_SUCH_FILE:
194: 		return("No such file or directory");
195: 	case SSH2_FX_PERMISSION_DENIED:
196: 		return("Permission denied");
197: 	case SSH2_FX_FAILURE:
198: 		return("Failure");
199: 	case SSH2_FX_BAD_MESSAGE:
200: 		return("Bad message");
201: 	case SSH2_FX_NO_CONNECTION:
202: 		return("No connection");
203: 	case SSH2_FX_CONNECTION_LOST:
204: 		return("Connection lost");
205: 	case SSH2_FX_OP_UNSUPPORTED:
206: 		return("Operation unsupported");
207: 	default:
208: 		return("Unknown status");
209: 	}
210: 	/* NOTREACHED */</data>
  <data key="d1"></data>
  <data key="d2">fx2txt</data>
  <data key="d3">根据状态码返回文本信息</data>
  <data key="d4">186</data>
  <data key="d5">210</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|ls_file">
  <data key="d0">264: 	return xstrdup(buf);</data>
  <data key="d1">xstrdup</data>
  <data key="d2">ls_file</data>
  <data key="d3">复制字符串并分配内存</data>
  <data key="d4">264</data>
  <data key="d5">264</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|localtime">
  <data key="d0">217: ls_file(const char *name, const struct stat *st, int remote, int si_units,
218:     const char *user, const char *group)
219: {
220: 	int ulen, glen, sz = 0;
221: 	struct tm *ltime = localtime(&amp;st-&gt;st_mtime);</data>
  <data key="d2">ls_file</data>
  <data key="d1">localtime</data>
  <data key="d3">获取文件的本地时间信息</data>
  <data key="d4">217</data>
  <data key="d5">221</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|strmode">
  <data key="d0">226: 	strmode(st-&gt;st_mode, mode);</data>
  <data key="d2">ls_file</data>
  <data key="d1">strmode</data>
  <data key="d3">设置文件模式字符串</data>
  <data key="d4">226</data>
  <data key="d5">226</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|user_from_uid">
  <data key="d0">238: 		user = user_from_uid(st-&gt;st_uid, 0);</data>
  <data key="d2">ls_file</data>
  <data key="d1">user_from_uid</data>
  <data key="d3">根据UID获取用户名</data>
  <data key="d4">238</data>
  <data key="d5">238</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|group_from_gid">
  <data key="d0">239: 		group = group_from_gid(st-&gt;st_gid, 0);</data>
  <data key="d2">ls_file</data>
  <data key="d1">group_from_gid</data>
  <data key="d3">根据GID获取组名</data>
  <data key="d4">239</data>
  <data key="d5">239</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|time">
  <data key="d0">243: 		now = time(NULL);</data>
  <data key="d2">ls_file</data>
  <data key="d1">time</data>
  <data key="d3">获取当前时间</data>
  <data key="d4">243</data>
  <data key="d5">243</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|strftime">
  <data key="d0">246: 			sz = strftime(tbuf, sizeof tbuf, "%b %e %H:%M", ltime);
247: 		else
248: 			sz = strftime(tbuf, sizeof tbuf, "%b %e  %Y", ltime);</data>
  <data key="d2">ls_file</data>
  <data key="d1">strftime</data>
  <data key="d3">格式化时间为字符串</data>
  <data key="d4">246</data>
  <data key="d5">248</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|MAXIMUM">
  <data key="d0">252: 	ulen = MAXIMUM(strlen(user), 8);
253: 	glen = MAXIMUM(strlen(group), 8);</data>
  <data key="d2">ls_file</data>
  <data key="d1">MAXIMUM</data>
  <data key="d3">计算最大值</data>
  <data key="d4">252</data>
  <data key="d5">253</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|fmt_scaled">
  <data key="d0">255: 		fmt_scaled((long long)st-&gt;st_size, sbuf);</data>
  <data key="d2">ls_file</data>
  <data key="d1">fmt_scaled</data>
  <data key="d3">格式化文件大小为人类可读形式</data>
  <data key="d4">255</data>
  <data key="d5">255</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-common.c|xstrdup">
  <data key="d0">264: 	return xstrdup(buf);</data>
  <data key="d2">ls_file</data>
  <data key="d1">xstrdup</data>
  <data key="d3">复制字符串并分配内存</data>
  <data key="d4">264</data>
  <data key="d5">264</data>
  <data key="d6">sftp-common.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-common.c</data>
</node>
<node id="sftp-server-main.c|cleanup_exit">
  <data key="d0">32: cleanup_exit(int i)
33: {
34: 	sftp_server_cleanup_exit(i);</data>
  <data key="d1">sftp_server_cleanup_exit</data>
  <data key="d2">cleanup_exit</data>
  <data key="d3">清理退出</data>
  <data key="d4">32</data>
  <data key="d5">34</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server-main.c|sftp_server_cleanup_exit">
  <data key="d0">32: cleanup_exit(int i)
33: {
34: 	sftp_server_cleanup_exit(i);</data>
  <data key="d2">cleanup_exit</data>
  <data key="d1">sftp_server_cleanup_exit</data>
  <data key="d3">清理退出</data>
  <data key="d4">32</data>
  <data key="d5">34</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server-main.c|main">
  <data key="d0">51: 	return (sftp_server_main(argc, argv, user_pw));</data>
  <data key="d1">sftp_server_main</data>
  <data key="d2">main</data>
  <data key="d3">启动SFTP服务器</data>
  <data key="d4">51</data>
  <data key="d5">51</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server-main.c|sanitise_stdfd">
  <data key="d0">43: 	sanitise_stdfd();</data>
  <data key="d2">main</data>
  <data key="d1">sanitise_stdfd</data>
  <data key="d3">确保标准文件描述符</data>
  <data key="d4">43</data>
  <data key="d5">43</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server-main.c|getpwuid">
  <data key="d0">45: 	if ((user_pw = getpwuid(getuid())) == NULL) {</data>
  <data key="d2">main</data>
  <data key="d1">getpwuid</data>
  <data key="d3">获取用户信息</data>
  <data key="d4">45</data>
  <data key="d5">45</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server-main.c|getuid">
  <data key="d0">46: 		fprintf(stderr, "No user found for uid %lu\n",</data>
  <data key="d2">main</data>
  <data key="d1">getuid</data>
  <data key="d3">获取当前用户ID</data>
  <data key="d4">46</data>
  <data key="d5">46</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server-main.c|fprintf">
  <data key="d0">46: 		fprintf(stderr, "No user found for uid %lu\n",
47: 		    (u_long)getuid());
48: 		return 1;</data>
  <data key="d2">main</data>
  <data key="d1">fprintf</data>
  <data key="d3">错误输出用户信息</data>
  <data key="d4">46</data>
  <data key="d5">48</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server-main.c|sftp_server_main">
  <data key="d0">51: 	return (sftp_server_main(argc, argv, user_pw));</data>
  <data key="d2">main</data>
  <data key="d1">sftp_server_main</data>
  <data key="d3">启动SFTP服务器</data>
  <data key="d4">51</data>
  <data key="d5">51</data>
  <data key="d6">sftp-server-main.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server-main.c</data>
</node>
<node id="sftp-server.c|get_handle">
  <data key="d0"> 10: 		fatal("%s: buffer error: %s", __func__, ssh_err(r));</data>
  <data key="d1">fatal</data>
  <data key="d2">get_handle</data>
  <data key="d3">错误处理</data>
  <data key="d4">10</data>
  <data key="d5">10</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_get_u64">
  <data key="d0">  5: 	if ((r = get_handle(iqueue, &amp;read_handle)) != 0 ||
  6: 	    (r = sshbuf_get_u64(iqueue, &amp;read_off)) != 0 ||
  7: 	    (r = sshbuf_get_u64(iqueue, &amp;read_len)) != 0 ||</data>
  <data key="d2">get_handle</data>
  <data key="d1">sshbuf_get_u64</data>
  <data key="d3">获取64位无符号整数</data>
  <data key="d4">5</data>
  <data key="d5">7</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|fatal">
  <data key="d0"> 10: 		fatal("%s: buffer error: %s", __func__, ssh_err(r));</data>
  <data key="d2">get_handle</data>
  <data key="d1">fatal</data>
  <data key="d3">错误处理</data>
  <data key="d4">10</data>
  <data key="d5">10</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|debug">
  <data key="d0"> 31: 	    !strcmp(handle_to_name(read_handle), handle_to_name(write_handle))) {</data>
  <data key="d1">strcmp</data>
  <data key="d2">debug</data>
  <data key="d3">字符串比较</data>
  <data key="d4">31</data>
  <data key="d5">31</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|handle_to_name">
  <data key="d0"> 12: 	debug("request %u: copy-data from \"%s\" (handle %d) off %llu len %llu "
 13: 	    "to \"%s\" (handle %d) off %llu",
 14: 	    id, handle_to_name(read_handle), read_handle,
 15: 	    (unsigned long long)read_off, (unsigned long long)read_len,
 16: 	    handle_to_name(write_handle), write_handle,</data>
  <data key="d2">debug</data>
  <data key="d1">handle_to_name</data>
  <data key="d3">获取句柄对应名称</data>
  <data key="d4">12</data>
  <data key="d5">16</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|strcmp">
  <data key="d0"> 31: 	    !strcmp(handle_to_name(read_handle), handle_to_name(write_handle))) {</data>
  <data key="d2">debug</data>
  <data key="d1">strcmp</data>
  <data key="d3">字符串比较</data>
  <data key="d4">31</data>
  <data key="d5">31</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|lseek">
  <data key="d0"> 44: 		status = errno_to_portable(errno);
 45: 		error("%s: write_seek failed", __func__);</data>
  <data key="d1">errno_to_portable</data>
  <data key="d2">lseek</data>
  <data key="d3">转换errno为可移植值</data>
  <data key="d4">44</data>
  <data key="d5">45</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|handle_to_fd">
  <data key="d0"> 26: 	read_fd = handle_to_fd(read_handle);
 27: 	write_fd = handle_to_fd(write_handle);</data>
  <data key="d2">lseek</data>
  <data key="d1">handle_to_fd</data>
  <data key="d3">获取文件描述符</data>
  <data key="d4">26</data>
  <data key="d5">27</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|errno_to_portable">
  <data key="d0"> 37: 		status = errno_to_portable(errno);
 38: 		error("%s: read_seek failed", __func__);</data>
  <data key="d2">lseek</data>
  <data key="d1">errno_to_portable</data>
  <data key="d3">转换errno为可移植值</data>
  <data key="d4">37</data>
  <data key="d5">38</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|atomicio">
  <data key="d0"> 66: 		ret = atomicio(vwrite, write_fd, buf, len);</data>
  <data key="d1">vwrite</data>
  <data key="d2">atomicio</data>
  <data key="d3">写入数据到文件描述符</data>
  <data key="d4">66</data>
  <data key="d5">66</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|read">
  <data key="d0"> 54: 		ret = atomicio(read, read_fd, buf, len);</data>
  <data key="d2">atomicio</data>
  <data key="d1">read</data>
  <data key="d3">从文件描述符读取数据</data>
  <data key="d4">54</data>
  <data key="d5">54</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|vwrite">
  <data key="d0"> 66: 		ret = atomicio(vwrite, write_fd, buf, len);</data>
  <data key="d2">atomicio</data>
  <data key="d1">vwrite</data>
  <data key="d3">写入数据到文件描述符</data>
  <data key="d4">66</data>
  <data key="d5">66</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|handle_update_read">
  <data key="d0"> 64: 		handle_update_read(read_handle, len);</data>
  <data key="d1">handle_update_read</data>
  <data key="d2">handle_update_read</data>
  <data key="d3">更新读取句柄</data>
  <data key="d4">64</data>
  <data key="d5">64</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|handle_update_write">
  <data key="d0"> 74: 		handle_update_write(write_handle, len);</data>
  <data key="d1">handle_update_write</data>
  <data key="d2">handle_update_write</data>
  <data key="d3">更新写入句柄</data>
  <data key="d4">74</data>
  <data key="d5">74</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_get_cstring">
  <data key="d0">173: 	if ((r = sshbuf_get_cstring(iqueue, &amp;request, NULL)) != 0)
174: 		fatal_fr(r, "parse");</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_get_cstring</data>
  <data key="d3">解析字符串失败</data>
  <data key="d4">173</data>
  <data key="d5">174</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|fatal_fr">
  <data key="d0"> 92: 	if ((r = sshbuf_get_cstring(iqueue, &amp;username, NULL)) != 0)
 93: 		fatal_fr(r, "parse");</data>
  <data key="d2">sshbuf_get_cstring</data>
  <data key="d1">fatal_fr</data>
  <data key="d3">字符串解析失败处理</data>
  <data key="d4">92</data>
  <data key="d5">93</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|getpwnam">
  <data key="d0"> 98: 	} else if ((user_pw = getpwnam(username)) == NULL) {
 99: 		send_status(id, SSH2_FX_FAILURE);
100: 		goto out;</data>
  <data key="d1">send_status</data>
  <data key="d2">getpwnam</data>
  <data key="d3">根据用户名获取用户信息</data>
  <data key="d4">98</data>
  <data key="d5">100</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|send_status">
  <data key="d0"> 98: 	} else if ((user_pw = getpwnam(username)) == NULL) {
 99: 		send_status(id, SSH2_FX_FAILURE);
100: 		goto out;</data>
  <data key="d2">getpwnam</data>
  <data key="d1">send_status</data>
  <data key="d3">根据用户名获取用户信息</data>
  <data key="d4">98</data>
  <data key="d5">100</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_new">
  <data key="d0">121: 	if ((usernames = sshbuf_new()) == NULL ||
122: 	    (groupnames = sshbuf_new()) == NULL ||
123: 	    (msg = sshbuf_new()) == NULL)
124: 		fatal_f("sshbuf_new failed");</data>
  <data key="d1">fatal_f</data>
  <data key="d2">sshbuf_new</data>
  <data key="d3">创建新sshbuf失败</data>
  <data key="d4">121</data>
  <data key="d5">124</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|fatal_f">
  <data key="d0">121: 	if ((usernames = sshbuf_new()) == NULL ||
122: 	    (groupnames = sshbuf_new()) == NULL ||
123: 	    (msg = sshbuf_new()) == NULL)
124: 		fatal_f("sshbuf_new failed");</data>
  <data key="d2">sshbuf_new</data>
  <data key="d1">fatal_f</data>
  <data key="d3">创建新sshbuf失败</data>
  <data key="d4">121</data>
  <data key="d5">124</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_froms">
  <data key="d0">125: 	if ((r = sshbuf_froms(iqueue, &amp;uids)) != 0 ||
126: 	    (r = sshbuf_froms(iqueue, &amp;gids)) != 0)
127: 		fatal_fr(r, "parse");</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_froms</data>
  <data key="d3">从sshbuf中解析数据</data>
  <data key="d4">125</data>
  <data key="d5">127</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_get_u32">
  <data key="d0">131: 		if ((r = sshbuf_get_u32(uids, &amp;n)) != 0)
132: 			fatal_fr(r, "parse inner uid");</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_get_u32</data>
  <data key="d3">获取32位无符号整数</data>
  <data key="d4">131</data>
  <data key="d5">132</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|getpwuid">
  <data key="d0">133: 		user_pw = getpwuid((uid_t)n);
134: 		name = user_pw == NULL ? "" : user_pw-&gt;pw_name;
135: 		debug3_f("uid %u =&gt; \"%s\"", n, name);</data>
  <data key="d1">debug3_f</data>
  <data key="d2">getpwuid</data>
  <data key="d3">获取用户名称</data>
  <data key="d4">133</data>
  <data key="d5">135</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|debug3_f">
  <data key="d0">133: 		user_pw = getpwuid((uid_t)n);
134: 		name = user_pw == NULL ? "" : user_pw-&gt;pw_name;
135: 		debug3_f("uid %u =&gt; \"%s\"", n, name);</data>
  <data key="d2">getpwuid</data>
  <data key="d1">debug3_f</data>
  <data key="d3">获取用户名称</data>
  <data key="d4">133</data>
  <data key="d5">135</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_put_cstring">
  <data key="d0">136: 		if ((r = sshbuf_put_cstring(usernames, name)) != 0)
137: 			fatal_fr(r, "assemble uid reply");
138: 		nusers++;</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_put_cstring</data>
  <data key="d3">将字符串放入sshbuf中</data>
  <data key="d4">136</data>
  <data key="d5">138</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_put_u8">
  <data key="d0">152: 	if ((r = sshbuf_put_u8(msg, SSH2_FXP_EXTENDED_REPLY)) != 0 ||
153: 	    (r = sshbuf_put_u32(msg, id)) != 0 ||
154: 	    (r = sshbuf_put_stringb(msg, usernames)) != 0 ||
155: 	    (r = sshbuf_put_stringb(msg, groupnames)) != 0)
156: 		fatal_fr(r, "compose");</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_put_u8</data>
  <data key="d3">放入8位数据到sshbuf</data>
  <data key="d4">152</data>
  <data key="d5">156</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|send_msg">
  <data key="d0">157: 	send_msg(msg);
158: 
159: 	sshbuf_free(uids);
160: 	sshbuf_free(gids);
161: 	sshbuf_free(usernames);
162: 	sshbuf_free(groupnames);</data>
  <data key="d1">sshbuf_free</data>
  <data key="d2">send_msg</data>
  <data key="d3">发送消息并释放sshbuf</data>
  <data key="d4">157</data>
  <data key="d5">162</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_free">
  <data key="d0">157: 	send_msg(msg);
158: 
159: 	sshbuf_free(uids);
160: 	sshbuf_free(gids);
161: 	sshbuf_free(usernames);
162: 	sshbuf_free(groupnames);</data>
  <data key="d2">send_msg</data>
  <data key="d1">sshbuf_free</data>
  <data key="d3">发送消息并释放sshbuf</data>
  <data key="d4">157</data>
  <data key="d5">162</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|extended_handler_byname">
  <data key="d0">175: 	if ((exthand = extended_handler_byname(request)) == NULL) {
176: 		error("Unknown extended request \"%.100s\"", request);
177: 		send_status(id, SSH2_FX_OP_UNSUPPORTED);	/* MUST */</data>
  <data key="d1">error</data>
  <data key="d2">extended_handler_byname</data>
  <data key="d3">通过请求名获取处理器</data>
  <data key="d4">175</data>
  <data key="d5">177</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|error">
  <data key="d0">175: 	if ((exthand = extended_handler_byname(request)) == NULL) {
176: 		error("Unknown extended request \"%.100s\"", request);
177: 		send_status(id, SSH2_FX_OP_UNSUPPORTED);	/* MUST */</data>
  <data key="d2">extended_handler_byname</data>
  <data key="d1">error</data>
  <data key="d3">通过请求名获取处理器</data>
  <data key="d4">175</data>
  <data key="d5">177</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|exthand-&gt;handler">
  <data key="d0">182: 			exthand-&gt;handler(id);
183: 	}
184: 	free(request);</data>
  <data key="d1">free</data>
  <data key="d2">exthand-&gt;handler</data>
  <data key="d3">调用扩展请求处理器</data>
  <data key="d4">182</data>
  <data key="d5">184</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|free">
  <data key="d0">182: 			exthand-&gt;handler(id);
183: 	}
184: 	free(request);</data>
  <data key="d2">exthand-&gt;handler</data>
  <data key="d1">free</data>
  <data key="d3">调用扩展请求处理器</data>
  <data key="d4">182</data>
  <data key="d5">184</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_len">
  <data key="d0">201: 	if (buf_len &lt; 5)
202: 		return;		/* Incomplete message. */
203: 	cp = sshbuf_ptr(iqueue);
204: 	msg_len = get_u32(cp);
205: 	if (msg_len &gt; SFTP_MAX_MSG_LENGTH) {
206: 		error("bad message from %s local user %s",
207: 		    client_addr, pw-&gt;pw_name);</data>
  <data key="d1">logit</data>
  <data key="d2">sshbuf_len</data>
  <data key="d3">获取sshbuf长度</data>
  <data key="d4">201</data>
  <data key="d5">207</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|logit">
  <data key="d0">201: 	if (buf_len &lt; 5)
202: 		return;		/* Incomplete message. */
203: 	cp = sshbuf_ptr(iqueue);
204: 	msg_len = get_u32(cp);
205: 	if (msg_len &gt; SFTP_MAX_MSG_LENGTH) {
206: 		error("bad message from %s local user %s",
207: 		    client_addr, pw-&gt;pw_name);</data>
  <data key="d2">sshbuf_len</data>
  <data key="d1">logit</data>
  <data key="d3">获取sshbuf长度</data>
  <data key="d4">201</data>
  <data key="d5">207</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_get_u8">
  <data key="d0">215: 	if ((r = sshbuf_get_u8(iqueue, &amp;type)) != 0)
216: 		fatal_fr(r, "parse type");</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_get_u8</data>
  <data key="d3">获取8位数据失败</data>
  <data key="d4">215</data>
  <data key="d5">216</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_check_reserve">
  <data key="d0">434: 		if ((r = sshbuf_check_reserve(iqueue, sizeof(buf))) == 0 &amp;&amp;
435: 		    (r = sshbuf_check_reserve(oqueue,
436: 		    SFTP_MAX_MSG_LENGTH)) == 0) {
437: 			pfd[0].fd = in;
438: 			pfd[0].events = POLLIN;
439: 		}
440: 		else if (r != SSH_ERR_NO_BUFFER_SPACE)
441: 			fatal_fr(r, "reserve");</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_check_reserve</data>
  <data key="d3">检查sshbuf预留空间</data>
  <data key="d4">434</data>
  <data key="d5">441</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|sshbuf_put">
  <data key="d0">468: 				fatal_fr(r, "sshbuf_put");</data>
  <data key="d1">fatal_fr</data>
  <data key="d2">sshbuf_put</data>
  <data key="d3">将数据放入sshbuf</data>
  <data key="d4">468</data>
  <data key="d5">468</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-server.c|process">
  <data key="d0">491: 		r = sshbuf_check_reserve(oqueue, SFTP_MAX_MSG_LENGTH);
492: 		if (r == 0)
493: 			process();</data>
  <data key="d1">sshbuf_check_reserve</data>
  <data key="d2">process</data>
  <data key="d3">检查输出缓冲区空间</data>
  <data key="d4">491</data>
  <data key="d5">493</data>
  <data key="d6">sftp-server.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-server.c</data>
</node>
<node id="sftp-usergroup.c|lookup_and_record">
  <data key="d0">130: 	freenames(usernames, nuids);</data>
  <data key="d1">freenames</data>
  <data key="d2">lookup_and_record</data>
  <data key="d3">释放用户组名称</data>
  <data key="d4">130</data>
  <data key="d5">130</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|sftp_get_users_groups_by_id">
  <data key="d0">102: lookup_and_record(struct sftp_conn *conn,
103:     u_int *uids, u_int nuids, u_int *gids, u_int ngids)
104: {
105: 	int r;
106: 	u_int i;
107: 	char **usernames = NULL, **groupnames = NULL;
108: 
109: 	if ((r = sftp_get_users_groups_by_id(conn, uids, nuids, gids, ngids,
110: 	    &amp;usernames, &amp;groupnames)) != 0) {
111: 		debug_fr(r, "sftp_get_users_groups_by_id");
112: 		return;</data>
  <data key="d2">lookup_and_record</data>
  <data key="d1">sftp_get_users_groups_by_id</data>
  <data key="d3">获取用户组信息</data>
  <data key="d4">102</data>
  <data key="d5">112</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|debug_fr">
  <data key="d0">111: 		debug_fr(r, "sftp_get_users_groups_by_id");</data>
  <data key="d2">lookup_and_record</data>
  <data key="d1">debug_fr</data>
  <data key="d3">记录调试信息</data>
  <data key="d4">111</data>
  <data key="d5">111</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|idname_enter">
  <data key="d0">120: 		idname_enter(&amp;user_idname, uids[i], usernames[i]);</data>
  <data key="d2">lookup_and_record</data>
  <data key="d1">idname_enter</data>
  <data key="d3">记录UID</data>
  <data key="d4">120</data>
  <data key="d5">120</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|freenames">
  <data key="d0">130: 	freenames(usernames, nuids);</data>
  <data key="d2">lookup_and_record</data>
  <data key="d1">freenames</data>
  <data key="d3">释放用户组名称</data>
  <data key="d4">130</data>
  <data key="d5">130</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|get_remote_user_groups_from_glob">
  <data key="d0">186: 	free(gids);</data>
  <data key="d1">free</data>
  <data key="d2">get_remote_user_groups_from_glob</data>
  <data key="d3">释放GID</data>
  <data key="d4">186</data>
  <data key="d5">186</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|sftp_can_get_users_groups_by_id">
  <data key="d0">179: 	if (!sftp_can_get_users_groups_by_id(conn))
180: 		return;</data>
  <data key="d2">get_remote_user_groups_from_glob</data>
  <data key="d1">sftp_can_get_users_groups_by_id</data>
  <data key="d3">检查获取用户组能力</data>
  <data key="d4">179</data>
  <data key="d5">180</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|collect_ids_from_glob">
  <data key="d0">182: 	collect_ids_from_glob(g, 1, &amp;uids, &amp;nuids);</data>
  <data key="d2">get_remote_user_groups_from_glob</data>
  <data key="d1">collect_ids_from_glob</data>
  <data key="d3">收集UID</data>
  <data key="d4">182</data>
  <data key="d5">182</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|free">
  <data key="d0">185: 	free(uids);</data>
  <data key="d2">get_remote_user_groups_from_glob</data>
  <data key="d1">free</data>
  <data key="d3">释放UID</data>
  <data key="d4">185</data>
  <data key="d5">185</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|get_remote_user_groups_from_dirents">
  <data key="d0">225: 	free(gids);</data>
  <data key="d1">free</data>
  <data key="d2">get_remote_user_groups_from_dirents</data>
  <data key="d3">释放GID</data>
  <data key="d4">225</data>
  <data key="d5">225</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|collect_ids_from_dirents">
  <data key="d0">221: 	collect_ids_from_dirents(d, 1, &amp;uids, &amp;nuids);</data>
  <data key="d2">get_remote_user_groups_from_dirents</data>
  <data key="d1">collect_ids_from_dirents</data>
  <data key="d3">收集UID</data>
  <data key="d4">221</data>
  <data key="d5">221</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|ruser_name">
  <data key="d0">229: ruser_name(uid_t uid)
230: {
231: 	return idname_lookup(&amp;user_idname, (u_int)uid);</data>
  <data key="d1">idname_lookup</data>
  <data key="d2">ruser_name</data>
  <data key="d3">查找用户名称</data>
  <data key="d4">229</data>
  <data key="d5">231</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|idname_lookup">
  <data key="d0">229: ruser_name(uid_t uid)
230: {
231: 	return idname_lookup(&amp;user_idname, (u_int)uid);</data>
  <data key="d2">ruser_name</data>
  <data key="d1">idname_lookup</data>
  <data key="d3">查找用户名称</data>
  <data key="d4">229</data>
  <data key="d5">231</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="sftp-usergroup.c|rgroup_name">
  <data key="d0">235: rgroup_name(uid_t gid)
236: {
237: 	return idname_lookup(&amp;group_idname, (u_int)gid);</data>
  <data key="d1">idname_lookup</data>
  <data key="d2">rgroup_name</data>
  <data key="d3">查找组名称</data>
  <data key="d4">235</data>
  <data key="d5">237</data>
  <data key="d6">sftp-usergroup.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sftp-usergroup.c</data>
</node>
<node id="ssh-sk-helper.c|reply_error">
  <data key="d0"> 66: 	free(msg);</data>
  <data key="d1">free</data>
  <data key="d2">reply_error</data>
  <data key="d3">释放内存</data>
  <data key="d4">66</data>
  <data key="d5">66</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|debug">
  <data key="d0"> 55: static struct sshbuf *
 56: reply_error(int r, char *fmt, ...)
 57: {
 58: 	char *msg;
 59: 	va_list ap;
 60: 	struct sshbuf *resp;
 61: 
 62: 	va_start(ap, fmt);
 63: 	xvasprintf(&amp;msg, fmt, ap);
 64: 	va_end(ap);
 65: 	debug("%s: %s", __progname, msg);</data>
  <data key="d2">reply_error</data>
  <data key="d1">debug</data>
  <data key="d3">记录调试信息</data>
  <data key="d4">55</data>
  <data key="d5">65</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_new">
  <data key="d0"> 71: 	if ((resp = sshbuf_new()) == NULL)</data>
  <data key="d2">reply_error</data>
  <data key="d1">sshbuf_new</data>
  <data key="d3">创建新的sshbuf实例</data>
  <data key="d4">71</data>
  <data key="d5">71</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|fatal_f">
  <data key="d0"> 69: 		fatal_f("invalid error code %d", r);</data>
  <data key="d2">reply_error</data>
  <data key="d1">fatal_f</data>
  <data key="d3">处理错误代码</data>
  <data key="d4">69</data>
  <data key="d5">69</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|free">
  <data key="d0"> 66: 	free(msg);</data>
  <data key="d2">reply_error</data>
  <data key="d1">free</data>
  <data key="d3">释放内存</data>
  <data key="d4">66</data>
  <data key="d5">66</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|null_empty">
  <data key="d0"> 86: 	free(*s);</data>
  <data key="d1">free</data>
  <data key="d2">null_empty</data>
  <data key="d3">释放内存</data>
  <data key="d4">86</data>
  <data key="d5">86</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|process_sign">
  <data key="d0">135: 	    (r = sshbuf_put_string(resp, sig, siglen)) != 0)</data>
  <data key="d1">sshbuf_put_string</data>
  <data key="d2">process_sign</data>
  <data key="d3">写入字符串到sshbuf</data>
  <data key="d4">135</data>
  <data key="d5">135</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_froms">
  <data key="d0">102: 	if ((r = sshbuf_froms(req, &amp;kbuf)) != 0 ||</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshbuf_froms</data>
  <data key="d3">从sshbuf解析</data>
  <data key="d4">102</data>
  <data key="d5">102</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_get_cstring">
  <data key="d0">103: 	    (r = sshbuf_get_cstring(req, &amp;provider, NULL)) != 0 ||</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshbuf_get_cstring</data>
  <data key="d3">获取字符串</data>
  <data key="d4">103</data>
  <data key="d5">103</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_get_string_direct">
  <data key="d0">104: 	    (r = sshbuf_get_string_direct(req, &amp;message, &amp;msglen)) != 0 ||</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshbuf_get_string_direct</data>
  <data key="d3">直接获取字符串</data>
  <data key="d4">104</data>
  <data key="d5">104</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_get_u32">
  <data key="d0">106: 	    (r = sshbuf_get_u32(req, &amp;compat)) != 0 ||</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshbuf_get_u32</data>
  <data key="d3">获取32位无符号整数</data>
  <data key="d4">106</data>
  <data key="d5">106</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshkey_private_deserialize">
  <data key="d0">112: 	if ((r = sshkey_private_deserialize(kbuf, &amp;key)) != 0)</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshkey_private_deserialize</data>
  <data key="d3">反序列化私钥</data>
  <data key="d4">112</data>
  <data key="d5">112</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshkey_is_sk">
  <data key="d0">114: 	if (!sshkey_is_sk(key)) {</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshkey_is_sk</data>
  <data key="d3">检查密钥类型</data>
  <data key="d4">114</data>
  <data key="d5">114</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_put_u32">
  <data key="d0">134: 	if ((r = sshbuf_put_u32(resp, SSH_SK_HELPER_SIGN)) != 0 ||</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshbuf_put_u32</data>
  <data key="d3">写入32位无符号整数到sshbuf</data>
  <data key="d4">134</data>
  <data key="d5">134</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_put_string">
  <data key="d0">135: 	    (r = sshbuf_put_string(resp, sig, siglen)) != 0)</data>
  <data key="d2">process_sign</data>
  <data key="d1">sshbuf_put_string</data>
  <data key="d3">写入字符串到sshbuf</data>
  <data key="d4">135</data>
  <data key="d5">135</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|process_enroll">
  <data key="d0">192: 	if ((r = sshkey_private_serialize(key, kbuf)) != 0)</data>
  <data key="d1">sshkey_private_serialize</data>
  <data key="d2">process_enroll</data>
  <data key="d3">序列化私钥</data>
  <data key="d4">192</data>
  <data key="d5">192</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshbuf_get_u8">
  <data key="d0">167: 	    (r = sshbuf_get_u8(req, &amp;flags)) != 0 ||</data>
  <data key="d2">process_enroll</data>
  <data key="d1">sshbuf_get_u8</data>
  <data key="d3">获取8位无符号整数</data>
  <data key="d4">167</data>
  <data key="d5">167</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshkey_private_serialize">
  <data key="d0">192: 	if ((r = sshkey_private_serialize(key, kbuf)) != 0)</data>
  <data key="d2">process_enroll</data>
  <data key="d1">sshkey_private_serialize</data>
  <data key="d3">序列化私钥</data>
  <data key="d4">192</data>
  <data key="d5">192</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|process_load_resident">
  <data key="d0">246: 	if ((r = sshbuf_put_u32(resp, SSH_SK_HELPER_LOAD_RESIDENT)) != 0)</data>
  <data key="d1">sshbuf_put_u32</data>
  <data key="d2">process_load_resident</data>
  <data key="d3">写入32位无符号整数到sshbuf</data>
  <data key="d4">246</data>
  <data key="d5">246</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sshsk_load_resident">
  <data key="d0">236: 	if ((r = sshsk_load_resident(provider, device, pin, flags,</data>
  <data key="d2">process_load_resident</data>
  <data key="d1">sshsk_load_resident</data>
  <data key="d3">加载居民密钥</data>
  <data key="d4">236</data>
  <data key="d5">236</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|main">
  <data key="d0">351: 	if (ssh_msg_send(out, SSH_SK_HELPER_VERSION, resp) == -1)</data>
  <data key="d1">ssh_msg_send</data>
  <data key="d2">main</data>
  <data key="d3">发送消息</data>
  <data key="d4">351</data>
  <data key="d5">351</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|sanitise_stdfd">
  <data key="d0">283: 	sanitise_stdfd();</data>
  <data key="d2">main</data>
  <data key="d1">sanitise_stdfd</data>
  <data key="d3">清理标准输入输出</data>
  <data key="d4">283</data>
  <data key="d5">283</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|log_init">
  <data key="d0">284: 	log_init(__progname, log_level, log_facility, log_stderr);</data>
  <data key="d2">main</data>
  <data key="d1">log_init</data>
  <data key="d3">初始化日志功能</data>
  <data key="d4">284</data>
  <data key="d5">284</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|ssh_msg_recv">
  <data key="d0">315: 	if (ssh_msg_recv(in, req) &lt; 0)</data>
  <data key="d2">main</data>
  <data key="d1">ssh_msg_recv</data>
  <data key="d3">接收消息</data>
  <data key="d4">315</data>
  <data key="d5">315</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="ssh-sk-helper.c|ssh_msg_send">
  <data key="d0">351: 	if (ssh_msg_send(out, SSH_SK_HELPER_VERSION, resp) == -1)</data>
  <data key="d2">main</data>
  <data key="d1">ssh_msg_send</data>
  <data key="d3">发送消息</data>
  <data key="d4">351</data>
  <data key="d5">351</data>
  <data key="d6">ssh-sk-helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\ssh-sk-helper.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_load_fd">
  <data key="d0"> 76: 	sshbuf_free(blob);</data>
  <data key="d1">sshbuf_free</data>
  <data key="d2">sshbuf_load_fd</data>
  <data key="d3">释放sshbuf资源</data>
  <data key="d4">76</data>
  <data key="d5">76</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|fstat">
  <data key="d0"> 44: 	if (fstat(fd, &amp;st) == -1)</data>
  <data key="d2">sshbuf_load_fd</data>
  <data key="d1">fstat</data>
  <data key="d3">获取文件状态</data>
  <data key="d4">44</data>
  <data key="d5">44</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_new">
  <data key="d0"> 49: 	if ((blob = sshbuf_new()) == NULL)</data>
  <data key="d2">sshbuf_load_fd</data>
  <data key="d1">sshbuf_new</data>
  <data key="d3">创建新的sshbuf对象</data>
  <data key="d4">49</data>
  <data key="d5">49</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|atomicio">
  <data key="d0"> 52: 		if ((len = atomicio(read, fd, buf, sizeof(buf))) == 0) {</data>
  <data key="d2">sshbuf_load_fd</data>
  <data key="d1">atomicio</data>
  <data key="d3">从文件描述符读取数据</data>
  <data key="d4">52</data>
  <data key="d5">52</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_put">
  <data key="d0"> 58: 		if ((r = sshbuf_put(blob, buf, len)) != 0)</data>
  <data key="d2">sshbuf_load_fd</data>
  <data key="d1">sshbuf_put</data>
  <data key="d3">向sshbuf添加数据</data>
  <data key="d4">58</data>
  <data key="d5">58</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_len">
  <data key="d0"> 60: 		if (sshbuf_len(blob) &gt; SSHBUF_SIZE_MAX) {</data>
  <data key="d2">sshbuf_load_fd</data>
  <data key="d1">sshbuf_len</data>
  <data key="d3">获取sshbuf长度</data>
  <data key="d4">60</data>
  <data key="d5">60</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_free">
  <data key="d0"> 76: 	sshbuf_free(blob);</data>
  <data key="d2">sshbuf_load_fd</data>
  <data key="d1">sshbuf_free</data>
  <data key="d3">释放sshbuf资源</data>
  <data key="d4">76</data>
  <data key="d5">76</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_load_file">
  <data key="d0"> 88: 	if ((r = sshbuf_load_fd(fd, bufp)) != 0)</data>
  <data key="d1">sshbuf_load_fd</data>
  <data key="d2">sshbuf_load_file</data>
  <data key="d3">加载文件内容到sshbuf</data>
  <data key="d4">88</data>
  <data key="d5">88</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|open">
  <data key="d0"> 86: 	if ((fd = open(path, O_RDONLY)) == -1)</data>
  <data key="d2">sshbuf_load_file</data>
  <data key="d1">open</data>
  <data key="d3">打开文件</data>
  <data key="d4">86</data>
  <data key="d5">86</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_write_file">
  <data key="d0">111: 		unlink(path);</data>
  <data key="d1">unlink</data>
  <data key="d2">sshbuf_write_file</data>
  <data key="d3">删除文件</data>
  <data key="d4">111</data>
  <data key="d5">111</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|sshbuf_mutable_ptr">
  <data key="d0">107: 	if (atomicio(vwrite, fd, sshbuf_mutable_ptr(buf),</data>
  <data key="d2">sshbuf_write_file</data>
  <data key="d1">sshbuf_mutable_ptr</data>
  <data key="d3">获取可变指针</data>
  <data key="d4">107</data>
  <data key="d5">107</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="sshbuf-io.c|unlink">
  <data key="d0">111: 		unlink(path);</data>
  <data key="d2">sshbuf_write_file</data>
  <data key="d1">unlink</data>
  <data key="d3">删除文件</data>
  <data key="d4">111</data>
  <data key="d5">111</data>
  <data key="d6">sshbuf-io.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\sshbuf-io.c</data>
</node>
<node id="xmalloc.c|xmalloc">
  <data key="d0"> 39: 		fatal("xmalloc: zero size");
 40: 	ptr = malloc(size);
 41: 	if (ptr == NULL)
 42: 		fatal("xmalloc: out of memory (allocating %zu bytes)", size);</data>
  <data key="d1">fatal</data>
  <data key="d2">xmalloc</data>
  <data key="d3">处理内存分配错误</data>
  <data key="d4">39</data>
  <data key="d5">42</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmalloc.c|fatal">
  <data key="d0"> 39: 		fatal("xmalloc: zero size");
 40: 	ptr = malloc(size);
 41: 	if (ptr == NULL)
 42: 		fatal("xmalloc: out of memory (allocating %zu bytes)", size);</data>
  <data key="d2">xmalloc</data>
  <data key="d1">fatal</data>
  <data key="d3">处理内存分配错误</data>
  <data key="d4">39</data>
  <data key="d5">42</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmalloc.c|xcalloc">
  <data key="d0"> 57: 		fatal("xcalloc: out of memory (allocating %zu bytes)",
 58: 		    size * nmemb);</data>
  <data key="d1">fatal</data>
  <data key="d2">xcalloc</data>
  <data key="d3">处理内存分配错误</data>
  <data key="d4">57</data>
  <data key="d5">58</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmalloc.c|xreallocarray">
  <data key="d0"> 69: 		fatal("xreallocarray: out of memory (%zu elements of %zu bytes)",
 70: 		    nmemb, size);</data>
  <data key="d1">fatal</data>
  <data key="d2">xreallocarray</data>
  <data key="d3">处理内存分配错误</data>
  <data key="d4">69</data>
  <data key="d5">70</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmalloc.c|xrecallocarray">
  <data key="d0"> 81: 		fatal("xrecallocarray: out of memory (%zu elements of %zu bytes)",
 82: 		    nmemb, size);</data>
  <data key="d1">fatal</data>
  <data key="d2">xrecallocarray</data>
  <data key="d3">处理内存分配错误</data>
  <data key="d4">81</data>
  <data key="d5">82</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmalloc.c|xstrdup">
  <data key="d0"> 93: 	cp = xmalloc(len);
 94: 	return memcpy(cp, str, len);</data>
  <data key="d1">xmalloc</data>
  <data key="d2">xstrdup</data>
  <data key="d3">分配字符串内存</data>
  <data key="d4">93</data>
  <data key="d5">94</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmalloc.c|xvasprintf">
  <data key="d0">104: 		fatal("xvasprintf: could not allocate memory");</data>
  <data key="d1">fatal</data>
  <data key="d2">xvasprintf</data>
  <data key="d3">处理内存分配错误</data>
  <data key="d4">104</data>
  <data key="d5">104</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmalloc.c|xasprintf">
  <data key="d0">115: 	i = xvasprintf(ret, fmt, ap);
116: 	va_end(ap);
117: 	return i;</data>
  <data key="d1">xvasprintf</data>
  <data key="d2">xasprintf</data>
  <data key="d3">格式化并分配字符串</data>
  <data key="d4">115</data>
  <data key="d5">117</data>
  <data key="d6">xmalloc.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmalloc.c</data>
</node>
<node id="xmss_hash.c|addr_to_byte">
  <data key="d0"> 26: unsigned char* addr_to_byte(unsigned char *bytes, const uint32_t addr[8]){
 27: #if IS_LITTLE_ENDIAN==1 
 28:   int i = 0;
 29:   for(i=0;i&lt;8;i++)
 30:     to_byte(bytes+i*4, addr[i],4);
 31:   return bytes;  
 32: #else
 33:   memcpy(bytes, addr, 32);
 34:   return bytes; 
 35: #endif   
 36: }</data>
  <data key="d1">to_byte</data>
  <data key="d2">addr_to_byte</data>
  <data key="d3">地址转换为字节</data>
  <data key="d4">26</data>
  <data key="d5">36</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|to_byte">
  <data key="d0"> 26: unsigned char* addr_to_byte(unsigned char *bytes, const uint32_t addr[8]){
 27: #if IS_LITTLE_ENDIAN==1 
 28:   int i = 0;
 29:   for(i=0;i&lt;8;i++)
 30:     to_byte(bytes+i*4, addr[i],4);
 31:   return bytes;  
 32: #else
 33:   memcpy(bytes, addr, 32);
 34:   return bytes; 
 35: #endif   
 36: }</data>
  <data key="d2">addr_to_byte</data>
  <data key="d1">to_byte</data>
  <data key="d3">地址转换为字节</data>
  <data key="d4">26</data>
  <data key="d5">36</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|core_hash_SHA2">
  <data key="d0"> 61:       SHA512(buf, inlen + keylen + n, out);</data>
  <data key="d1">SHA512</data>
  <data key="d2">core_hash_SHA2</data>
  <data key="d3">计算SHA512哈希</data>
  <data key="d4">61</data>
  <data key="d5">61</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|SHA256">
  <data key="d0"> 56:     SHA256(buf, inlen + keylen + n, out);</data>
  <data key="d2">core_hash_SHA2</data>
  <data key="d1">SHA256</data>
  <data key="d3">计算SHA256哈希</data>
  <data key="d4">56</data>
  <data key="d5">56</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|SHA512">
  <data key="d0"> 61:       SHA512(buf, inlen + keylen + n, out);</data>
  <data key="d2">core_hash_SHA2</data>
  <data key="d1">SHA512</data>
  <data key="d3">计算SHA512哈希</data>
  <data key="d4">61</data>
  <data key="d5">61</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|prf">
  <data key="d0"> 71: int prf(unsigned char *out, const unsigned char *in, const unsigned char *key, unsigned int keylen)
 72: { 
 73:   return core_hash_SHA2(out, 3, key, keylen, in, 32, keylen);</data>
  <data key="d1">core_hash_SHA2</data>
  <data key="d2">prf</data>
  <data key="d3">伪随机函数实现</data>
  <data key="d4">71</data>
  <data key="d5">73</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|h_msg">
  <data key="d0"> 79: int h_msg(unsigned char *out, const unsigned char *in, unsigned long long inlen, const unsigned char *key, const unsigned int keylen, const unsigned int n)
 80: {
 81:   if (keylen != 3*n){
 82:     // H_msg takes 3n-bit keys, but n does not match the keylength of keylen
 83:     return -1;
 84:   }  
 85:   return core_hash_SHA2(out, 2, key, keylen, in, inlen, n);</data>
  <data key="d1">core_hash_SHA2</data>
  <data key="d2">h_msg</data>
  <data key="d3">消息哈希实现</data>
  <data key="d4">79</data>
  <data key="d5">85</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|hash_h">
  <data key="d0">113:   return core_hash_SHA2(out, 1, key, n, buf, 2*n, n);</data>
  <data key="d1">core_hash_SHA2</data>
  <data key="d2">hash_h</data>
  <data key="d3">计算哈希</data>
  <data key="d4">113</data>
  <data key="d5">113</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_hash.c|hash_f">
  <data key="d0">135:   return core_hash_SHA2(out, 0, key, n, buf, n, n);</data>
  <data key="d1">core_hash_SHA2</data>
  <data key="d2">hash_f</data>
  <data key="d3">计算哈希</data>
  <data key="d4">135</data>
  <data key="d5">135</data>
  <data key="d6">xmss_hash.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_hash.c</data>
</node>
<node id="xmss_wots.c|wots_log2">
  <data key="d0"> 24: static inline int
 25: wots_log2(uint32_t v)
 26: {
 27:   int      b;
 28: 
 29:   for (b = sizeof (v) * CHAR_BIT - 1; b &gt;= 0; b--) {
 30:     if ((1U &lt;&lt; b) &amp; v) {
 31:       return b;
 32:     }
 33:   }
 34:   return 0;</data>
  <data key="d1">返回调用方单元名称</data>
  <data key="d2">wots_log2</data>
  <data key="d3">计算对数值</data>
  <data key="d4">24</data>
  <data key="d5">34</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|返回调用方单元名称">
  <data key="d0"> 24: static inline int
 25: wots_log2(uint32_t v)
 26: {
 27:   int      b;
 28: 
 29:   for (b = sizeof (v) * CHAR_BIT - 1; b &gt;= 0; b--) {
 30:     if ((1U &lt;&lt; b) &amp; v) {
 31:       return b;
 32:     }
 33:   }
 34:   return 0;</data>
  <data key="d2">wots_log2</data>
  <data key="d1">返回调用方单元名称</data>
  <data key="d3">计算对数值</data>
  <data key="d4">24</data>
  <data key="d5">34</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|wots_set_params">
  <data key="d0"> 38: wots_set_params(wots_params *params, int n, int w)
 39: {
 40:   params-&gt;n = n;
 41:   params-&gt;w = w;
 42:   params-&gt;log_w = wots_log2(params-&gt;w);
 43:   params-&gt;len_1 = (CHAR_BIT * n) / params-&gt;log_w;
 44:   params-&gt;len_2 = (wots_log2(params-&gt;len_1 * (w - 1)) / params-&gt;log_w) + 1;
 45:   params-&gt;len = params-&gt;len_1 + params-&gt;len_2;</data>
  <data key="d1">wots_log2</data>
  <data key="d2">wots_set_params</data>
  <data key="d3">设置WOTS参数</data>
  <data key="d4">38</data>
  <data key="d5">45</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|expand_seed">
  <data key="d0"> 60:     prf((outseeds + (i*params-&gt;n)), ctr, inseed, params-&gt;n);</data>
  <data key="d1">prf</data>
  <data key="d2">expand_seed</data>
  <data key="d3">伪随机函数调用</data>
  <data key="d4">60</data>
  <data key="d5">60</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|to_byte">
  <data key="d0"> 54: static void expand_seed(unsigned char *outseeds, const unsigned char *inseed, const wots_params *params)
 55: {
 56:   uint32_t i = 0;
 57:   unsigned char ctr[32];
 58:   for(i = 0; i &lt; params-&gt;len; i++){
 59:     to_byte(ctr, i, 32);</data>
  <data key="d2">expand_seed</data>
  <data key="d1">to_byte</data>
  <data key="d3">将整数转为字节</data>
  <data key="d4">54</data>
  <data key="d5">59</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|prf">
  <data key="d0"> 60:     prf((outseeds + (i*params-&gt;n)), ctr, inseed, params-&gt;n);</data>
  <data key="d2">expand_seed</data>
  <data key="d1">prf</data>
  <data key="d3">伪随机函数调用</data>
  <data key="d4">60</data>
  <data key="d5">60</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|gen_chain">
  <data key="d0"> 79:     hash_f(out, out, pub_seed, addr, params-&gt;n);</data>
  <data key="d1">hash_f</data>
  <data key="d2">gen_chain</data>
  <data key="d3">哈希函数调用</data>
  <data key="d4">79</data>
  <data key="d5">79</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|setHashADRS">
  <data key="d0"> 71: static void gen_chain(unsigned char *out, const unsigned char *in, unsigned int start, unsigned int steps, const wots_params *params, const unsigned char *pub_seed, uint32_t addr[8])
 72: {
 73:   uint32_t i, j;
 74:   for (j = 0; j &lt; params-&gt;n; j++)
 75:     out[j] = in[j];
 76: 
 77:   for (i = start; i &lt; (start+steps) &amp;&amp; i &lt; params-&gt;w; i++) {
 78:     setHashADRS(addr, i);</data>
  <data key="d2">gen_chain</data>
  <data key="d1">setHashADRS</data>
  <data key="d3">设置哈希地址</data>
  <data key="d4">71</data>
  <data key="d5">78</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|hash_f">
  <data key="d0"> 79:     hash_f(out, out, pub_seed, addr, params-&gt;n);</data>
  <data key="d2">gen_chain</data>
  <data key="d1">hash_f</data>
  <data key="d3">哈希函数调用</data>
  <data key="d4">79</data>
  <data key="d5">79</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|base_w">
  <data key="d0"> 88: static void base_w(int *output, const int out_len, const unsigned char *input, const wots_params *params)
 89: {
 90:   int in = 0;
 91:   int out = 0;
 92:   uint32_t total = 0;
 93:   int bits = 0;
 94:   int consumed = 0;
 95: 
 96:   for (consumed = 0; consumed &lt; out_len; consumed++) {
 97:     if (bits == 0) {
 98:       total = input[in];
 99:       in++;
100:       bits += 8;
101:     }
102:     bits -= params-&gt;log_w;
103:     output[out] = (total &gt;&gt; bits) &amp; (params-&gt;w - 1);
104:     out++;
105:   }
106: }</data>
  <data key="d1">返回调用方单元名称</data>
  <data key="d2">base_w</data>
  <data key="d3">基于w的算法</data>
  <data key="d4">88</data>
  <data key="d5">106</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|wots_pkgen">
  <data key="d0">114:     gen_chain(pk+i*params-&gt;n, pk+i*params-&gt;n, 0, params-&gt;w-1, params, pub_seed, addr);</data>
  <data key="d1">gen_chain</data>
  <data key="d2">wots_pkgen</data>
  <data key="d3">生成链</data>
  <data key="d4">114</data>
  <data key="d5">114</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|setChainADRS">
  <data key="d0">113:     setChainADRS(addr, i);</data>
  <data key="d2">wots_pkgen</data>
  <data key="d1">setChainADRS</data>
  <data key="d3">设置链地址</data>
  <data key="d4">113</data>
  <data key="d5">113</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|wots_sign">
  <data key="d0">152:     gen_chain(sig+i*params-&gt;n, sig+i*params-&gt;n, 0, basew[i], params, pub_seed, addr);</data>
  <data key="d1">gen_chain</data>
  <data key="d2">wots_sign</data>
  <data key="d3">生成签名链</data>
  <data key="d4">152</data>
  <data key="d5">152</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|calloc">
  <data key="d0">124:   int *basew = calloc(params-&gt;len, sizeof(int));</data>
  <data key="d2">wots_sign</data>
  <data key="d1">calloc</data>
  <data key="d3">分配内存</data>
  <data key="d4">124</data>
  <data key="d5">124</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="xmss_wots.c|wots_pkFromSig">
  <data key="d0">187:     gen_chain(pk+i*params-&gt;n, sig+i*params-&gt;n, basew[i], params-&gt;w-1-basew[i], params, pub_seed, addr);</data>
  <data key="d1">gen_chain</data>
  <data key="d2">wots_pkFromSig</data>
  <data key="d3">生成验证链</data>
  <data key="d4">187</data>
  <data key="d5">187</data>
  <data key="d6">xmss_wots.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\xmss_wots.c</data>
</node>
<node id="gnome-ssh-askpass1.c|report_failed_grab">
  <data key="d0"> 62: 	gtk_object_set(GTK_OBJECT(err), "type", GTK_WINDOW_POPUP, NULL);</data>
  <data key="d1">gtk_object_set</data>
  <data key="d2">report_failed_grab</data>
  <data key="d3">设置对话框类型</data>
  <data key="d4">62</data>
  <data key="d5">62</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gnome_message_box_new">
  <data key="d0"> 54: report_failed_grab (void)
 55: {
 56: 	GtkWidget *err;
 57: 
 58: 	err = gnome_message_box_new("Could not grab keyboard or mouse.\n"
 59: 		"A malicious client may be eavesdropping on your session.",
 60: 				    GNOME_MESSAGE_BOX_ERROR, "EXIT", NULL);
 61: 	gtk_window_set_position(GTK_WINDOW(err), GTK_WIN_POS_CENTER);
 62: 	gtk_object_set(GTK_OBJECT(err), "type", GTK_WINDOW_POPUP, NULL);
 63: 
 64: 	gnome_dialog_run_and_close(GNOME_DIALOG(err));
 65: }</data>
  <data key="d2">report_failed_grab</data>
  <data key="d1">gnome_message_box_new</data>
  <data key="d3">创建错误信息框</data>
  <data key="d4">54</data>
  <data key="d5">65</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_window_set_position">
  <data key="d0"> 61: 	gtk_window_set_position(GTK_WINDOW(err), GTK_WIN_POS_CENTER);</data>
  <data key="d2">report_failed_grab</data>
  <data key="d1">gtk_window_set_position</data>
  <data key="d3">设置窗口位置</data>
  <data key="d4">61</data>
  <data key="d5">61</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_object_set">
  <data key="d0"> 62: 	gtk_object_set(GTK_OBJECT(err), "type", GTK_WINDOW_POPUP, NULL);</data>
  <data key="d2">report_failed_grab</data>
  <data key="d1">gtk_object_set</data>
  <data key="d3">设置对话框类型</data>
  <data key="d4">62</data>
  <data key="d5">62</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|passphrase_dialog">
  <data key="d0">129: 	passphrase = gtk_entry_get_text(GTK_ENTRY(entry));</data>
  <data key="d1">gtk_entry_get_text</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d3">获取输入框文本</data>
  <data key="d4">129</data>
  <data key="d5">129</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gnome_dialog_new">
  <data key="d0"> 78: 	dialog = gnome_dialog_new("OpenSSH", GNOME_STOCK_BUTTON_OK,</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gnome_dialog_new</data>
  <data key="d3">创建对话框</data>
  <data key="d4">78</data>
  <data key="d5">78</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|g_strsplit">
  <data key="d0"> 81: 	messages = g_strsplit(message, "\\n", 0);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">g_strsplit</data>
  <data key="d3">分割字符串消息</data>
  <data key="d4">81</data>
  <data key="d5">81</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_label_new">
  <data key="d0"> 84: 			label = gtk_label_new(messages[i]);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_label_new</data>
  <data key="d3">创建标签</data>
  <data key="d4">84</data>
  <data key="d5">84</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_box_pack_start">
  <data key="d0"> 86: 			    label, FALSE, FALSE, 0);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_box_pack_start</data>
  <data key="d3">添加标签到对话框</data>
  <data key="d4">86</data>
  <data key="d5">86</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_entry_new">
  <data key="d0"> 89: 	entry = gtk_entry_new();</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_entry_new</data>
  <data key="d3">创建输入框</data>
  <data key="d4">89</data>
  <data key="d5">89</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_entry_set_visibility">
  <data key="d0"> 92: 	gtk_entry_set_visibility(GTK_ENTRY(entry), FALSE);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_entry_set_visibility</data>
  <data key="d3">设置输入框可见性</data>
  <data key="d4">92</data>
  <data key="d5">92</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_widget_grab_focus">
  <data key="d0"> 93: 	gtk_widget_grab_focus(entry);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_widget_grab_focus</data>
  <data key="d3">聚焦输入框</data>
  <data key="d4">93</data>
  <data key="d5">93</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gnome_dialog_set_default">
  <data key="d0"> 97: 	gnome_dialog_set_default(GNOME_DIALOG(dialog), 0);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gnome_dialog_set_default</data>
  <data key="d3">设置对话框默认按钮</data>
  <data key="d4">97</data>
  <data key="d5">97</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_window_set_policy">
  <data key="d0"> 99: 	gtk_window_set_policy(GTK_WINDOW(dialog), FALSE, FALSE, TRUE);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_window_set_policy</data>
  <data key="d3">设置窗口策略</data>
  <data key="d4">99</data>
  <data key="d5">99</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_container_set_border_width">
  <data key="d0">101: 	gtk_container_set_border_width(GTK_CONTAINER(GNOME_DIALOG(dialog)-&gt;vbox),</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_container_set_border_width</data>
  <data key="d3">设置边框宽度</data>
  <data key="d4">101</data>
  <data key="d5">101</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_widget_show_all">
  <data key="d0">103: 	gtk_widget_show_all(dialog);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_widget_show_all</data>
  <data key="d3">显示对话框</data>
  <data key="d4">103</data>
  <data key="d5">103</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|XGrabServer">
  <data key="d0">107: 		XGrabServer(GDK_DISPLAY());</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">XGrabServer</data>
  <data key="d3">抓取X服务器</data>
  <data key="d4">107</data>
  <data key="d5">107</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gdk_pointer_grab">
  <data key="d0">108: 	if (grab_pointer &amp;&amp; gdk_pointer_grab(dialog-&gt;window, TRUE, 0,</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gdk_pointer_grab</data>
  <data key="d3">指针抓取</data>
  <data key="d4">108</data>
  <data key="d5">108</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gdk_keyboard_grab">
  <data key="d0">111: 	if (gdk_keyboard_grab(dialog-&gt;window, FALSE, GDK_CURRENT_TIME))</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gdk_keyboard_grab</data>
  <data key="d3">键盘抓取</data>
  <data key="d4">111</data>
  <data key="d5">111</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gnome_dialog_editable_enters">
  <data key="d0">115: 	gnome_dialog_editable_enters(GNOME_DIALOG(dialog), GTK_EDITABLE(entry));</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gnome_dialog_editable_enters</data>
  <data key="d3">响应回车键</data>
  <data key="d4">115</data>
  <data key="d5">115</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gnome_dialog_run">
  <data key="d0">118: 	result = gnome_dialog_run(GNOME_DIALOG(dialog));</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gnome_dialog_run</data>
  <data key="d3">运行对话框</data>
  <data key="d4">118</data>
  <data key="d5">118</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|XUngrabServer">
  <data key="d0">122: 		XUngrabServer(GDK_DISPLAY());</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">XUngrabServer</data>
  <data key="d3">释放X服务器抓取</data>
  <data key="d4">122</data>
  <data key="d5">122</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gdk_pointer_ungrab">
  <data key="d0">124: 		gdk_pointer_ungrab(GDK_CURRENT_TIME);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gdk_pointer_ungrab</data>
  <data key="d3">释放指针抓取</data>
  <data key="d4">124</data>
  <data key="d5">124</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gdk_keyboard_ungrab">
  <data key="d0">125: 	gdk_keyboard_ungrab(GDK_CURRENT_TIME);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gdk_keyboard_ungrab</data>
  <data key="d3">释放键盘抓取</data>
  <data key="d4">125</data>
  <data key="d5">125</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gtk_entry_get_text">
  <data key="d0">129: 	passphrase = gtk_entry_get_text(GTK_ENTRY(entry));</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_entry_get_text</data>
  <data key="d3">获取输入框文本</data>
  <data key="d4">129</data>
  <data key="d5">129</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|main">
  <data key="d0">169: 	result = passphrase_dialog(message);</data>
  <data key="d1">passphrase_dialog</data>
  <data key="d2">main</data>
  <data key="d3">调用密码对话框</data>
  <data key="d4">169</data>
  <data key="d5">169</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass1.c|gnome_init">
  <data key="d0">161: 	gnome_init("GNOME ssh-askpass", "0.1", argc, argv);</data>
  <data key="d2">main</data>
  <data key="d1">gnome_init</data>
  <data key="d3">初始化GNOME环境</data>
  <data key="d4">161</data>
  <data key="d5">161</data>
  <data key="d6">gnome-ssh-askpass1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass1.c</data>
</node>
<node id="gnome-ssh-askpass2.c|report_failed_grab">
  <data key="d0"> 76: 	gtk_dialog_run(GTK_DIALOG(err));
 77: 
 78: 	gtk_widget_destroy(err);</data>
  <data key="d1">gtk_dialog_run</data>
  <data key="d2">report_failed_grab</data>
  <data key="d3">运行对话框并等待用户响应</data>
  <data key="d4">76</data>
  <data key="d5">78</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_message_dialog_new">
  <data key="d0"> 66: report_failed_grab (GtkWidget *parent_window, const char *what)
 67: {
 68: 	GtkWidget *err;
 69: 
 70: 	err = gtk_message_dialog_new(GTK_WINDOW(parent_window), 0,
 71: 	    GTK_MESSAGE_ERROR, GTK_BUTTONS_CLOSE,
 72: 	    "Could not grab %s. A malicious client may be eavesdropping "
 73: 	    "on your session.", what);
 74: 	gtk_window_set_position(GTK_WINDOW(err), GTK_WIN_POS_CENTER);
 75: 
 76: 	gtk_dialog_run(GTK_DIALOG(err));
 77: 
 78: 	gtk_widget_destroy(err);</data>
  <data key="d2">report_failed_grab</data>
  <data key="d1">gtk_message_dialog_new</data>
  <data key="d3">创建错误信息对话框</data>
  <data key="d4">66</data>
  <data key="d5">78</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_dialog_run">
  <data key="d0"> 76: 	gtk_dialog_run(GTK_DIALOG(err));
 77: 
 78: 	gtk_widget_destroy(err);</data>
  <data key="d2">report_failed_grab</data>
  <data key="d1">gtk_dialog_run</data>
  <data key="d3">运行对话框并等待用户响应</data>
  <data key="d4">76</data>
  <data key="d5">78</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|ok_dialog">
  <data key="d0"> 82: ok_dialog(GtkWidget *entry, gpointer dialog)
 83: {
 84: 	g_return_if_fail(GTK_IS_DIALOG(dialog));
 85: 	gtk_dialog_response(GTK_DIALOG(dialog), GTK_RESPONSE_OK);
 86: }</data>
  <data key="d1">gtk_dialog_response</data>
  <data key="d2">ok_dialog</data>
  <data key="d3">设置对话框响应为OK</data>
  <data key="d4">82</data>
  <data key="d5">86</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_dialog_response">
  <data key="d0"> 82: ok_dialog(GtkWidget *entry, gpointer dialog)
 83: {
 84: 	g_return_if_fail(GTK_IS_DIALOG(dialog));
 85: 	gtk_dialog_response(GTK_DIALOG(dialog), GTK_RESPONSE_OK);
 86: }</data>
  <data key="d2">ok_dialog</data>
  <data key="d1">gtk_dialog_response</data>
  <data key="d3">设置对话框响应为OK</data>
  <data key="d4">82</data>
  <data key="d5">86</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|check_none">
  <data key="d0"> 98: 		gtk_widget_grab_focus(gtk_dialog_get_widget_for_response(
 99: 		    dialog, GTK_RESPONSE_CLOSE));
100: 		return TRUE;</data>
  <data key="d1">gtk_widget_grab_focus</data>
  <data key="d2">check_none</data>
  <data key="d3">聚焦到关闭按钮</data>
  <data key="d4">98</data>
  <data key="d5">100</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_widget_grab_focus">
  <data key="d0"> 98: 		gtk_widget_grab_focus(gtk_dialog_get_widget_for_response(
 99: 		    dialog, GTK_RESPONSE_CLOSE));
100: 		return TRUE;</data>
  <data key="d2">check_none</data>
  <data key="d1">gtk_widget_grab_focus</data>
  <data key="d3">聚焦到关闭按钮</data>
  <data key="d4">98</data>
  <data key="d5">100</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|parse_env_hex_color">
  <data key="d0">128: 	ul = strtoul(s, &amp;ep, 16);</data>
  <data key="d1">strtoul</data>
  <data key="d2">parse_env_hex_color</data>
  <data key="d3">字符串转为无符号长整型</data>
  <data key="d4">128</data>
  <data key="d5">128</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|getenv">
  <data key="d0">115: 	if ((s = getenv(env)) == NULL)</data>
  <data key="d2">parse_env_hex_color</data>
  <data key="d1">getenv</data>
  <data key="d3">获取环境变量</data>
  <data key="d4">115</data>
  <data key="d5">115</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|strtoul">
  <data key="d0">128: 	ul = strtoul(s, &amp;ep, 16);</data>
  <data key="d2">parse_env_hex_color</data>
  <data key="d1">strtoul</data>
  <data key="d3">字符串转为无符号长整型</data>
  <data key="d4">128</data>
  <data key="d5">128</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|passphrase_dialog">
  <data key="d0">293: 	gtk_widget_destroy(dialog);</data>
  <data key="d1">gtk_widget_destroy</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d3">销毁对话框</data>
  <data key="d4">293</data>
  <data key="d5">293</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_window_new">
  <data key="d0">170: 	parent_window = gtk_window_new(GTK_WINDOW_TOPLEVEL);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_window_new</data>
  <data key="d3">创建父窗口</data>
  <data key="d4">170</data>
  <data key="d5">170</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_widget_modify_fg">
  <data key="d0">197: 		gtk_widget_modify_fg(dialog, GTK_STATE_NORMAL, &amp;fg);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_widget_modify_fg</data>
  <data key="d3">修改对话框前景色</data>
  <data key="d4">197</data>
  <data key="d5">197</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_widget_modify_bg">
  <data key="d0">199: 		gtk_widget_modify_bg(dialog, GTK_STATE_NORMAL, &amp;bg);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_widget_modify_bg</data>
  <data key="d3">修改对话框背景色</data>
  <data key="d4">199</data>
  <data key="d5">199</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_entry_new">
  <data key="d0">202: 		entry = gtk_entry_new();</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_entry_new</data>
  <data key="d3">创建输入框</data>
  <data key="d4">202</data>
  <data key="d5">202</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|g_signal_connect">
  <data key="d0">215: 			g_signal_connect(G_OBJECT(entry), "activate",
216: 					 G_CALLBACK(ok_dialog), dialog);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">g_signal_connect</data>
  <data key="d3">连接信号处理函数</data>
  <data key="d4">215</data>
  <data key="d5">216</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gdk_pointer_grab">
  <data key="d0">234: 			status = gdk_pointer_grab(
235: 			    (gtk_widget_get_window(GTK_WIDGET(dialog))), TRUE,
236: 			    0, NULL, NULL, GDK_CURRENT_TIME);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gdk_pointer_grab</data>
  <data key="d3">抓取指针</data>
  <data key="d4">234</data>
  <data key="d5">236</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gdk_keyboard_grab">
  <data key="d0">247: 		status = gdk_keyboard_grab(
248: 		    gtk_widget_get_window(GTK_WIDGET(dialog)), FALSE,
249: 		    GDK_CURRENT_TIME);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gdk_keyboard_grab</data>
  <data key="d3">抓取键盘</data>
  <data key="d4">247</data>
  <data key="d5">249</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|g_strdup">
  <data key="d0">274: 		passphrase = g_strdup(gtk_entry_get_text(GTK_ENTRY(entry)));</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">g_strdup</data>
  <data key="d3">复制字符串</data>
  <data key="d4">274</data>
  <data key="d5">274</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|g_locale_from_utf8">
  <data key="d0">277: 			    strlen(passphrase), NULL, NULL, NULL);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">g_locale_from_utf8</data>
  <data key="d3">从UTF-8转换为本地字符串</data>
  <data key="d4">277</data>
  <data key="d5">277</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|g_free">
  <data key="d0">281: 				g_free(local);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">g_free</data>
  <data key="d3">释放内存</data>
  <data key="d4">281</data>
  <data key="d5">281</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_widget_destroy">
  <data key="d0">293: 	gtk_widget_destroy(dialog);</data>
  <data key="d2">passphrase_dialog</data>
  <data key="d1">gtk_widget_destroy</data>
  <data key="d3">销毁对话框</data>
  <data key="d4">293</data>
  <data key="d5">293</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|main">
  <data key="d0">337: 	result = passphrase_dialog(message, prompt_type);</data>
  <data key="d1">passphrase_dialog</data>
  <data key="d2">main</data>
  <data key="d3">处理密码输入对话框</data>
  <data key="d4">337</data>
  <data key="d5">337</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|gtk_init">
  <data key="d0">321: 	gtk_init(&amp;argc, &amp;argv);</data>
  <data key="d2">main</data>
  <data key="d1">gtk_init</data>
  <data key="d3">初始化GTK库</data>
  <data key="d4">321</data>
  <data key="d5">321</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="gnome-ssh-askpass2.c|g_strjoinv">
  <data key="d0">324: 		message = g_strjoinv(" ", argv + 1);</data>
  <data key="d2">main</data>
  <data key="d1">g_strjoinv</data>
  <data key="d3">组合参数为消息</data>
  <data key="d4">324</data>
  <data key="d5">324</data>
  <data key="d6">gnome-ssh-askpass2.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\contrib\gnome-ssh-askpass2.c</data>
</node>
<node id="bsd-asprintf.c|vasprintf">
  <data key="d0">66: 			ret = vsnprintf(newstr, len, fmt, ap2);</data>
  <data key="d1">vsnprintf</data>
  <data key="d2">vasprintf</data>
  <data key="d3">重新格式化字符串</data>
  <data key="d4">66</data>
  <data key="d5">66</data>
  <data key="d6">bsd-asprintf.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\bsd-asprintf.c</data>
</node>
<node id="bsd-asprintf.c|malloc">
  <data key="d0">49: 	if ((string = malloc(INIT_SZ)) == NULL)
50: 		goto fail;</data>
  <data key="d2">vasprintf</data>
  <data key="d1">malloc</data>
  <data key="d3">分配初始字符串内存</data>
  <data key="d4">49</data>
  <data key="d5">50</data>
  <data key="d6">bsd-asprintf.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\bsd-asprintf.c</data>
</node>
<node id="bsd-asprintf.c|vsnprintf">
  <data key="d0">52: 	ret = vsnprintf(string, INIT_SZ, fmt, ap2);</data>
  <data key="d2">vasprintf</data>
  <data key="d1">vsnprintf</data>
  <data key="d3">格式化字符串并写入</data>
  <data key="d4">52</data>
  <data key="d5">52</data>
  <data key="d6">bsd-asprintf.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\bsd-asprintf.c</data>
</node>
<node id="bsd-asprintf.c|realloc">
  <data key="d0">60: 		if ((newstr = realloc(string, len)) == NULL) {
61: 			free(string);</data>
  <data key="d2">vasprintf</data>
  <data key="d1">realloc</data>
  <data key="d3">重新分配字符串内存</data>
  <data key="d4">60</data>
  <data key="d5">61</data>
  <data key="d6">bsd-asprintf.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\bsd-asprintf.c</data>
</node>
<node id="bsd-asprintf.c|asprintf">
  <data key="d0">95: 	va_end(ap);</data>
  <data key="d1">va_end</data>
  <data key="d2">asprintf</data>
  <data key="d3">结束可变参数列表</data>
  <data key="d4">95</data>
  <data key="d5">95</data>
  <data key="d6">bsd-asprintf.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\bsd-asprintf.c</data>
</node>
<node id="bsd-asprintf.c|va_start">
  <data key="d0">93: 	va_start(ap, fmt);</data>
  <data key="d2">asprintf</data>
  <data key="d1">va_start</data>
  <data key="d3">初始化可变参数列表</data>
  <data key="d4">93</data>
  <data key="d5">93</data>
  <data key="d6">bsd-asprintf.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\bsd-asprintf.c</data>
</node>
<node id="bsd-asprintf.c|va_end">
  <data key="d0">95: 	va_end(ap);</data>
  <data key="d2">asprintf</data>
  <data key="d1">va_end</data>
  <data key="d3">结束可变参数列表</data>
  <data key="d4">95</data>
  <data key="d5">95</data>
  <data key="d6">bsd-asprintf.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\bsd-asprintf.c</data>
</node>
<node id="sha1.c|SHA1Transform">
  <data key="d0">137: 		SHA1Transform(context-&gt;state, context-&gt;buffer);
138: 		for ( ; i + 63 &lt; len; i += 64)
139: 			SHA1Transform(context-&gt;state, (u_int8_t *)&amp;data[i]);</data>
  <data key="d1">SHA1Transform</data>
  <data key="d2">SHA1Transform</data>
  <data key="d3">SHA1变换核心算法</data>
  <data key="d4">137</data>
  <data key="d5">139</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="sha1.c|memcpy">
  <data key="d0"> 63: 	(void)memcpy(block, buffer, SHA1_BLOCK_LENGTH);</data>
  <data key="d2">SHA1Transform</data>
  <data key="d1">memcpy</data>
  <data key="d3">复制内存块</data>
  <data key="d4">63</data>
  <data key="d5">63</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="sha1.c|SHA1Init">
  <data key="d0">111: SHA1Init(SHA1_CTX *context)
112: {
113: 
114: 	/* SHA1 initialization constants */
115: 	context-&gt;count = 0;
116: 	context-&gt;state[0] = 0x67452301;
117: 	context-&gt;state[1] = 0xEFCDAB89;
118: 	context-&gt;state[2] = 0x98BADCFE;
119: 	context-&gt;state[3] = 0x10325476;
120: 	context-&gt;state[4] = 0xC3D2E1F0;
121: }</data>
  <data key="d1"></data>
  <data key="d2">SHA1Init</data>
  <data key="d3">初始化SHA1上下文</data>
  <data key="d4">111</data>
  <data key="d5">121</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="sha1.c|">
  <data key="d0">111: SHA1Init(SHA1_CTX *context)
112: {
113: 
114: 	/* SHA1 initialization constants */
115: 	context-&gt;count = 0;
116: 	context-&gt;state[0] = 0x67452301;
117: 	context-&gt;state[1] = 0xEFCDAB89;
118: 	context-&gt;state[2] = 0x98BADCFE;
119: 	context-&gt;state[3] = 0x10325476;
120: 	context-&gt;state[4] = 0xC3D2E1F0;
121: }</data>
  <data key="d2">SHA1Init</data>
  <data key="d1"></data>
  <data key="d3">初始化SHA1上下文</data>
  <data key="d4">111</data>
  <data key="d5">121</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="sha1.c|SHA1Update">
  <data key="d0">137: 		SHA1Transform(context-&gt;state, context-&gt;buffer);
138: 		for ( ; i + 63 &lt; len; i += 64)
139: 			SHA1Transform(context-&gt;state, (u_int8_t *)&amp;data[i]);</data>
  <data key="d1">SHA1Transform</data>
  <data key="d2">SHA1Update</data>
  <data key="d3">更新SHA1状态</data>
  <data key="d4">137</data>
  <data key="d5">139</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="sha1.c|SHA1Pad">
  <data key="d0">162: 	SHA1Update(context, (u_int8_t *)"\200", 1);</data>
  <data key="d1">SHA1Update</data>
  <data key="d2">SHA1Pad</data>
  <data key="d3">添加填充并更新</data>
  <data key="d4">162</data>
  <data key="d5">162</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="sha1.c|SHA1Final">
  <data key="d0">179: 	explicit_bzero(context, sizeof(*context));</data>
  <data key="d1">explicit_bzero</data>
  <data key="d2">SHA1Final</data>
  <data key="d3">清空上下文</data>
  <data key="d4">179</data>
  <data key="d5">179</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="sha1.c|explicit_bzero">
  <data key="d0">179: 	explicit_bzero(context, sizeof(*context));</data>
  <data key="d2">SHA1Final</data>
  <data key="d1">explicit_bzero</data>
  <data key="d3">清空上下文</data>
  <data key="d4">179</data>
  <data key="d5">179</data>
  <data key="d6">sha1.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\openbsd-compat\sha1.c</data>
</node>
<node id="check-perm.c|fatal">
  <data key="d0"> 31: 	exit(1);</data>
  <data key="d1">exit</data>
  <data key="d2">fatal</data>
  <data key="d3">退出程序</data>
  <data key="d4">31</data>
  <data key="d5">31</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|vfprintf">
  <data key="d0"> 24: {
 25: 	va_list args;
 26: 
 27: 	va_start(args, fmt);
 28: 	vfprintf(stderr, fmt, args);</data>
  <data key="d2">fatal</data>
  <data key="d1">vfprintf</data>
  <data key="d3">格式化输出到stderr</data>
  <data key="d4">24</data>
  <data key="d5">28</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|exit">
  <data key="d0"> 31: 	exit(1);</data>
  <data key="d2">fatal</data>
  <data key="d1">exit</data>
  <data key="d3">退出程序</data>
  <data key="d4">31</data>
  <data key="d5">31</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|safely_chroot">
  <data key="d0"> 74: 	if (chdir(path) == -1)</data>
  <data key="d1">chdir</data>
  <data key="d2">safely_chroot</data>
  <data key="d3">改变当前工作目录</data>
  <data key="d4">74</data>
  <data key="d5">74</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|chdir">
  <data key="d0"> 74: 	if (chdir(path) == -1)</data>
  <data key="d2">safely_chroot</data>
  <data key="d1">chdir</data>
  <data key="d3">改变当前工作目录</data>
  <data key="d4">74</data>
  <data key="d5">74</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|platform_sys_dir_uid">
  <data key="d0"> 81: platform_sys_dir_uid(uid_t uid)
 82: {
 83: 	if (uid == 0)
 84: 		return 1;
 85: #ifdef PLATFORM_SYS_DIR_UID
 86: 	if (uid == PLATFORM_SYS_DIR_UID)
 87: 		return 1;
 88: #endif
 89: 	return 0;</data>
  <data key="d1">return</data>
  <data key="d2">platform_sys_dir_uid</data>
  <data key="d3">返回用户ID判断结果</data>
  <data key="d4">81</data>
  <data key="d5">89</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|return">
  <data key="d0"> 81: platform_sys_dir_uid(uid_t uid)
 82: {
 83: 	if (uid == 0)
 84: 		return 1;
 85: #ifdef PLATFORM_SYS_DIR_UID
 86: 	if (uid == PLATFORM_SYS_DIR_UID)
 87: 		return 1;
 88: #endif
 89: 	return 0;</data>
  <data key="d2">platform_sys_dir_uid</data>
  <data key="d1">return</data>
  <data key="d3">返回用户ID判断结果</data>
  <data key="d4">81</data>
  <data key="d5">89</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|auth_secure_path">
  <data key="d0">138: 		if (comparehome &amp;&amp; strcmp(homedir, buf) == 0)</data>
  <data key="d1">strcmp</data>
  <data key="d2">auth_secure_path</data>
  <data key="d3">比较字符串</data>
  <data key="d4">138</data>
  <data key="d5">138</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|realpath">
  <data key="d0">102: 	if (realpath(name, buf) == NULL) {</data>
  <data key="d2">auth_secure_path</data>
  <data key="d1">realpath</data>
  <data key="d3">获取绝对路径</data>
  <data key="d4">102</data>
  <data key="d5">102</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|snprintf">
  <data key="d0">103: 		snprintf(err, errlen, "realpath %s failed: %s", name,
104: 		    strerror(errno));
105: 		return -1;</data>
  <data key="d2">auth_secure_path</data>
  <data key="d1">snprintf</data>
  <data key="d3">格式化输出错误信息</data>
  <data key="d4">103</data>
  <data key="d5">105</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|dirname">
  <data key="d0">123: 		if ((cp = dirname(buf)) == NULL) {</data>
  <data key="d2">auth_secure_path</data>
  <data key="d1">dirname</data>
  <data key="d3">获取目录名</data>
  <data key="d4">123</data>
  <data key="d5">123</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|stat">
  <data key="d0">129: 		if (stat(buf, &amp;st) &lt; 0 ||</data>
  <data key="d2">auth_secure_path</data>
  <data key="d1">stat</data>
  <data key="d3">获取文件或目录状态</data>
  <data key="d4">129</data>
  <data key="d5">129</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|strcmp">
  <data key="d0">138: 		if (comparehome &amp;&amp; strcmp(homedir, buf) == 0)</data>
  <data key="d2">auth_secure_path</data>
  <data key="d1">strcmp</data>
  <data key="d3">比较字符串</data>
  <data key="d4">138</data>
  <data key="d5">138</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|usage">
  <data key="d0">155: 	exit(1);</data>
  <data key="d1">exit</data>
  <data key="d2">usage</data>
  <data key="d3">退出程序</data>
  <data key="d4">155</data>
  <data key="d5">155</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|fprintf">
  <data key="d0">154: 	fprintf(stderr, "check-perm -m [chroot | keys-command] [path]\n");</data>
  <data key="d2">usage</data>
  <data key="d1">fprintf</data>
  <data key="d3">格式化输出到stderr</data>
  <data key="d4">154</data>
  <data key="d5">154</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|main">
  <data key="d0">201: 		fprintf(stderr, "Invalid mode\n");</data>
  <data key="d1">fprintf</data>
  <data key="d2">main</data>
  <data key="d3">格式化输出到stderr</data>
  <data key="d4">201</data>
  <data key="d5">201</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="check-perm.c|getuid">
  <data key="d0">193: 		safely_chroot(path, getuid());</data>
  <data key="d2">main</data>
  <data key="d1">getuid</data>
  <data key="d3">获取用户ID</data>
  <data key="d4">193</data>
  <data key="d5">193</data>
  <data key="d6">check-perm.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\check-perm.c</data>
</node>
<node id="netcat.c|main">
  <data key="d0"> 390: 				s = local_listen(host, uport, hints);</data>
  <data key="d1">local_listen</data>
  <data key="d2">main</data>
  <data key="d3">监听本地连接</data>
  <data key="d4">390</data>
  <data key="d5">390</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|signal">
  <data key="d0"> 148: int
 149: main(int argc, char *argv[])
 150: {
 151: 	int ch, s, ret, socksv;
 152: 	char *host, *uport;
 153: 	struct addrinfo hints;
 154: 	struct servent *sv;
 155: 	socklen_t len;
 156: 	struct sockaddr_storage cliaddr;
 157: 	char *proxy = NULL;
 158: 	const char *errstr, *proxyhost = "", *proxyport = NULL;
 159: 	struct addrinfo proxyhints;
 160: 	char unix_dg_tmp_socket_buf[UNIX_DG_TMP_SOCKET_SIZE];
 161: 
 162: 	ret = 1;
 163: 	s = 0;
 164: 	socksv = 5;
 165: 	host = NULL;
 166: 	uport = NULL;
 167: 	sv = NULL;
 168: 
 169: 	signal(SIGPIPE, SIG_IGN);</data>
  <data key="d2">main</data>
  <data key="d1">signal</data>
  <data key="d3">忽略SIGPIPE信号</data>
  <data key="d4">148</data>
  <data key="d5">169</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|getopt">
  <data key="d0"> 171: 	while ((ch = getopt(argc, argv,</data>
  <data key="d2">main</data>
  <data key="d1">getopt</data>
  <data key="d3">解析命令行参数</data>
  <data key="d4">171</data>
  <data key="d5">171</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|usage">
  <data key="d0">1335: usage(int ret)
1336: {
1337: 	fprintf(stderr,
1338: 	    "usage: nc [-46DdFhklNnrStUuvz] [-I length] [-i interval] [-O length]\n"
1339: 	    "\t  [-P proxy_username] [-p source_port] [-s source] [-T toskeyword]\n"
1340: 	    "\t  [-V rtable] [-w timeout] [-X proxy_protocol]\n"
1341: 	    "\t  [-x proxy_address[:port]] [destination] [port]\n");
1342: 	if (ret)
1343: 		exit(1);
1344: }
1345: </data>
  <data key="d2">main</data>
  <data key="d1">usage</data>
  <data key="d3">输出使用说明</data>
  <data key="d4">1335</data>
  <data key="d5">1345</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|local_listen">
  <data key="d0"> 768: 		if (listen(s, 1) &lt; 0)
 769: 			err(1, "listen");
 770: 	}</data>
  <data key="d2">local_listen</data>
  <data key="d1">listen</data>
  <data key="d3">开始监听</data>
  <data key="d4">768</data>
  <data key="d5">770</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|getaddrinfo">
  <data key="d0"> 733: 	if ((error = getaddrinfo(host, port, &amp;hints, &amp;res)))</data>
  <data key="d2">local_listen</data>
  <data key="d1">getaddrinfo</data>
  <data key="d3">获取地址信息</data>
  <data key="d4">733</data>
  <data key="d5">733</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|socket">
  <data key="d0"> 738: 		if ((s = socket(res0-&gt;ai_family, res0-&gt;ai_socktype,</data>
  <data key="d2">local_listen</data>
  <data key="d1">socket</data>
  <data key="d3">创建套接字</data>
  <data key="d4">738</data>
  <data key="d5">738</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|setsockopt">
  <data key="d0"> 742: #ifdef SO_RTABLE
 743: 		if (rtableid &gt;= 0 &amp;&amp; (setsockopt(s, SOL_SOCKET, SO_RTABLE,
 744: 		    &amp;rtableid, sizeof(rtableid)) == -1))
 745: 			err(1, "setsockopt SO_RTABLE");
 746: #endif
 747: #ifdef SO_REUSEPORT
 748: 		ret = setsockopt(s, SOL_SOCKET, SO_REUSEPORT, &amp;x, sizeof(x));
 749: 		if (ret == -1)
 750: 			err(1, "setsockopt SO_REUSEPORT");
 751: #endif
 752: #ifdef SO_REUSEADDR
 753: 		ret = setsockopt(s, SOL_SOCKET, SO_REUSEADDR, &amp;x, sizeof(x));
 754: 		if (ret == -1)
 755: 			err(1, "setsockopt SO_REUSEADDR");
 756: #endif
 757: 		set_common_sockopts(s, res0-&gt;ai_family);
 758: 
 759: 		if (bind(s, (struct sockaddr *)res0-&gt;ai_addr,
 760: 		    res0-&gt;ai_addrlen) == 0)
 761: 			break;
 762: 
 763: 		close(s);
 764: 		s = -1;
 765: 	} while ((res0 = res0-&gt;ai_next) != NULL);
 766: 
 767: 	if (!uflag &amp;&amp; s != -1) {
 768: 		if (listen(s, 1) &lt; 0)
 769: 			err(1, "listen");
 770: 	}</data>
  <data key="d2">local_listen</data>
  <data key="d1">setsockopt</data>
  <data key="d3">设置套接字选项</data>
  <data key="d4">742</data>
  <data key="d5">770</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|bind">
  <data key="d0"> 759: 		if (bind(s, (struct sockaddr *)res0-&gt;ai_addr,</data>
  <data key="d2">local_listen</data>
  <data key="d1">bind</data>
  <data key="d3">绑定套接字</data>
  <data key="d4">759</data>
  <data key="d5">759</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|listen">
  <data key="d0"> 768: 		if (listen(s, 1) &lt; 0)
 769: 			err(1, "listen");
 770: 	}</data>
  <data key="d2">local_listen</data>
  <data key="d1">listen</data>
  <data key="d3">开始监听</data>
  <data key="d4">768</data>
  <data key="d5">770</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|unix_bind">
  <data key="d0"> 546: 	if (bind(s, (struct sockaddr *)&amp;sun_sa, SUN_LEN(&amp;sun_sa)) &lt; 0) {</data>
  <data key="d1">bind</data>
  <data key="d2">unix_bind</data>
  <data key="d3">绑定unix域套接字</data>
  <data key="d4">546</data>
  <data key="d5">546</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|unix_connect">
  <data key="d0"> 581: 	if (connect(s, (struct sockaddr *)&amp;sun_sa, SUN_LEN(&amp;sun_sa)) &lt; 0) {</data>
  <data key="d1">connect</data>
  <data key="d2">unix_connect</data>
  <data key="d3">连接到unix域套接字</data>
  <data key="d4">581</data>
  <data key="d5">581</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|connect">
  <data key="d0"> 581: 	if (connect(s, (struct sockaddr *)&amp;sun_sa, SUN_LEN(&amp;sun_sa)) &lt; 0) {</data>
  <data key="d2">unix_connect</data>
  <data key="d1">connect</data>
  <data key="d3">连接到unix域套接字</data>
  <data key="d4">581</data>
  <data key="d5">581</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|remote_connect">
  <data key="d0"> 631: 		if (rtableid &gt;= 0 &amp;&amp; (setsockopt(s, SOL_SOCKET, SO_RTABLE,
 632: 		    &amp;rtableid, sizeof(rtableid)) == -1))
 633: 			err(1, "setsockopt SO_RTABLE");
 634: #endif
 635: 		/* Bind to a local port or source address if specified. */
 636: 		if (sflag || pflag) {
 637: 			struct addrinfo ahints, *ares;
 638: 
 639: #ifdef SO_BINDANY
 640: 			/* try SO_BINDANY, but don't insist */
 641: 			setsockopt(s, SOL_SOCKET, SO_BINDANY, &amp;on, sizeof(on));
 642: #endif
 643: 			memset(&amp;ahints, 0, sizeof(struct addrinfo));
 644: 			ahints.ai_family = res0-&gt;ai_family;
 645: 			ahints.ai_socktype = uflag ? SOCK_DGRAM : SOCK_STREAM;
 646: 			ahints.ai_protocol = uflag ? IPPROTO_UDP : IPPROTO_TCP;
 647: 			ahints.ai_flags = AI_PASSIVE;
 648: 			if ((error = getaddrinfo(sflag, pflag, &amp;ahints, &amp;ares)))
 649: 				errx(1, "getaddrinfo: %s", gai_strerror(error));
 650: 
 651: 			if (bind(s, (struct sockaddr *)ares-&gt;ai_addr,
 652: 			    ares-&gt;ai_addrlen) &lt; 0)
 653: 				err(1, "bind failed");
 654: 			freeaddrinfo(ares);
 655: 		}
 656: 
 657: 		set_common_sockopts(s, res0-&gt;ai_family);
 658: 
 659: 		if (timeout_connect(s, res0-&gt;ai_addr, res0-&gt;ai_addrlen) == 0)
 660: 			break;
 661: 		else if (vflag)
 662: 			warn("connect to %s port %s (%s) failed", host, port,
 663: 			    uflag ? "udp" : "tcp");
 664: 
 665: 		close(s);
 666: 		s = -1;
 667: 	} while ((res0 = res0-&gt;ai_next) != NULL);
 668: 
 669: 	freeaddrinfo(res);
 670: 
 671: 	return (s);
 672: }
 673: 
 674: int
 675: timeout_connect(int s, const struct sockaddr *name, socklen_t namelen)
 676: {
 677: 	struct pollfd pfd;
 678: 	socklen_t optlen;
 679: 	int flags = 0, optval;
 680: 	int ret;
 681: 
 682: 	if (timeout != -1) {
 683: 		flags = fcntl(s, F_GETFL, 0);
 684: 		if (fcntl(s, F_SETFL, flags | O_NONBLOCK) == -1)
 685: 			err(1, "set non-blocking mode");
 686: 	}
 687: 
 688: 	if ((ret = connect(s, name, namelen)) != 0 &amp;&amp; errno == EINPROGRESS) {
 689: 		pfd.fd = s;
 690: 		pfd.events = POLLOUT;
 691: 		if ((ret = poll(&amp;pfd, 1, timeout)) == 1) {
 692: 			optlen = sizeof(optval);
 693: 			if ((ret = getsockopt(s, SOL_SOCKET, SO_ERROR,
 694: 			    &amp;optval, &amp;optlen)) == 0) {
 695: 				errno = optval;
 696: 				ret = optval == 0 ? 0 : -1;
 697: 			}
 698: 		} else if (ret == 0) {
 699: 			errno = ETIMEDOUT;
 700: 			ret = -1;
 701: 		} else
 702: 			err(1, "poll failed");
 703: 	}
 704: 
 705: 	if (timeout != -1 &amp;&amp; fcntl(s, F_SETFL, flags) == -1)
 706: 		err(1, "restoring flags");
 707: 
 708: 	return (ret);
 709: }
 710: 
 711: /*
 712:  * local_listen()
 713:  * Returns a socket listening on a local port, binds to specified source
 714:  * address. Returns -1 on failure.</data>
  <data key="d1">setsockopt</data>
  <data key="d2">remote_connect</data>
  <data key="d3">设置远程连接套接字选项</data>
  <data key="d4">631</data>
  <data key="d5">714</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|socks_connect">
  <data key="d0">1624: 			r = snprintf(buf, sizeof(buf),</data>
  <data key="d1">read</data>
  <data key="d2">socks_connect</data>
  <data key="d3">读取HTTP响应</data>
  <data key="d4">1624</data>
  <data key="d5">1624</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|decode_addrport">
  <data key="d0">1407: decode_addrport(const char *h, const char *p, struct sockaddr *addr,
1408:     socklen_t addrlen, int v4only, int numeric)
1409: {
1410: 	int r;
1411: 	struct addrinfo hints, *res;</data>
  <data key="d2">socks_connect</data>
  <data key="d1">decode_addrport</data>
  <data key="d3">解码地址和端口</data>
  <data key="d4">1407</data>
  <data key="d5">1411</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|atomicio">
  <data key="d0">1513: 		cnt = atomicio(vwrite, proxyfd, buf, 3);</data>
  <data key="d2">socks_connect</data>
  <data key="d1">atomicio</data>
  <data key="d3">发送到代理套接字</data>
  <data key="d4">1513</data>
  <data key="d5">1513</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="netcat.c|read">
  <data key="d0">1517: 		cnt = atomicio(read, proxyfd, buf, 2);</data>
  <data key="d2">socks_connect</data>
  <data key="d1">read</data>
  <data key="d3">读取SOCKS响应</data>
  <data key="d4">1517</data>
  <data key="d5">1517</data>
  <data key="d6">netcat.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\netcat.c</data>
</node>
<node id="agent_fuzz_helper.c|devnull_or_die">
  <data key="d0"> 15: 		error_f("open /dev/null: %s", strerror(errno));</data>
  <data key="d1">error_f</data>
  <data key="d2">devnull_or_die</data>
  <data key="d3">报告打开文件错误</data>
  <data key="d4">15</data>
  <data key="d5">15</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|open">
  <data key="d0"> 10: devnull_or_die(void)
 11: {
 12: 	int fd;
 13: 
 14: 	if ((fd = open("/dev/null", O_RDWR)) == -1) {
 15: 		error_f("open /dev/null: %s", strerror(errno));
 16: 		abort();
 17: 	}
 18: 	return fd;</data>
  <data key="d2">devnull_or_die</data>
  <data key="d1">open</data>
  <data key="d3">打开/dev/null文件描述符</data>
  <data key="d4">10</data>
  <data key="d5">18</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|error_f">
  <data key="d0"> 15: 		error_f("open /dev/null: %s", strerror(errno));</data>
  <data key="d2">devnull_or_die</data>
  <data key="d1">error_f</data>
  <data key="d3">报告打开文件错误</data>
  <data key="d4">15</data>
  <data key="d5">15</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|pubkey_or_die">
  <data key="d0"> 32: 		error_fr(r, "parse");</data>
  <data key="d1">error_fr</data>
  <data key="d2">pubkey_or_die</data>
  <data key="d3">报告解析公钥错误</data>
  <data key="d4">32</data>
  <data key="d5">32</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|sshkey_new">
  <data key="d0"> 29: 	if ((pubkey = sshkey_new(KEY_UNSPEC)) == NULL)</data>
  <data key="d2">pubkey_or_die</data>
  <data key="d1">sshkey_new</data>
  <data key="d3">创建新的公钥结构</data>
  <data key="d4">29</data>
  <data key="d5">29</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|sshkey_read">
  <data key="d0"> 31: 	if ((r = sshkey_read(pubkey, &amp;cp)) != 0) {</data>
  <data key="d2">pubkey_or_die</data>
  <data key="d1">sshkey_read</data>
  <data key="d3">读取公钥</data>
  <data key="d4">31</data>
  <data key="d5">31</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|error_fr">
  <data key="d0"> 32: 		error_fr(r, "parse");</data>
  <data key="d2">pubkey_or_die</data>
  <data key="d1">error_fr</data>
  <data key="d3">报告解析公钥错误</data>
  <data key="d4">32</data>
  <data key="d5">32</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|privkey_or_die">
  <data key="d0"> 51: 		error_fr(r, "parse");</data>
  <data key="d1">error_fr</data>
  <data key="d2">privkey_or_die</data>
  <data key="d3">报告解析私钥错误</data>
  <data key="d4">51</data>
  <data key="d5">51</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|sshbuf_from">
  <data key="d0"> 46: 	if ((b = sshbuf_from(s, strlen(s))) == NULL) {</data>
  <data key="d2">privkey_or_die</data>
  <data key="d1">sshbuf_from</data>
  <data key="d3">从字符串创建sshbuf</data>
  <data key="d4">46</data>
  <data key="d5">46</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|sshkey_parse_private_fileblob">
  <data key="d0"> 50: 	if ((r = sshkey_parse_private_fileblob(b, "", &amp;privkey, NULL)) != 0) {</data>
  <data key="d2">privkey_or_die</data>
  <data key="d1">sshkey_parse_private_fileblob</data>
  <data key="d3">解析私钥文件blob</data>
  <data key="d4">50</data>
  <data key="d5">50</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|add_key">
  <data key="d0"> 83: 	if ((r = sshkey_cert_copy(cert, id-&gt;key)) != 0) {</data>
  <data key="d1">sshkey_cert_copy</data>
  <data key="d2">add_key</data>
  <data key="d3">复制证书内容</data>
  <data key="d4">83</data>
  <data key="d5">83</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|sshkey_to_certified">
  <data key="d0"> 79: 	if ((r = sshkey_to_certified(id-&gt;key)) != 0) {</data>
  <data key="d2">add_key</data>
  <data key="d1">sshkey_to_certified</data>
  <data key="d3">将私钥转换为证书</data>
  <data key="d4">79</data>
  <data key="d5">79</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|sshkey_cert_copy">
  <data key="d0"> 83: 	if ((r = sshkey_cert_copy(cert, id-&gt;key)) != 0) {</data>
  <data key="d2">add_key</data>
  <data key="d1">sshkey_cert_copy</data>
  <data key="d3">复制证书内容</data>
  <data key="d4">83</data>
  <data key="d5">83</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|cleanup_idtab">
  <data key="d0">101: 		TAILQ_REMOVE(&amp;idtab-&gt;idlist, id, next);</data>
  <data key="d1">TAILQ_REMOVE</data>
  <data key="d2">cleanup_idtab</data>
  <data key="d3">从idlist中移除元素</data>
  <data key="d4">101</data>
  <data key="d5">101</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|TAILQ_FIRST">
  <data key="d0"> 99: 	for (id = TAILQ_FIRST(&amp;idtab-&gt;idlist); id;
100: 	    id = TAILQ_FIRST(&amp;idtab-&gt;idlist)) {</data>
  <data key="d2">cleanup_idtab</data>
  <data key="d1">TAILQ_FIRST</data>
  <data key="d3">获取idtab的第一个元素</data>
  <data key="d4">99</data>
  <data key="d5">100</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|TAILQ_REMOVE">
  <data key="d0">101: 		TAILQ_REMOVE(&amp;idtab-&gt;idlist, id, next);</data>
  <data key="d2">cleanup_idtab</data>
  <data key="d1">TAILQ_REMOVE</data>
  <data key="d3">从idlist中移除元素</data>
  <data key="d4">101</data>
  <data key="d5">101</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|reset_idtab">
  <data key="d0">112: 	idtab_init();</data>
  <data key="d1">idtab_init</data>
  <data key="d2">reset_idtab</data>
  <data key="d3">初始化idtab</data>
  <data key="d4">112</data>
  <data key="d5">112</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|idtab_init">
  <data key="d0">112: 	idtab_init();</data>
  <data key="d2">reset_idtab</data>
  <data key="d1">idtab_init</data>
  <data key="d3">初始化idtab</data>
  <data key="d4">112</data>
  <data key="d5">112</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|reset_sockettab">
  <data key="d0">144: 	new_socket(AUTH_CONNECTION, fd);</data>
  <data key="d1">new_socket</data>
  <data key="d2">reset_sockettab</data>
  <data key="d3">创建新socket</data>
  <data key="d4">144</data>
  <data key="d5">144</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|cleanup_sockettab">
  <data key="d0">139: 	cleanup_sockettab();</data>
  <data key="d2">reset_sockettab</data>
  <data key="d1">cleanup_sockettab</data>
  <data key="d3">清理sockettab</data>
  <data key="d4">139</data>
  <data key="d5">139</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|dup">
  <data key="d0">140: 	if ((fd = dup(devnull)) == -1) {</data>
  <data key="d2">reset_sockettab</data>
  <data key="d1">dup</data>
  <data key="d3">复制文件描述符</data>
  <data key="d4">140</data>
  <data key="d5">140</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|new_socket">
  <data key="d0">144: 	new_socket(AUTH_CONNECTION, fd);</data>
  <data key="d2">reset_sockettab</data>
  <data key="d1">new_socket</data>
  <data key="d3">创建新socket</data>
  <data key="d4">144</data>
  <data key="d5">144</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|test_one">
  <data key="d0">175: 	cleanup_sockettab();</data>
  <data key="d1">cleanup_sockettab</data>
  <data key="d2">test_one</data>
  <data key="d3">清理sockettab</data>
  <data key="d4">175</data>
  <data key="d5">175</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|log_init">
  <data key="d0">157: 		log_init(__progname, SYSLOG_LEVEL_DEBUG3,</data>
  <data key="d2">test_one</data>
  <data key="d1">log_init</data>
  <data key="d3">初始化日志</data>
  <data key="d4">157</data>
  <data key="d5">157</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|sshbuf_put">
  <data key="d0">166: 	(void)sshbuf_put(sockets[0].input, s, slen);</data>
  <data key="d2">test_one</data>
  <data key="d1">sshbuf_put</data>
  <data key="d3">将数据写入socket输入缓冲区</data>
  <data key="d4">166</data>
  <data key="d5">166</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|process_message">
  <data key="d0">169: 		process_message(0);</data>
  <data key="d2">test_one</data>
  <data key="d1">process_message</data>
  <data key="d3">处理消息</data>
  <data key="d4">169</data>
  <data key="d5">169</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|pkcs11_make_cert">
  <data key="d0">182: 	return -1; /* XXX */</data>
  <data key="d1"></data>
  <data key="d2">pkcs11_make_cert</data>
  <data key="d3">返回失败标志</data>
  <data key="d4">182</data>
  <data key="d5">182</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="agent_fuzz_helper.c|">
  <data key="d0">182: 	return -1; /* XXX */</data>
  <data key="d2">pkcs11_make_cert</data>
  <data key="d1"></data>
  <data key="d3">返回失败标志</data>
  <data key="d4">182</data>
  <data key="d5">182</data>
  <data key="d6">agent_fuzz_helper.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\agent_fuzz_helper.c</data>
</node>
<node id="mkcorpus_sntrup761.c|randombytes">
  <data key="d0">31: void
32: randombytes(unsigned char *ptr, size_t l)
33: {
34: 	if (real_random)
35: 		arc4random_buf(ptr, l);
36: 	else
37: 		memset(ptr, 0, l);
38: }</data>
  <data key="d1">arc4random_buf</data>
  <data key="d2">randombytes</data>
  <data key="d3">根据real_random条件获取随机数据</data>
  <data key="d4">31</data>
  <data key="d5">38</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|arc4random_buf">
  <data key="d0">31: void
32: randombytes(unsigned char *ptr, size_t l)
33: {
34: 	if (real_random)
35: 		arc4random_buf(ptr, l);
36: 	else
37: 		memset(ptr, 0, l);
38: }</data>
  <data key="d2">randombytes</data>
  <data key="d1">arc4random_buf</data>
  <data key="d3">根据real_random条件获取随机数据</data>
  <data key="d4">31</data>
  <data key="d5">38</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|write_blob">
  <data key="d0">40: void write_blob(const char *path, int n, const char *suffix,
41:     const void *ptr, size_t l)
42: {
43: 	char name[256];
44: 	FILE *f;
45: 
46: 	snprintf(name, sizeof(name), "%s/%06d.%s", path, n, suffix);
47: 	if ((f = fopen(name, "wb+")) == NULL)
48: 		err(1, "fopen %s", name);
49: 	if (fwrite(ptr, l, 1, f) != 1)
50: 		err(1, "write %s", name);
51: 	fclose(f);</data>
  <data key="d1">fwrite</data>
  <data key="d2">write_blob</data>
  <data key="d3">写入数据到文件</data>
  <data key="d4">40</data>
  <data key="d5">51</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|fopen">
  <data key="d0">40: void write_blob(const char *path, int n, const char *suffix,
41:     const void *ptr, size_t l)
42: {
43: 	char name[256];
44: 	FILE *f;
45: 
46: 	snprintf(name, sizeof(name), "%s/%06d.%s", path, n, suffix);
47: 	if ((f = fopen(name, "wb+")) == NULL)
48: 		err(1, "fopen %s", name);
49: 	if (fwrite(ptr, l, 1, f) != 1)
50: 		err(1, "write %s", name);
51: 	fclose(f);</data>
  <data key="d2">write_blob</data>
  <data key="d1">fopen</data>
  <data key="d3">打开文件进行写入</data>
  <data key="d4">40</data>
  <data key="d5">51</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|fwrite">
  <data key="d0">40: void write_blob(const char *path, int n, const char *suffix,
41:     const void *ptr, size_t l)
42: {
43: 	char name[256];
44: 	FILE *f;
45: 
46: 	snprintf(name, sizeof(name), "%s/%06d.%s", path, n, suffix);
47: 	if ((f = fopen(name, "wb+")) == NULL)
48: 		err(1, "fopen %s", name);
49: 	if (fwrite(ptr, l, 1, f) != 1)
50: 		err(1, "write %s", name);
51: 	fclose(f);</data>
  <data key="d2">write_blob</data>
  <data key="d1">fwrite</data>
  <data key="d3">写入数据到文件</data>
  <data key="d4">40</data>
  <data key="d5">51</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|main">
  <data key="d0">75: 		write_blob("sntrup761_ciphertext_corpus", i, "ct",
76: 		    ciphertext, sizeof(ciphertext));</data>
  <data key="d1">write_blob</data>
  <data key="d2">main</data>
  <data key="d3">写入密文到文件</data>
  <data key="d4">75</data>
  <data key="d5">76</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|mkdir">
  <data key="d0">62: 	if (mkdir("sntrup761_pubkey_corpus", 0777) != 0 &amp;&amp; errno != EEXIST)
63: 		err(1, "mkdir sntrup761_pubkey_corpus");
64: 	if (mkdir("sntrup761_ciphertext_corpus", 0777) != 0 &amp;&amp; errno != EEXIST)
65: 		err(1, "mkdir sntrup761_ciphertext_corpus");</data>
  <data key="d2">main</data>
  <data key="d1">mkdir</data>
  <data key="d3">创建公钥和密文目录</data>
  <data key="d4">62</data>
  <data key="d5">65</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|crypto_kem_sntrup761_keypair">
  <data key="d0">70: 		if (crypto_kem_sntrup761_keypair(pk, sk) != 0)
71: 			errx(1, "crypto_kem_sntrup761_keypair failed");</data>
  <data key="d2">main</data>
  <data key="d1">crypto_kem_sntrup761_keypair</data>
  <data key="d3">生成密钥对</data>
  <data key="d4">70</data>
  <data key="d5">71</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<node id="mkcorpus_sntrup761.c|crypto_kem_sntrup761_enc">
  <data key="d0">73: 		if (crypto_kem_sntrup761_enc(ciphertext, secret, pk) != 0)
74: 			errx(1, "crypto_kem_sntrup761_enc failed");</data>
  <data key="d2">main</data>
  <data key="d1">crypto_kem_sntrup761_enc</data>
  <data key="d3">加密过程生成密文</data>
  <data key="d4">73</data>
  <data key="d5">74</data>
  <data key="d6">mkcorpus_sntrup761.c</data>
  <data key="d7">C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\openssh-9.9p1\regress\misc\fuzz-harness\mkcorpus_sntrup761.c</data>
</node>
<edge source="auth-bsdauth.c|bsdauth_init_ctx" target="auth-bsdauth.c|"/>
<edge source="auth-bsdauth.c|bsdauth_query" target="auth-bsdauth.c|debug2"/>
<edge source="auth-bsdauth.c|bsdauth_query" target="auth-bsdauth.c|auth_getitem"/>
<edge source="auth-bsdauth.c|bsdauth_query" target="auth-bsdauth.c|auth_close"/>
<edge source="auth-bsdauth.c|bsdauth_query" target="auth-bsdauth.c|auth_userchallenge"/>
<edge source="auth-bsdauth.c|bsdauth_query" target="auth-bsdauth.c|xstrdup"/>
<edge source="auth-bsdauth.c|bsdauth_query" target="auth-bsdauth.c|xcalloc"/>
<edge source="auth-bsdauth.c|bsdauth_respond" target="auth-bsdauth.c|auth_userresponse"/>
<edge source="auth-bsdauth.c|bsdauth_free_ctx" target="auth-bsdauth.c|auth_close"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshpkt_get_cstring"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshpkt_get_string"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|debug_f"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshkey_type_from_name"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|logit_f"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshkey_from_blob"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|error_fr"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|error_f"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|match_pattern_list"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshkey_check_cert_sigtype"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|logit_fr"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshkey_check_rsa_length"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|logit_r"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshbuf_new"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|fatal_f"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshbuf_put_stringb"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshbuf_put_u8"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshbuf_put_cstring"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|fatal_fr"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|auth2_record_info"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|mm_hostbased_key_allowed"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|mm_sshkey_verify"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|auth2_record_key"/>
<edge source="auth2-hostbased.c|userauth_hostbased" target="auth2-hostbased.c|sshbuf_free"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|auth_key_is_revoked"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|auth_get_canonical_hostname"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|ssh_remote_ipaddr"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|auth_rhosts2"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|strcasecmp"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|sshkey_is_cert"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|sshkey_cert_check_authority_now"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|check_key_in_hostfiles"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|sshkey_fingerprint"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|verbose"/>
<edge source="auth2-hostbased.c|hostbased_key_allowed" target="auth2-hostbased.c|free"/>
<edge source="auth2-kbdint.c|userauth_kbdint" target="auth2-kbdint.c|sshpkt_get_cstring"/>
<edge source="auth2-kbdint.c|userauth_kbdint" target="auth2-kbdint.c|sshpkt_get_end"/>
<edge source="auth2-kbdint.c|userauth_kbdint" target="auth2-kbdint.c|fatal_fr"/>
<edge source="auth2-kbdint.c|userauth_kbdint" target="auth2-kbdint.c|debug"/>
<edge source="auth2-kbdint.c|userauth_kbdint" target="auth2-kbdint.c|auth2_challenge"/>
<edge source="auth2-kbdint.c|method_kbdint" target="auth2-kbdint.c|userauth_kbdint"/>
<edge source="auth2-passwd.c|userauth_passwd" target="auth2-passwd.c|sshpkt_get_u8"/>
<edge source="auth2-passwd.c|userauth_passwd" target="auth2-passwd.c|sshpkt_get_cstring"/>
<edge source="auth2-passwd.c|userauth_passwd" target="auth2-passwd.c|sshpkt_get_end"/>
<edge source="auth2-passwd.c|userauth_passwd" target="auth2-passwd.c|mm_auth_password"/>
<edge source="auth2-passwd.c|userauth_passwd" target="auth2-passwd.c|freezero"/>
<edge source="auth2-passwd.c|method_passwd" target="auth2-passwd.c|userauth_passwd"/>
<edge source="auth2-pubkey.c|format_key" target="auth2-pubkey.c|sshkey_fingerprint"/>
<edge source="auth2-pubkey.c|userauth_pubkey" target="auth2-pubkey.c|sshpkt_get_u8"/>
<edge source="auth2-pubkey.c|userauth_pubkey" target="auth2-pubkey.c|sshpkt_get_cstring"/>
<edge source="auth2-pubkey.c|userauth_pubkey" target="auth2-pubkey.c|sshpkt_get_string"/>
<edge source="auth2-pubkey.c|userauth_pubkey" target="auth2-pubkey.c|sshauthopt_free"/>
<edge source="auth2-pubkey.c|userauth_pubkey" target="auth2-pubkey.c|sshkey_free"/>
<edge source="auth2-pubkey.c|userauth_pubkey" target="auth2-pubkey.c|format_key"/>
<edge source="auth2-pubkey.c|user_key_allowed" target="auth2-pubkey.c|user_key_allowed2"/>
<edge source="auth2-pubkey.c|user_key_allowed" target="auth2-pubkey.c|user_cert_trusted_ca"/>
<edge source="auth2-pubkey.c|user_key_allowed" target="auth2-pubkey.c|user_key_command_allowed2"/>
<edge source="auth2-pubkey.c|user_key_allowed2" target="auth2-pubkey.c|auth_openkeyfile"/>
<edge source="auth2-pubkey.c|user_key_allowed2" target="auth2-pubkey.c|auth_check_authkeys_file"/>
<edge source="auth2-pubkey.c|user_cert_trusted_ca" target="auth2-pubkey.c|sshkey_fingerprint"/>
<edge source="auth2-pubkey.c|user_cert_trusted_ca" target="auth2-pubkey.c|sshkey_in_file"/>
<edge source="auth2-pubkey.c|user_key_command_allowed2" target="auth2-pubkey.c|auth_check_authkeys_file"/>
<edge source="auth2-pubkey.c|user_principals" target="auth2-pubkey.c|auth_openprincipals"/>
<edge source="auth2-pubkey.c|user_principals" target="auth2-pubkey.c|auth_process_principals"/>
<edge source="dispatch.c|dispatch_protocol_error" target="dispatch.c|logit"/>
<edge source="dispatch.c|dispatch_protocol_error" target="dispatch.c|sshpkt_start"/>
<edge source="dispatch.c|dispatch_protocol_error" target="dispatch.c|sshpkt_put_u32"/>
<edge source="dispatch.c|dispatch_protocol_error" target="dispatch.c|sshpkt_send"/>
<edge source="dispatch.c|dispatch_protocol_error" target="dispatch.c|ssh_packet_write_wait"/>
<edge source="dispatch.c|dispatch_protocol_error" target="dispatch.c|sshpkt_fatal"/>
<edge source="dispatch.c|dispatch_protocol_ignore" target="dispatch.c|logit"/>
<edge source="dispatch.c|ssh_dispatch_init" target="dispatch.c|"/>
<edge source="dispatch.c|ssh_dispatch_range" target="dispatch.c|"/>
<edge source="dispatch.c|ssh_dispatch_set" target="dispatch.c|"/>
<edge source="dispatch.c|ssh_dispatch_run" target="dispatch.c|ssh_packet_read_seqnr"/>
<edge source="dispatch.c|ssh_dispatch_run" target="dispatch.c|ssh_packet_read_poll_seqnr"/>
<edge source="dispatch.c|ssh_dispatch_run" target="dispatch.c|debug2"/>
<edge source="dispatch.c|ssh_dispatch_run" target="dispatch.c|ssh-&gt;dispatch[type]"/>
<edge source="dispatch.c|ssh_dispatch_run" target="dispatch.c|sshpkt_disconnect"/>
<edge source="dispatch.c|ssh_dispatch_run_fatal" target="dispatch.c|ssh_dispatch_run"/>
<edge source="dispatch.c|ssh_dispatch_run_fatal" target="dispatch.c|sshpkt_fatal"/>
<edge source="hash.c|crypto_hash_sha512" target="hash.c|EVP_Digest"/>
<edge source="hash.c|crypto_hash_sha512" target="hash.c|SHA512Init"/>
<edge source="hash.c|crypto_hash_sha512" target="hash.c|SHA512Update"/>
<edge source="hash.c|crypto_hash_sha512" target="hash.c|SHA512Final"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_423"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_424" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb4"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb4" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_424"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_425" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb5"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb5" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_425"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_426" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb6"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb6" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_426"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_427" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb7"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb7" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_427"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_428" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb8"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb8" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_428"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_429" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb9"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb9" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_429"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4210" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb10"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb10" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4210"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4211" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb11"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb11" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4211"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4212" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb12"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb12" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4212"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4213" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb13"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb13" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4213"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4214" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb14"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb14" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4214"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4215" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb15"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb15" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4215"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4216" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb16"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb16" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4216"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4217" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb17"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb17" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4217"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4218" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb18"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb18" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4218"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4219" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb19"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb19" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4219"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4220" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_rotate_left_cb20"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_xor_and_rotate_5a_bb20" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak__vxarq_u64_4220"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_2c0" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_5a_b80"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_5a_b80" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_block_df0"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_keccakf1600_21" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_iota_62"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_full_df0" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_5a_b80"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_full_5a_d20" target="libcrux_mlkem768_sha3.h|libcrux_sha3_o_c"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_block_84"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_block_84" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_next_block_fc"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_2d2" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_583"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_292" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_2d2"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_and_last_c52" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_292"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_5a_593" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_583"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_block_843" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_5a_593"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_next_block_fc3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_keccakf1600_21"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_next_block_fc3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_5a_593"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf2" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_keccakf1600_21"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf2" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_292"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_5a_b83" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_2c1"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_block_df3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_load_block_5a_b83"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_2d3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_581"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_293" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_2d3"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_first_and_last_c53" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_293"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_keccakf1600_21"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_squeeze_last_cf3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccak_store_block_full_5a_293"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccakx1_ce3" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_keccak_e93"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha384" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_keccakx1_ce3"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha224_ema" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha224"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha224" target="libcrux_mlkem768_sha3.h|libcrux_sha3_sha224_ema"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha256_ema" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha256"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha256" target="libcrux_mlkem768_sha3.h|libcrux_sha3_sha256_ema"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha384_ema" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha384"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha384" target="libcrux_mlkem768_sha3.h|libcrux_sha3_sha384_ema"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha512_ema" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_sha512"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_sha512" target="libcrux_mlkem768_sha3.h|libcrux_sha3_sha512_ema"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_fill_buffer_9d_b0" target="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_full_9d_f8"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_sha3_generic_keccak_absorb_9d_7b" target="libcrux_mlkem768_sha3.h|libcrux_sha3_portable_incremental_absorb_final"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_variant_cpa_keygen_seed_d8_0e"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_utils_into_padded_array_ea1"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_matrix_sample_matrix_A_38"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_utils_into_padded_array_ea2"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_sample_vector_cbd_then_ntt_fc"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_matrix_compute_As_plus_e_60"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_serialize_public_key_79"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_serialize_secret_key_b5"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|memcpy"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_types_from_05_f2"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_generate_keypair_fc" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_types_from_17_35"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_decapsulate_700" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_decrypt_43"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_decapsulate_700" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_utils_into_padded_array_ea"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_decapsulate_700" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cpa_encrypt_60"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_variant_kdf_33_f0" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_hash_functions_portable_H_f1_1a"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_variant_kdf_33_f0" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_hash_functions_portable_PRF_f1_ee"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_kyber_encapsulate_7a" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_encapsulate_cd0"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_generate_keypair_8c0" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_variant_cpa_keygen_seed_33_b6"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_generate_keypair_8c0" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_generate_keypair_fc0"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_kyber_generate_keypair_9b" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_generate_keypair_8c0"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_mlkem768_portable_kyber_generate_key_pair" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_kyber_generate_keypair_9b"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_validate_private_key_e7" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_hash_functions_portable_H_f1_1a"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_validate_private_key_9c" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_validate_private_key_e7"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_mlkem768_portable_validate_private_key" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_validate_private_key_9c"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_validate_public_key_19" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_serialize_deserialize_ring_elements_reduced_330"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_validate_public_key_4b" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_validate_public_key_19"/>
<edge source="libcrux_mlkem768_sha3.h|libcrux_ml_kem_mlkem768_portable_validate_public_key" target="libcrux_mlkem768_sha3.h|libcrux_ml_kem_ind_cca_instantiations_portable_validate_public_key_4b"/>
<edge source="msg.c|ssh_msg_send" target="msg.c|sshbuf_len"/>
<edge source="msg.c|ssh_msg_send" target="msg.c|put_u32"/>
<edge source="msg.c|ssh_msg_send" target="msg.c|atomicio"/>
<edge source="msg.c|ssh_msg_send" target="msg.c|error_f"/>
<edge source="msg.c|ssh_msg_recv" target="msg.c|atomicio"/>
<edge source="msg.c|ssh_msg_recv" target="msg.c|get_u32"/>
<edge source="msg.c|ssh_msg_recv" target="msg.c|sshbuf_reset"/>
<edge source="msg.c|ssh_msg_recv" target="msg.c|sshbuf_reserve"/>
<edge source="msg.c|ssh_msg_recv" target="msg.c|error_fr"/>
<edge source="msg.c|ssh_msg_recv" target="msg.c|error_f"/>
<edge source="platform-listen.c|platform_pre_listen" target="platform-listen.c|oom_adjust_setup"/>
<edge source="platform-listen.c|platform_post_listen" target="platform-listen.c|ssh_systemd_notify_ready"/>
<edge source="platform-listen.c|platform_pre_fork" target="platform-listen.c|solaris_contract_pre_fork"/>
<edge source="platform-listen.c|platform_pre_restart" target="platform-listen.c|ssh_systemd_notify_reload"/>
<edge source="platform-listen.c|platform_pre_restart" target="platform-listen.c|oom_adjust_restore"/>
<edge source="platform-listen.c|platform_post_fork_parent" target="platform-listen.c|solaris_contract_post_fork_parent"/>
<edge source="platform-listen.c|platform_post_fork_child" target="platform-listen.c|solaris_contract_post_fork_child"/>
<edge source="platform-listen.c|platform_post_fork_child" target="platform-listen.c|oom_adjust_restore"/>
<edge source="platform-pledge.c|platform_pledge_agent" target="platform-pledge.c|solaris_drop_privs_root_pinfo_net"/>
<edge source="platform-pledge.c|platform_pledge_sftp_server" target="platform-pledge.c|solaris_drop_privs_pinfo_net_fork_exec"/>
<edge source="platform-pledge.c|platform_pledge_mux" target="platform-pledge.c|solaris_drop_privs_root_pinfo_net_exec"/>
<edge source="platform-tracing.c|platform_disable_tracing" target="platform-tracing.c|procctl"/>
<edge source="platform-tracing.c|platform_disable_tracing" target="platform-tracing.c|prctl"/>
<edge source="platform-tracing.c|platform_disable_tracing" target="platform-tracing.c|setpflags"/>
<edge source="platform-tracing.c|platform_disable_tracing" target="platform-tracing.c|ptrace"/>
<edge source="platform-tracing.c|platform_disable_tracing" target="platform-tracing.c|"/>
<edge source="sftp-common.c|attrib_clear" target="sftp-common.c|"/>
<edge source="sftp-common.c|stat_to_attrib" target="sftp-common.c|attrib_clear"/>
<edge source="sftp-common.c|stat_to_attrib" target="sftp-common.c|"/>
<edge source="sftp-common.c|attrib_to_stat" target="sftp-common.c|"/>
<edge source="sftp-common.c|decode_attrib" target="sftp-common.c|attrib_clear"/>
<edge source="sftp-common.c|decode_attrib" target="sftp-common.c|sshbuf_get_u32"/>
<edge source="sftp-common.c|decode_attrib" target="sftp-common.c|sshbuf_get_u64"/>
<edge source="sftp-common.c|decode_attrib" target="sftp-common.c|sshbuf_get_cstring"/>
<edge source="sftp-common.c|encode_attrib" target="sftp-common.c|sshbuf_put_u32"/>
<edge source="sftp-common.c|encode_attrib" target="sftp-common.c|sshbuf_put_u64"/>
<edge source="sftp-common.c|fx2txt" target="sftp-common.c|"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|localtime"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|strmode"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|user_from_uid"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|group_from_gid"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|time"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|strftime"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|MAXIMUM"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|fmt_scaled"/>
<edge source="sftp-common.c|ls_file" target="sftp-common.c|xstrdup"/>
<edge source="sftp-server-main.c|cleanup_exit" target="sftp-server-main.c|sftp_server_cleanup_exit"/>
<edge source="sftp-server-main.c|main" target="sftp-server-main.c|sanitise_stdfd"/>
<edge source="sftp-server-main.c|main" target="sftp-server-main.c|getpwuid"/>
<edge source="sftp-server-main.c|main" target="sftp-server-main.c|getuid"/>
<edge source="sftp-server-main.c|main" target="sftp-server-main.c|fprintf"/>
<edge source="sftp-server-main.c|main" target="sftp-server-main.c|sftp_server_main"/>
<edge source="sftp-server.c|get_handle" target="sftp-server.c|sshbuf_get_u64"/>
<edge source="sftp-server.c|get_handle" target="sftp-server.c|fatal"/>
<edge source="sftp-server.c|debug" target="sftp-server.c|handle_to_name"/>
<edge source="sftp-server.c|debug" target="sftp-server.c|strcmp"/>
<edge source="sftp-server.c|lseek" target="sftp-server.c|handle_to_fd"/>
<edge source="sftp-server.c|lseek" target="sftp-server.c|errno_to_portable"/>
<edge source="sftp-server.c|atomicio" target="sftp-server.c|read"/>
<edge source="sftp-server.c|atomicio" target="sftp-server.c|vwrite"/>
<edge source="sftp-server.c|handle_update_read" target="sftp-server.c|handle_update_read"/>
<edge source="sftp-server.c|handle_update_write" target="sftp-server.c|handle_update_write"/>
<edge source="sftp-server.c|sshbuf_get_cstring" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|getpwnam" target="sftp-server.c|send_status"/>
<edge source="sftp-server.c|sshbuf_new" target="sftp-server.c|fatal_f"/>
<edge source="sftp-server.c|sshbuf_froms" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|sshbuf_get_u32" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|getpwuid" target="sftp-server.c|debug3_f"/>
<edge source="sftp-server.c|sshbuf_put_cstring" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|sshbuf_put_u8" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|send_msg" target="sftp-server.c|sshbuf_free"/>
<edge source="sftp-server.c|extended_handler_byname" target="sftp-server.c|error"/>
<edge source="sftp-server.c|exthand-&gt;handler" target="sftp-server.c|free"/>
<edge source="sftp-server.c|sshbuf_len" target="sftp-server.c|logit"/>
<edge source="sftp-server.c|sshbuf_get_u8" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|sshbuf_check_reserve" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|sshbuf_put" target="sftp-server.c|fatal_fr"/>
<edge source="sftp-server.c|process" target="sftp-server.c|sshbuf_check_reserve"/>
<edge source="sftp-usergroup.c|lookup_and_record" target="sftp-usergroup.c|sftp_get_users_groups_by_id"/>
<edge source="sftp-usergroup.c|lookup_and_record" target="sftp-usergroup.c|debug_fr"/>
<edge source="sftp-usergroup.c|lookup_and_record" target="sftp-usergroup.c|idname_enter"/>
<edge source="sftp-usergroup.c|lookup_and_record" target="sftp-usergroup.c|freenames"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_glob" target="sftp-usergroup.c|sftp_can_get_users_groups_by_id"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_glob" target="sftp-usergroup.c|collect_ids_from_glob"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_glob" target="sftp-usergroup.c|lookup_and_record"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_glob" target="sftp-usergroup.c|free"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_dirents" target="sftp-usergroup.c|sftp_can_get_users_groups_by_id"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_dirents" target="sftp-usergroup.c|collect_ids_from_dirents"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_dirents" target="sftp-usergroup.c|lookup_and_record"/>
<edge source="sftp-usergroup.c|get_remote_user_groups_from_dirents" target="sftp-usergroup.c|free"/>
<edge source="sftp-usergroup.c|ruser_name" target="sftp-usergroup.c|idname_lookup"/>
<edge source="sftp-usergroup.c|rgroup_name" target="sftp-usergroup.c|idname_lookup"/>
<edge source="ssh-sk-helper.c|reply_error" target="ssh-sk-helper.c|debug"/>
<edge source="ssh-sk-helper.c|reply_error" target="ssh-sk-helper.c|sshbuf_new"/>
<edge source="ssh-sk-helper.c|reply_error" target="ssh-sk-helper.c|fatal_f"/>
<edge source="ssh-sk-helper.c|reply_error" target="ssh-sk-helper.c|free"/>
<edge source="ssh-sk-helper.c|null_empty" target="ssh-sk-helper.c|free"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshbuf_froms"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshbuf_get_cstring"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshbuf_get_string_direct"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshbuf_get_u32"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshkey_private_deserialize"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshkey_is_sk"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshbuf_new"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshbuf_put_u32"/>
<edge source="ssh-sk-helper.c|process_sign" target="ssh-sk-helper.c|sshbuf_put_string"/>
<edge source="ssh-sk-helper.c|process_enroll" target="ssh-sk-helper.c|sshbuf_new"/>
<edge source="ssh-sk-helper.c|process_enroll" target="ssh-sk-helper.c|sshbuf_get_u32"/>
<edge source="ssh-sk-helper.c|process_enroll" target="ssh-sk-helper.c|sshbuf_get_cstring"/>
<edge source="ssh-sk-helper.c|process_enroll" target="ssh-sk-helper.c|sshbuf_get_u8"/>
<edge source="ssh-sk-helper.c|process_enroll" target="ssh-sk-helper.c|sshkey_private_serialize"/>
<edge source="ssh-sk-helper.c|process_load_resident" target="ssh-sk-helper.c|sshbuf_new"/>
<edge source="ssh-sk-helper.c|process_load_resident" target="ssh-sk-helper.c|sshbuf_get_cstring"/>
<edge source="ssh-sk-helper.c|process_load_resident" target="ssh-sk-helper.c|sshsk_load_resident"/>
<edge source="ssh-sk-helper.c|process_load_resident" target="ssh-sk-helper.c|sshbuf_put_u32"/>
<edge source="ssh-sk-helper.c|main" target="ssh-sk-helper.c|sanitise_stdfd"/>
<edge source="ssh-sk-helper.c|main" target="ssh-sk-helper.c|log_init"/>
<edge source="ssh-sk-helper.c|main" target="ssh-sk-helper.c|sshbuf_new"/>
<edge source="ssh-sk-helper.c|main" target="ssh-sk-helper.c|ssh_msg_recv"/>
<edge source="ssh-sk-helper.c|main" target="ssh-sk-helper.c|sshbuf_get_u8"/>
<edge source="ssh-sk-helper.c|main" target="ssh-sk-helper.c|ssh_msg_send"/>
<edge source="sshbuf-io.c|sshbuf_load_fd" target="sshbuf-io.c|fstat"/>
<edge source="sshbuf-io.c|sshbuf_load_fd" target="sshbuf-io.c|sshbuf_new"/>
<edge source="sshbuf-io.c|sshbuf_load_fd" target="sshbuf-io.c|atomicio"/>
<edge source="sshbuf-io.c|sshbuf_load_fd" target="sshbuf-io.c|sshbuf_put"/>
<edge source="sshbuf-io.c|sshbuf_load_fd" target="sshbuf-io.c|sshbuf_len"/>
<edge source="sshbuf-io.c|sshbuf_load_fd" target="sshbuf-io.c|sshbuf_free"/>
<edge source="sshbuf-io.c|sshbuf_load_file" target="sshbuf-io.c|open"/>
<edge source="sshbuf-io.c|sshbuf_load_file" target="sshbuf-io.c|sshbuf_load_fd"/>
<edge source="sshbuf-io.c|sshbuf_write_file" target="sshbuf-io.c|open"/>
<edge source="sshbuf-io.c|sshbuf_write_file" target="sshbuf-io.c|atomicio"/>
<edge source="sshbuf-io.c|sshbuf_write_file" target="sshbuf-io.c|sshbuf_mutable_ptr"/>
<edge source="sshbuf-io.c|sshbuf_write_file" target="sshbuf-io.c|sshbuf_len"/>
<edge source="sshbuf-io.c|sshbuf_write_file" target="sshbuf-io.c|unlink"/>
<edge source="xmalloc.c|xmalloc" target="xmalloc.c|fatal"/>
<edge source="xmalloc.c|xcalloc" target="xmalloc.c|fatal"/>
<edge source="xmalloc.c|xreallocarray" target="xmalloc.c|fatal"/>
<edge source="xmalloc.c|xrecallocarray" target="xmalloc.c|fatal"/>
<edge source="xmalloc.c|xstrdup" target="xmalloc.c|xmalloc"/>
<edge source="xmalloc.c|xvasprintf" target="xmalloc.c|fatal"/>
<edge source="xmalloc.c|xasprintf" target="xmalloc.c|xvasprintf"/>
<edge source="xmss_hash.c|addr_to_byte" target="xmss_hash.c|to_byte"/>
<edge source="xmss_hash.c|core_hash_SHA2" target="xmss_hash.c|to_byte"/>
<edge source="xmss_hash.c|core_hash_SHA2" target="xmss_hash.c|SHA256"/>
<edge source="xmss_hash.c|core_hash_SHA2" target="xmss_hash.c|SHA512"/>
<edge source="xmss_hash.c|prf" target="xmss_hash.c|core_hash_SHA2"/>
<edge source="xmss_hash.c|h_msg" target="xmss_hash.c|core_hash_SHA2"/>
<edge source="xmss_hash.c|hash_h" target="xmss_hash.c|addr_to_byte"/>
<edge source="xmss_hash.c|hash_h" target="xmss_hash.c|prf"/>
<edge source="xmss_hash.c|hash_h" target="xmss_hash.c|core_hash_SHA2"/>
<edge source="xmss_hash.c|hash_f" target="xmss_hash.c|addr_to_byte"/>
<edge source="xmss_hash.c|hash_f" target="xmss_hash.c|prf"/>
<edge source="xmss_hash.c|hash_f" target="xmss_hash.c|core_hash_SHA2"/>
<edge source="xmss_wots.c|wots_log2" target="xmss_wots.c|返回调用方单元名称"/>
<edge source="xmss_wots.c|wots_set_params" target="xmss_wots.c|wots_log2"/>
<edge source="xmss_wots.c|expand_seed" target="xmss_wots.c|to_byte"/>
<edge source="xmss_wots.c|expand_seed" target="xmss_wots.c|prf"/>
<edge source="xmss_wots.c|gen_chain" target="xmss_wots.c|setHashADRS"/>
<edge source="xmss_wots.c|gen_chain" target="xmss_wots.c|hash_f"/>
<edge source="xmss_wots.c|base_w" target="xmss_wots.c|返回调用方单元名称"/>
<edge source="xmss_wots.c|wots_pkgen" target="xmss_wots.c|expand_seed"/>
<edge source="xmss_wots.c|wots_pkgen" target="xmss_wots.c|setChainADRS"/>
<edge source="xmss_wots.c|wots_pkgen" target="xmss_wots.c|gen_chain"/>
<edge source="xmss_wots.c|wots_sign" target="xmss_wots.c|calloc"/>
<edge source="xmss_wots.c|wots_sign" target="xmss_wots.c|base_w"/>
<edge source="xmss_wots.c|wots_sign" target="xmss_wots.c|to_byte"/>
<edge source="xmss_wots.c|wots_sign" target="xmss_wots.c|expand_seed"/>
<edge source="xmss_wots.c|wots_sign" target="xmss_wots.c|setChainADRS"/>
<edge source="xmss_wots.c|wots_sign" target="xmss_wots.c|gen_chain"/>
<edge source="xmss_wots.c|wots_pkFromSig" target="xmss_wots.c|calloc"/>
<edge source="xmss_wots.c|wots_pkFromSig" target="xmss_wots.c|base_w"/>
<edge source="xmss_wots.c|wots_pkFromSig" target="xmss_wots.c|to_byte"/>
<edge source="xmss_wots.c|wots_pkFromSig" target="xmss_wots.c|setChainADRS"/>
<edge source="xmss_wots.c|wots_pkFromSig" target="xmss_wots.c|gen_chain"/>
<edge source="gnome-ssh-askpass1.c|report_failed_grab" target="gnome-ssh-askpass1.c|gnome_message_box_new"/>
<edge source="gnome-ssh-askpass1.c|report_failed_grab" target="gnome-ssh-askpass1.c|gtk_window_set_position"/>
<edge source="gnome-ssh-askpass1.c|report_failed_grab" target="gnome-ssh-askpass1.c|gtk_object_set"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gnome_dialog_new"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|g_strsplit"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_label_new"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_box_pack_start"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_entry_new"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_entry_set_visibility"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_widget_grab_focus"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_object_set"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gnome_dialog_set_default"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_window_set_position"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_window_set_policy"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_container_set_border_width"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_widget_show_all"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|XGrabServer"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gdk_pointer_grab"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gdk_keyboard_grab"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gnome_dialog_editable_enters"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gnome_dialog_run"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|XUngrabServer"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gdk_pointer_ungrab"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gdk_keyboard_ungrab"/>
<edge source="gnome-ssh-askpass1.c|passphrase_dialog" target="gnome-ssh-askpass1.c|gtk_entry_get_text"/>
<edge source="gnome-ssh-askpass1.c|main" target="gnome-ssh-askpass1.c|gnome_init"/>
<edge source="gnome-ssh-askpass1.c|main" target="gnome-ssh-askpass1.c|passphrase_dialog"/>
<edge source="gnome-ssh-askpass2.c|report_failed_grab" target="gnome-ssh-askpass2.c|gtk_message_dialog_new"/>
<edge source="gnome-ssh-askpass2.c|report_failed_grab" target="gnome-ssh-askpass2.c|gtk_dialog_run"/>
<edge source="gnome-ssh-askpass2.c|ok_dialog" target="gnome-ssh-askpass2.c|gtk_dialog_response"/>
<edge source="gnome-ssh-askpass2.c|check_none" target="gnome-ssh-askpass2.c|gtk_dialog_response"/>
<edge source="gnome-ssh-askpass2.c|check_none" target="gnome-ssh-askpass2.c|gtk_widget_grab_focus"/>
<edge source="gnome-ssh-askpass2.c|parse_env_hex_color" target="gnome-ssh-askpass2.c|getenv"/>
<edge source="gnome-ssh-askpass2.c|parse_env_hex_color" target="gnome-ssh-askpass2.c|strtoul"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gtk_window_new"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gtk_message_dialog_new"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gtk_widget_modify_fg"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gtk_widget_modify_bg"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gtk_entry_new"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|g_signal_connect"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gdk_pointer_grab"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gdk_keyboard_grab"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gtk_dialog_run"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|g_strdup"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|g_locale_from_utf8"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|g_free"/>
<edge source="gnome-ssh-askpass2.c|passphrase_dialog" target="gnome-ssh-askpass2.c|gtk_widget_destroy"/>
<edge source="gnome-ssh-askpass2.c|main" target="gnome-ssh-askpass2.c|gtk_init"/>
<edge source="gnome-ssh-askpass2.c|main" target="gnome-ssh-askpass2.c|g_strjoinv"/>
<edge source="gnome-ssh-askpass2.c|main" target="gnome-ssh-askpass2.c|g_free"/>
<edge source="gnome-ssh-askpass2.c|main" target="gnome-ssh-askpass2.c|passphrase_dialog"/>
<edge source="bsd-asprintf.c|vasprintf" target="bsd-asprintf.c|malloc"/>
<edge source="bsd-asprintf.c|vasprintf" target="bsd-asprintf.c|vsnprintf"/>
<edge source="bsd-asprintf.c|vasprintf" target="bsd-asprintf.c|realloc"/>
<edge source="bsd-asprintf.c|asprintf" target="bsd-asprintf.c|va_start"/>
<edge source="bsd-asprintf.c|asprintf" target="bsd-asprintf.c|vasprintf"/>
<edge source="bsd-asprintf.c|asprintf" target="bsd-asprintf.c|va_end"/>
<edge source="sha1.c|SHA1Transform" target="sha1.c|memcpy"/>
<edge source="sha1.c|SHA1Transform" target="sha1.c|SHA1Transform"/>
<edge source="sha1.c|SHA1Init" target="sha1.c|"/>
<edge source="sha1.c|SHA1Update" target="sha1.c|memcpy"/>
<edge source="sha1.c|SHA1Update" target="sha1.c|SHA1Transform"/>
<edge source="sha1.c|SHA1Pad" target="sha1.c|SHA1Update"/>
<edge source="sha1.c|SHA1Final" target="sha1.c|SHA1Pad"/>
<edge source="sha1.c|SHA1Final" target="sha1.c|explicit_bzero"/>
<edge source="check-perm.c|fatal" target="check-perm.c|vfprintf"/>
<edge source="check-perm.c|fatal" target="check-perm.c|exit"/>
<edge source="check-perm.c|safely_chroot" target="check-perm.c|fatal"/>
<edge source="check-perm.c|safely_chroot" target="check-perm.c|chdir"/>
<edge source="check-perm.c|platform_sys_dir_uid" target="check-perm.c|return"/>
<edge source="check-perm.c|auth_secure_path" target="check-perm.c|realpath"/>
<edge source="check-perm.c|auth_secure_path" target="check-perm.c|snprintf"/>
<edge source="check-perm.c|auth_secure_path" target="check-perm.c|platform_sys_dir_uid"/>
<edge source="check-perm.c|auth_secure_path" target="check-perm.c|dirname"/>
<edge source="check-perm.c|auth_secure_path" target="check-perm.c|stat"/>
<edge source="check-perm.c|auth_secure_path" target="check-perm.c|strcmp"/>
<edge source="check-perm.c|usage" target="check-perm.c|fprintf"/>
<edge source="check-perm.c|usage" target="check-perm.c|exit"/>
<edge source="check-perm.c|main" target="check-perm.c|getuid"/>
<edge source="check-perm.c|main" target="check-perm.c|stat"/>
<edge source="check-perm.c|main" target="check-perm.c|auth_secure_path"/>
<edge source="check-perm.c|main" target="check-perm.c|fprintf"/>
<edge source="netcat.c|main" target="netcat.c|signal"/>
<edge source="netcat.c|main" target="netcat.c|getopt"/>
<edge source="netcat.c|main" target="netcat.c|usage"/>
<edge source="netcat.c|main" target="netcat.c|local_listen"/>
<edge source="netcat.c|local_listen" target="netcat.c|getaddrinfo"/>
<edge source="netcat.c|local_listen" target="netcat.c|socket"/>
<edge source="netcat.c|local_listen" target="netcat.c|setsockopt"/>
<edge source="netcat.c|local_listen" target="netcat.c|bind"/>
<edge source="netcat.c|local_listen" target="netcat.c|listen"/>
<edge source="netcat.c|unix_bind" target="netcat.c|socket"/>
<edge source="netcat.c|unix_bind" target="netcat.c|bind"/>
<edge source="netcat.c|unix_connect" target="netcat.c|socket"/>
<edge source="netcat.c|unix_connect" target="netcat.c|connect"/>
<edge source="netcat.c|remote_connect" target="netcat.c|getaddrinfo"/>
<edge source="netcat.c|remote_connect" target="netcat.c|socket"/>
<edge source="netcat.c|remote_connect" target="netcat.c|setsockopt"/>
<edge source="netcat.c|socks_connect" target="netcat.c|remote_connect"/>
<edge source="netcat.c|socks_connect" target="netcat.c|decode_addrport"/>
<edge source="netcat.c|socks_connect" target="netcat.c|atomicio"/>
<edge source="netcat.c|socks_connect" target="netcat.c|read"/>
<edge source="agent_fuzz_helper.c|devnull_or_die" target="agent_fuzz_helper.c|open"/>
<edge source="agent_fuzz_helper.c|devnull_or_die" target="agent_fuzz_helper.c|error_f"/>
<edge source="agent_fuzz_helper.c|pubkey_or_die" target="agent_fuzz_helper.c|sshkey_new"/>
<edge source="agent_fuzz_helper.c|pubkey_or_die" target="agent_fuzz_helper.c|sshkey_read"/>
<edge source="agent_fuzz_helper.c|pubkey_or_die" target="agent_fuzz_helper.c|error_fr"/>
<edge source="agent_fuzz_helper.c|privkey_or_die" target="agent_fuzz_helper.c|sshbuf_from"/>
<edge source="agent_fuzz_helper.c|privkey_or_die" target="agent_fuzz_helper.c|error_f"/>
<edge source="agent_fuzz_helper.c|privkey_or_die" target="agent_fuzz_helper.c|sshkey_parse_private_fileblob"/>
<edge source="agent_fuzz_helper.c|privkey_or_die" target="agent_fuzz_helper.c|error_fr"/>
<edge source="agent_fuzz_helper.c|add_key" target="agent_fuzz_helper.c|privkey_or_die"/>
<edge source="agent_fuzz_helper.c|add_key" target="agent_fuzz_helper.c|pubkey_or_die"/>
<edge source="agent_fuzz_helper.c|add_key" target="agent_fuzz_helper.c|sshkey_to_certified"/>
<edge source="agent_fuzz_helper.c|add_key" target="agent_fuzz_helper.c|sshkey_cert_copy"/>
<edge source="agent_fuzz_helper.c|cleanup_idtab" target="agent_fuzz_helper.c|TAILQ_FIRST"/>
<edge source="agent_fuzz_helper.c|cleanup_idtab" target="agent_fuzz_helper.c|TAILQ_REMOVE"/>
<edge source="agent_fuzz_helper.c|reset_idtab" target="agent_fuzz_helper.c|cleanup_idtab"/>
<edge source="agent_fuzz_helper.c|reset_idtab" target="agent_fuzz_helper.c|idtab_init"/>
<edge source="agent_fuzz_helper.c|reset_sockettab" target="agent_fuzz_helper.c|cleanup_sockettab"/>
<edge source="agent_fuzz_helper.c|reset_sockettab" target="agent_fuzz_helper.c|dup"/>
<edge source="agent_fuzz_helper.c|reset_sockettab" target="agent_fuzz_helper.c|new_socket"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|log_init"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|devnull_or_die"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|reset_idtab"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|reset_sockettab"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|sshbuf_put"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|process_message"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|cleanup_idtab"/>
<edge source="agent_fuzz_helper.c|test_one" target="agent_fuzz_helper.c|cleanup_sockettab"/>
<edge source="agent_fuzz_helper.c|pkcs11_make_cert" target="agent_fuzz_helper.c|"/>
<edge source="mkcorpus_sntrup761.c|randombytes" target="mkcorpus_sntrup761.c|arc4random_buf"/>
<edge source="mkcorpus_sntrup761.c|write_blob" target="mkcorpus_sntrup761.c|fopen"/>
<edge source="mkcorpus_sntrup761.c|write_blob" target="mkcorpus_sntrup761.c|fwrite"/>
<edge source="mkcorpus_sntrup761.c|main" target="mkcorpus_sntrup761.c|mkdir"/>
<edge source="mkcorpus_sntrup761.c|main" target="mkcorpus_sntrup761.c|crypto_kem_sntrup761_keypair"/>
<edge source="mkcorpus_sntrup761.c|main" target="mkcorpus_sntrup761.c|write_blob"/>
<edge source="mkcorpus_sntrup761.c|main" target="mkcorpus_sntrup761.c|crypto_kem_sntrup761_enc"/>
</graph></graphml>