2025-02-01T08:13:08.006971+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:16:11.436542+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:16:11.439511+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:16:11.439511+0800 | INFO | 当前模式:
2025-02-01T08:16:29.369186+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:16:29.372176+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:16:37.752592+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:16:37.755592+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:16:37.755592+0800 | INFO | 当前模式:True
2025-02-01T08:20:50.306902+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:20:50.308896+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:20:50.309893+0800 | INFO | 当前命令行模式:True
2025-02-01T08:21:04.268086+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:21:04.272142+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:21:04.273136+0800 | INFO | 当前命令行模式:True
2025-02-01T08:21:11.170681+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:21:11.175382+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:21:11.175382+0800 | INFO | 当前命令行模式:True
2025-02-01T08:21:30.957767+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:21:30.962097+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:21:30.962097+0800 | INFO | 当前命令行模式:True
2025-02-01T08:21:49.363637+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:21:49.366628+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:21:49.366628+0800 | INFO | 当前命令行模式:True
2025-02-01T08:23:11.119065+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:23:11.123219+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:23:11.123219+0800 | INFO | 当前命令行模式:True
2025-02-01T08:25:37.641836+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:25:37.646940+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:25:37.646940+0800 | INFO | 当前命令行模式:True
2025-02-01T08:26:13.026923+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:26:13.031850+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:26:13.031850+0800 | INFO | 当前命令行模式:True
2025-02-01T08:26:13.031850+0800 | INFO | 当前项目目录:./演示项目目录/RuoYi-Vue-master
2025-02-01T08:26:37.361220+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:26:37.365244+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:26:37.365244+0800 | INFO | 当前命令行模式:True
2025-02-01T08:26:37.365244+0800 | INFO | 当前项目目录:./演示项目目录/RuoYi-Vue-master
2025-02-01T08:26:37.366229+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:40:10.748544+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:40:10.751728+0800 | INFO | openai=OpenAIConfig(api_key='sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', base_url='https://api.openai-proxy.org/v1', max_per_tokens=4096, model='gpt-4o-mini') project=ProjectConfig(config_file_ext=['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], exclude_dir=['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], exclude_max_file_size=1.0, source_file_ext=['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs'])
2025-02-01T08:40:10.751728+0800 | INFO | 当前命令行模式:True
2025-02-01T08:40:10.752725+0800 | INFO | 当前项目目录:./演示项目目录/RuoYi-Vue-master
2025-02-01T08:40:10.752725+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:40:51.496687+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:41:08.048958+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:41:08.053941+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:41:08.053941+0800 | INFO | 当前命令行模式:True
2025-02-01T08:41:08.053941+0800 | INFO | 当前项目目录:./演示项目目录/RuoYi-Vue-master
2025-02-01T08:41:08.053941+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:50:47.180967+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:50:47.186199+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:50:47.186199+0800 | INFO | 当前命令行模式:True
2025-02-01T08:50:47.186199+0800 | INFO | 当前项目目录:./演示项目目录/RuoYi-Vue-master
2025-02-01T08:50:47.186199+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:50:52.391739+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:50:52.394721+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:50:52.395715+0800 | INFO | 当前命令行模式:True
2025-02-01T08:50:52.395715+0800 | INFO | 当前项目目录:./演示项目目录/RuoYi-Vue-master
2025-02-01T08:50:52.395715+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:51:11.761983+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:51:11.766887+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:51:11.766887+0800 | INFO | 当前命令行模式:True
2025-02-01T08:51:11.766887+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T08:51:11.766887+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:51:55.137447+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:51:55.140450+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:51:55.140450+0800 | INFO | 当前命令行模式:True
2025-02-01T08:51:55.140450+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T08:51:55.140450+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:52:15.439917+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:52:15.443905+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:52:15.443905+0800 | INFO | 当前命令行模式:True
2025-02-01T08:52:15.444903+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T08:52:15.444903+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T08:56:33.229043+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:57:13.714554+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:57:25.400272+0800 | INFO | 加载配置文件config.yaml
2025-02-01T08:57:25.405176+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T08:57:25.405176+0800 | INFO | 当前命令行模式:True
2025-02-01T08:57:25.405176+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T08:57:25.405176+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:00:08.403272+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:00:08.406260+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:00:08.406260+0800 | INFO | 当前命令行模式:True
2025-02-01T09:00:08.406260+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:00:08.407268+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:00:55.218661+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:00:55.220611+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:00:55.220611+0800 | INFO | 当前命令行模式:True
2025-02-01T09:00:55.220611+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:00:55.221583+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:01:08.538585+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:01:08.538585+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:01:08.539582+0800 | INFO | 当前命令行模式:True
2025-02-01T09:01:08.539582+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:01:08.539582+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:01:23.009320+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:01:23.011312+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:01:23.011312+0800 | INFO | 当前命令行模式:True
2025-02-01T09:01:23.012310+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:01:23.012310+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:01:32.040738+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:01:32.042730+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:01:32.043727+0800 | INFO | 当前命令行模式:True
2025-02-01T09:01:32.043727+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:01:32.043727+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:01:49.227042+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:01:49.229035+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:01:49.229035+0800 | INFO | 当前命令行模式:True
2025-02-01T09:01:49.229035+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:01:49.229035+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:02:57.545430+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:02:57.547609+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:02:57.547609+0800 | INFO | 当前命令行模式:True
2025-02-01T09:02:57.548841+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:02:57.551302+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:04:18.923864+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:04:18.926856+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:04:18.926856+0800 | INFO | 当前命令行模式:True
2025-02-01T09:04:18.926856+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:04:18.926856+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:04:31.104469+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:04:31.106517+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:04:31.106517+0800 | INFO | 当前命令行模式:True
2025-02-01T09:04:31.106517+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:04:31.106517+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:06:50.066729+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:06:50.067727+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:06:50.067727+0800 | INFO | 当前命令行模式:True
2025-02-01T09:06:50.067727+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:06:50.068725+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:07:23.544103+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:07:23.545110+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:07:23.545110+0800 | INFO | 当前命令行模式:True
2025-02-01T09:07:23.546097+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:07:23.546097+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:07:42.530574+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:07:42.531561+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:07:42.531561+0800 | INFO | 当前命令行模式:True
2025-02-01T09:07:42.531561+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:07:42.531561+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:08:04.497551+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:08:04.499544+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:08:04.499544+0800 | INFO | 当前命令行模式:True
2025-02-01T09:08:04.499544+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:08:04.499544+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:08:04.537428+0800 | INFO | 解析目录结构

2025-02-01T09:08:04.538423+0800 | INFO | RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T09:08:35.166610+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:08:35.167671+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:08:35.167671+0800 | INFO | 当前命令行模式:True
2025-02-01T09:08:35.167671+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:08:35.168629+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:08:35.208467+0800 | INFO | 解析目录结构如下:
2025-02-01T09:08:35.208467+0800 | INFO | 
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T09:08:50.847975+0800 | INFO | 加载配置文件config.yaml
2025-02-01T09:08:50.849885+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T09:08:50.849885+0800 | INFO | 当前命令行模式:True
2025-02-01T09:08:50.849885+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T09:08:50.849885+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T09:08:50.886762+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:27:48.492135+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:27:48.494129+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:27:48.495134+0800 | INFO | 当前命令行模式:True
2025-02-01T10:27:48.495134+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:27:48.495134+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:27:48.621701+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:29:35.746135+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:29:35.749053+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:29:35.749053+0800 | INFO | 当前命令行模式:True
2025-02-01T10:29:35.750050+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:29:35.750050+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:29:35.794302+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:35:41.045058+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:35:41.047562+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:35:41.047562+0800 | INFO | 当前命令行模式:True
2025-02-01T10:35:41.048559+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:35:41.048559+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:35:41.086051+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:45:00.338148+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:45:00.341125+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:45:00.341125+0800 | INFO | 当前命令行模式:True
2025-02-01T10:45:00.342130+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:45:00.342130+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:45:00.380920+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:45:39.696058+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:45:39.699161+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:45:39.699161+0800 | INFO | 当前命令行模式:True
2025-02-01T10:45:39.699161+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:45:39.699161+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:45:39.738108+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:47:27.268948+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:47:27.269926+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:47:27.269926+0800 | INFO | 当前命令行模式:True
2025-02-01T10:47:27.269926+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:47:27.269926+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:47:27.309804+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:48:08.081489+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:48:08.083841+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:48:08.083841+0800 | INFO | 当前命令行模式:True
2025-02-01T10:48:08.085120+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:48:08.085120+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:48:08.127233+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:58:31.803887+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:58:31.805167+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:58:31.805167+0800 | INFO | 当前命令行模式:True
2025-02-01T10:58:31.805167+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:58:31.805167+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:58:31.845859+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T10:58:42.654396+0800 | INFO | 加载配置文件config.yaml
2025-02-01T10:58:42.656414+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T10:58:42.657376+0800 | INFO | 当前命令行模式:True
2025-02-01T10:58:42.657376+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T10:58:42.657376+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T10:58:42.699198+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:01:15.382299+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:01:15.384324+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:01:15.384324+0800 | INFO | 当前命令行模式:True
2025-02-01T11:01:15.384324+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:01:15.384324+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:01:15.440634+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:32:43.282768+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:32:43.285892+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:32:43.286409+0800 | INFO | 当前命令行模式:True
2025-02-01T11:32:43.286409+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:32:43.286409+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:32:43.337389+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:35:29.463724+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:35:29.465720+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:35:29.465720+0800 | INFO | 当前命令行模式:True
2025-02-01T11:35:29.465720+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:35:29.465720+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:35:29.510272+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:40:18.804566+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:40:18.805636+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:40:18.805636+0800 | INFO | 当前命令行模式:True
2025-02-01T11:40:18.806632+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:40:18.806632+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:40:18.850915+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:40:44.750270+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:40:44.751380+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:40:44.751380+0800 | INFO | 当前命令行模式:True
2025-02-01T11:40:44.751380+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:40:44.751380+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:40:44.795184+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:44:53.358622+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:44:53.361739+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:44:53.361739+0800 | INFO | 当前命令行模式:True
2025-02-01T11:44:53.361739+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:44:53.361739+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:44:53.404743+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:55:25.114581+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:55:25.117083+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:55:25.118083+0800 | INFO | 当前命令行模式:True
2025-02-01T11:55:25.118083+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:55:25.118083+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:55:25.166999+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T11:56:53.186180+0800 | INFO | 加载配置文件config.yaml
2025-02-01T11:56:53.189421+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T11:56:53.189421+0800 | INFO | 当前命令行模式:True
2025-02-01T11:56:53.189421+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T11:56:53.189421+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T11:56:53.232960+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:13:05.808765+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:13:05.809762+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:13:05.809762+0800 | INFO | 当前命令行模式:True
2025-02-01T12:13:05.810758+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:13:05.810758+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:13:05.857771+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:15:21.790132+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:15:21.792738+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:15:21.792738+0800 | INFO | 当前命令行模式:True
2025-02-01T12:15:21.793742+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:15:21.793742+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:15:21.844594+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:15:40.033513+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:15:40.036648+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:15:40.036648+0800 | INFO | 当前命令行模式:True
2025-02-01T12:15:40.037989+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:15:40.037989+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:15:40.167626+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:17:01.766022+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:17:01.768185+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:17:01.768185+0800 | INFO | 当前命令行模式:True
2025-02-01T12:17:01.768185+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:17:01.768185+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:17:01.814787+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:18:33.805422+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:18:33.808437+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:18:33.808437+0800 | INFO | 当前命令行模式:True
2025-02-01T12:18:33.809501+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:18:33.809501+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:18:33.852465+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:43:03.253001+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:43:03.254055+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:43:03.255083+0800 | INFO | 当前命令行模式:True
2025-02-01T12:43:03.255083+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:43:03.255083+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:43:03.321139+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:55:58.806857+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:55:58.809631+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:55:58.809631+0800 | INFO | 当前命令行模式:True
2025-02-01T12:55:58.809631+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:55:58.809631+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:55:58.859747+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:55:58.863724+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T12:55:58.864797+0800 | INFO | 当前batch_size:10
2025-02-01T12:57:20.226409+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:57:20.228894+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:57:20.230039+0800 | INFO | 当前命令行模式:True
2025-02-01T12:57:20.230039+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:57:20.230039+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:57:20.274031+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:57:20.278147+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T12:57:20.279158+0800 | INFO | 当前batch_size:10
2025-02-01T12:59:52.552382+0800 | INFO | 加载配置文件config.yaml
2025-02-01T12:59:52.555323+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T12:59:52.555323+0800 | INFO | 当前命令行模式:True
2025-02-01T12:59:52.555323+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T12:59:52.555323+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T12:59:52.614041+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T12:59:52.618297+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T12:59:52.619287+0800 | INFO | 当前batch_size:10
2025-02-01T13:03:54.286377+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:03:54.287449+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:03:54.287449+0800 | INFO | 当前命令行模式:True
2025-02-01T13:03:54.287449+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T13:03:54.288454+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:03:54.357294+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T13:03:54.358909+0800 | INFO | 项目MD5:e0a7e5d315a3a38d420d4424b3eea116
2025-02-01T13:03:54.359991+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T13:04:11.184777+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:04:11.186370+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:04:11.186370+0800 | INFO | 当前命令行模式:True
2025-02-01T13:04:11.186370+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T13:04:11.187375+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:04:11.245243+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T13:04:11.250148+0800 | INFO | 项目MD5:e0a7e5d315a3a38d420d4424b3eea116
2025-02-01T13:04:11.250148+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T13:04:21.694898+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:04:21.694898+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:04:21.696463+0800 | INFO | 当前命令行模式:True
2025-02-01T13:04:21.696463+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master
2025-02-01T13:04:21.696463+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:04:21.753348+0800 | INFO | 解析目录结构如下
RuoYi-Vue-master
├─ pom.xml (.xml)
├─ bin
├─ ruoyi-admin
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │     └─ ├─ RuoYiApplication.java (.java)
│        │     └─ ├─ RuoYiServletInitializer.java (.java)
│        │        └─ web
│        │           ├─ controller
│        │           │  ├─ common
│        │           │  ├─ ├─ CaptchaController.java (.java)
│        │           │  ├─ └─ CommonController.java (.java)
│        │           │  ├─ monitor
│        │           │  ├─ ├─ CacheController.java (.java)
│        │           │  ├─ ├─ ServerController.java (.java)
│        │           │  ├─ ├─ SysLogininforController.java (.java)
│        │           │  ├─ ├─ SysOperlogController.java (.java)
│        │           │  ├─ └─ SysUserOnlineController.java (.java)
│        │           │  ├─ system
│        │           │  ├─ ├─ SysConfigController.java (.java)
│        │           │  ├─ ├─ SysDeptController.java (.java)
│        │           │  ├─ ├─ SysDictDataController.java (.java)
│        │           │  ├─ ├─ SysDictTypeController.java (.java)
│        │           │  ├─ ├─ SysIndexController.java (.java)
│        │           │  ├─ ├─ SysLoginController.java (.java)
│        │           │  ├─ ├─ SysMenuController.java (.java)
│        │           │  ├─ ├─ SysNoticeController.java (.java)
│        │           │  ├─ ├─ SysPostController.java (.java)
│        │           │  ├─ ├─ SysProfileController.java (.java)
│        │           │  ├─ ├─ SysRegisterController.java (.java)
│        │           │  ├─ ├─ SysRoleController.java (.java)
│        │           │  ├─ └─ SysUserController.java (.java)
│        │           │  └─ tool
│        │           │  └─ └─ TestController.java (.java)
│        │           └─ core
│        │              └─ config
│        │              └─ └─ SwaggerConfig.java (.java)
│        └─ resources
│        └─ ├─ logback.xml (.xml)
│           ├─ i18n
│           ├─ META-INF
│           └─ mybatis
│           └─ └─ mybatis-config.xml (.xml)
├─ ruoyi-common
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ common
│                    ├─ annotation
│                    ├─ ├─ Anonymous.java (.java)
│                    ├─ ├─ DataScope.java (.java)
│                    ├─ ├─ DataSource.java (.java)
│                    ├─ ├─ Excel.java (.java)
│                    ├─ ├─ Excels.java (.java)
│                    ├─ ├─ Log.java (.java)
│                    ├─ ├─ RateLimiter.java (.java)
│                    ├─ ├─ RepeatSubmit.java (.java)
│                    ├─ └─ Sensitive.java (.java)
│                    ├─ config
│                    ├─ ├─ RuoYiConfig.java (.java)
│                    │  └─ serializer
│                    │  └─ └─ SensitiveJsonSerializer.java (.java)
│                    ├─ constant
│                    ├─ ├─ CacheConstants.java (.java)
│                    ├─ ├─ Constants.java (.java)
│                    ├─ ├─ GenConstants.java (.java)
│                    ├─ ├─ HttpStatus.java (.java)
│                    ├─ ├─ ScheduleConstants.java (.java)
│                    ├─ └─ UserConstants.java (.java)
│                    ├─ core
│                    │  ├─ controller
│                    │  ├─ └─ BaseController.java (.java)
│                    │  ├─ domain
│                    │  ├─ ├─ AjaxResult.java (.java)
│                    │  ├─ ├─ BaseEntity.java (.java)
│                    │  ├─ ├─ R.java (.java)
│                    │  ├─ ├─ TreeEntity.java (.java)
│                    │  ├─ ├─ TreeSelect.java (.java)
│                    │  │  ├─ entity
│                    │  │  ├─ ├─ SysDept.java (.java)
│                    │  │  ├─ ├─ SysDictData.java (.java)
│                    │  │  ├─ ├─ SysDictType.java (.java)
│                    │  │  ├─ ├─ SysMenu.java (.java)
│                    │  │  ├─ ├─ SysRole.java (.java)
│                    │  │  ├─ └─ SysUser.java (.java)
│                    │  │  └─ model
│                    │  │  └─ ├─ LoginBody.java (.java)
│                    │  │  └─ ├─ LoginUser.java (.java)
│                    │  │  └─ └─ RegisterBody.java (.java)
│                    │  ├─ page
│                    │  ├─ ├─ PageDomain.java (.java)
│                    │  ├─ ├─ TableDataInfo.java (.java)
│                    │  ├─ └─ TableSupport.java (.java)
│                    │  ├─ redis
│                    │  ├─ └─ RedisCache.java (.java)
│                    │  └─ text
│                    │  └─ ├─ CharsetKit.java (.java)
│                    │  └─ ├─ Convert.java (.java)
│                    │  └─ └─ StrFormatter.java (.java)
│                    ├─ enums
│                    ├─ ├─ BusinessStatus.java (.java)
│                    ├─ ├─ BusinessType.java (.java)
│                    ├─ ├─ DataSourceType.java (.java)
│                    ├─ ├─ DesensitizedType.java (.java)
│                    ├─ ├─ HttpMethod.java (.java)
│                    ├─ ├─ LimitType.java (.java)
│                    ├─ ├─ OperatorType.java (.java)
│                    ├─ └─ UserStatus.java (.java)
│                    ├─ exception
│                    ├─ ├─ DemoModeException.java (.java)
│                    ├─ ├─ GlobalException.java (.java)
│                    ├─ ├─ ServiceException.java (.java)
│                    ├─ ├─ UtilException.java (.java)
│                    │  ├─ base
│                    │  ├─ └─ BaseException.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileException.java (.java)
│                    │  ├─ ├─ FileNameLengthLimitExceededException.java (.java)
│                    │  ├─ ├─ FileSizeLimitExceededException.java (.java)
│                    │  ├─ ├─ FileUploadException.java (.java)
│                    │  ├─ └─ InvalidExtensionException.java (.java)
│                    │  ├─ job
│                    │  ├─ └─ TaskException.java (.java)
│                    │  └─ user
│                    │  └─ ├─ BlackListException.java (.java)
│                    │  └─ ├─ CaptchaException.java (.java)
│                    │  └─ ├─ CaptchaExpireException.java (.java)
│                    │  └─ ├─ UserException.java (.java)
│                    │  └─ ├─ UserNotExistsException.java (.java)
│                    │  └─ ├─ UserPasswordNotMatchException.java (.java)
│                    │  └─ └─ UserPasswordRetryLimitExceedException.java (.java)
│                    ├─ filter
│                    ├─ ├─ PropertyPreExcludeFilter.java (.java)
│                    ├─ ├─ RepeatableFilter.java (.java)
│                    ├─ ├─ RepeatedlyRequestWrapper.java (.java)
│                    ├─ ├─ XssFilter.java (.java)
│                    ├─ └─ XssHttpServletRequestWrapper.java (.java)
│                    ├─ utils
│                    ├─ ├─ Arith.java (.java)
│                    ├─ ├─ DateUtils.java (.java)
│                    ├─ ├─ DesensitizedUtil.java (.java)
│                    ├─ ├─ DictUtils.java (.java)
│                    ├─ ├─ ExceptionUtil.java (.java)
│                    ├─ ├─ LogUtils.java (.java)
│                    ├─ ├─ MessageUtils.java (.java)
│                    ├─ ├─ PageUtils.java (.java)
│                    ├─ ├─ SecurityUtils.java (.java)
│                    ├─ ├─ ServletUtils.java (.java)
│                    ├─ ├─ StringUtils.java (.java)
│                    ├─ ├─ Threads.java (.java)
│                    │  ├─ bean
│                    │  ├─ ├─ BeanUtils.java (.java)
│                    │  ├─ └─ BeanValidators.java (.java)
│                    │  ├─ file
│                    │  ├─ ├─ FileTypeUtils.java (.java)
│                    │  ├─ ├─ FileUploadUtils.java (.java)
│                    │  ├─ ├─ FileUtils.java (.java)
│                    │  ├─ ├─ ImageUtils.java (.java)
│                    │  ├─ └─ MimeTypeUtils.java (.java)
│                    │  ├─ html
│                    │  ├─ ├─ EscapeUtil.java (.java)
│                    │  ├─ └─ HTMLFilter.java (.java)
│                    │  ├─ http
│                    │  ├─ ├─ HttpHelper.java (.java)
│                    │  ├─ └─ HttpUtils.java (.java)
│                    │  ├─ ip
│                    │  ├─ ├─ AddressUtils.java (.java)
│                    │  ├─ └─ IpUtils.java (.java)
│                    │  ├─ poi
│                    │  ├─ ├─ ExcelHandlerAdapter.java (.java)
│                    │  ├─ └─ ExcelUtil.java (.java)
│                    │  ├─ reflect
│                    │  ├─ └─ ReflectUtils.java (.java)
│                    │  ├─ sign
│                    │  ├─ ├─ Base64.java (.java)
│                    │  ├─ └─ Md5Utils.java (.java)
│                    │  ├─ spring
│                    │  ├─ └─ SpringUtils.java (.java)
│                    │  ├─ sql
│                    │  ├─ └─ SqlUtil.java (.java)
│                    │  └─ uuid
│                    │  └─ ├─ IdUtils.java (.java)
│                    │  └─ ├─ Seq.java (.java)
│                    │  └─ └─ UUID.java (.java)
│                    └─ xss
│                    └─ ├─ Xss.java (.java)
│                    └─ └─ XssValidator.java (.java)
├─ ruoyi-framework
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        └─ java
│           └─ com
│              └─ ruoyi
│                 └─ framework
│                    ├─ config
│                    ├─ ├─ ApplicationConfig.java (.java)
│                    ├─ ├─ CaptchaConfig.java (.java)
│                    ├─ ├─ DruidConfig.java (.java)
│                    ├─ ├─ FastJson2JsonRedisSerializer.java (.java)
│                    ├─ ├─ FilterConfig.java (.java)
│                    ├─ ├─ I18nConfig.java (.java)
│                    ├─ ├─ KaptchaTextCreator.java (.java)
│                    ├─ ├─ MyBatisConfig.java (.java)
│                    ├─ ├─ RedisConfig.java (.java)
│                    ├─ ├─ ResourcesConfig.java (.java)
│                    ├─ ├─ SecurityConfig.java (.java)
│                    ├─ ├─ ServerConfig.java (.java)
│                    ├─ ├─ ThreadPoolConfig.java (.java)
│                    │  └─ properties
│                    │  └─ ├─ DruidProperties.java (.java)
│                    │  └─ └─ PermitAllUrlProperties.java (.java)
│                    ├─ datasource
│                    ├─ ├─ DynamicDataSource.java (.java)
│                    ├─ └─ DynamicDataSourceContextHolder.java (.java)
│                    ├─ interceptor
│                    ├─ ├─ RepeatSubmitInterceptor.java (.java)
│                    │  └─ impl
│                    │  └─ └─ SameUrlDataInterceptor.java (.java)
│                    ├─ manager
│                    ├─ ├─ AsyncManager.java (.java)
│                    ├─ ├─ ShutdownManager.java (.java)
│                    │  └─ factory
│                    │  └─ └─ AsyncFactory.java (.java)
│                    ├─ security
│                    │  ├─ context
│                    │  ├─ ├─ AuthenticationContextHolder.java (.java)
│                    │  ├─ └─ PermissionContextHolder.java (.java)
│                    │  ├─ filter
│                    │  ├─ └─ JwtAuthenticationTokenFilter.java (.java)
│                    │  └─ handle
│                    │  └─ └─ AuthenticationEntryPointImpl.java (.java)
│                    └─ web
│                       ├─ domain
│                       ├─ ├─ Server.java (.java)
│                       │  └─ server
│                       │  └─ ├─ Cpu.java (.java)
│                       │  └─ ├─ Jvm.java (.java)
│                       │  └─ ├─ Mem.java (.java)
│                       │  └─ ├─ Sys.java (.java)
│                       │  └─ └─ SysFile.java (.java)
│                       ├─ exception
│                       ├─ └─ GlobalExceptionHandler.java (.java)
│                       └─ service
│                       └─ ├─ PermissionService.java (.java)
│                       └─ ├─ SysLoginService.java (.java)
│                       └─ ├─ SysPasswordService.java (.java)
│                       └─ ├─ SysPermissionService.java (.java)
│                       └─ ├─ SysRegisterService.java (.java)
│                       └─ ├─ TokenService.java (.java)
│                       └─ └─ UserDetailsServiceImpl.java (.java)
├─ ruoyi-generator
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ generator
│        │           ├─ config
│        │           ├─ └─ GenConfig.java (.java)
│        │           ├─ controller
│        │           ├─ └─ GenController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ GenTable.java (.java)
│        │           ├─ └─ GenTableColumn.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ GenTableColumnMapper.java (.java)
│        │           ├─ └─ GenTableMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ GenTableColumnServiceImpl.java (.java)
│        │           ├─ ├─ GenTableServiceImpl.java (.java)
│        │           ├─ ├─ IGenTableColumnService.java (.java)
│        │           ├─ └─ IGenTableService.java (.java)
│        │           └─ util
│        │           └─ ├─ GenUtils.java (.java)
│        │           └─ ├─ VelocityInitializer.java (.java)
│        │           └─ └─ VelocityUtils.java (.java)
│        └─ resources
│           ├─ mapper
│           │  └─ generator
│           │  └─ ├─ GenTableColumnMapper.xml (.xml)
│           │  └─ └─ GenTableMapper.xml (.xml)
│           └─ vm
│              ├─ java
│              ├─ js
│              ├─ sql
│              ├─ vue
│              │  └─ v3
│              └─ xml
├─ ruoyi-quartz
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ quartz
│        │           ├─ config
│        │           ├─ └─ ScheduleConfig.java (.java)
│        │           ├─ controller
│        │           ├─ ├─ SysJobController.java (.java)
│        │           ├─ └─ SysJobLogController.java (.java)
│        │           ├─ domain
│        │           ├─ ├─ SysJob.java (.java)
│        │           ├─ └─ SysJobLog.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysJobLogMapper.java (.java)
│        │           ├─ └─ SysJobMapper.java (.java)
│        │           ├─ service
│        │           ├─ ├─ ISysJobLogService.java (.java)
│        │           ├─ ├─ ISysJobService.java (.java)
│        │           │  └─ impl
│        │           │  └─ ├─ SysJobLogServiceImpl.java (.java)
│        │           │  └─ └─ SysJobServiceImpl.java (.java)
│        │           ├─ task
│        │           ├─ └─ RyTask.java (.java)
│        │           └─ util
│        │           └─ ├─ AbstractQuartzJob.java (.java)
│        │           └─ ├─ CronUtils.java (.java)
│        │           └─ ├─ JobInvokeUtil.java (.java)
│        │           └─ ├─ QuartzDisallowConcurrentExecution.java (.java)
│        │           └─ ├─ QuartzJobExecution.java (.java)
│        │           └─ └─ ScheduleUtils.java (.java)
│        └─ resources
│           └─ mapper
│              └─ quartz
│              └─ ├─ SysJobLogMapper.xml (.xml)
│              └─ └─ SysJobMapper.xml (.xml)
├─ ruoyi-system
├─ ├─ pom.xml (.xml)
│  └─ src
│     └─ main
│        ├─ java
│        │  └─ com
│        │     └─ ruoyi
│        │        └─ system
│        │           ├─ domain
│        │           ├─ ├─ SysCache.java (.java)
│        │           ├─ ├─ SysConfig.java (.java)
│        │           ├─ ├─ SysLogininfor.java (.java)
│        │           ├─ ├─ SysNotice.java (.java)
│        │           ├─ ├─ SysOperLog.java (.java)
│        │           ├─ ├─ SysPost.java (.java)
│        │           ├─ ├─ SysRoleDept.java (.java)
│        │           ├─ ├─ SysRoleMenu.java (.java)
│        │           ├─ ├─ SysUserOnline.java (.java)
│        │           ├─ ├─ SysUserPost.java (.java)
│        │           ├─ ├─ SysUserRole.java (.java)
│        │           │  └─ vo
│        │           │  └─ └─ MetaVo.java (.java)
│        │           ├─ mapper
│        │           ├─ ├─ SysConfigMapper.java (.java)
│        │           ├─ ├─ SysDeptMapper.java (.java)
│        │           ├─ ├─ SysDictDataMapper.java (.java)
│        │           ├─ ├─ SysDictTypeMapper.java (.java)
│        │           ├─ ├─ SysLogininforMapper.java (.java)
│        │           ├─ ├─ SysMenuMapper.java (.java)
│        │           ├─ ├─ SysNoticeMapper.java (.java)
│        │           ├─ ├─ SysOperLogMapper.java (.java)
│        │           ├─ ├─ SysPostMapper.java (.java)
│        │           ├─ ├─ SysRoleDeptMapper.java (.java)
│        │           ├─ ├─ SysRoleMapper.java (.java)
│        │           ├─ ├─ SysRoleMenuMapper.java (.java)
│        │           ├─ ├─ SysUserMapper.java (.java)
│        │           ├─ ├─ SysUserPostMapper.java (.java)
│        │           ├─ └─ SysUserRoleMapper.java (.java)
│        │           └─ service
│        │           └─ ├─ ISysConfigService.java (.java)
│        │           └─ ├─ ISysDeptService.java (.java)
│        │           └─ ├─ ISysDictDataService.java (.java)
│        │           └─ ├─ ISysDictTypeService.java (.java)
│        │           └─ ├─ ISysLogininforService.java (.java)
│        │           └─ ├─ ISysMenuService.java (.java)
│        │           └─ ├─ ISysNoticeService.java (.java)
│        │           └─ ├─ ISysOperLogService.java (.java)
│        │           └─ ├─ ISysPostService.java (.java)
│        │           └─ ├─ ISysRoleService.java (.java)
│        │           └─ ├─ ISysUserOnlineService.java (.java)
│        │           └─ ├─ ISysUserService.java (.java)
│        │              └─ impl
│        │              └─ ├─ SysConfigServiceImpl.java (.java)
│        │              └─ ├─ SysDeptServiceImpl.java (.java)
│        │              └─ ├─ SysDictDataServiceImpl.java (.java)
│        │              └─ ├─ SysDictTypeServiceImpl.java (.java)
│        │              └─ ├─ SysLogininforServiceImpl.java (.java)
│        │              └─ ├─ SysMenuServiceImpl.java (.java)
│        │              └─ ├─ SysNoticeServiceImpl.java (.java)
│        │              └─ ├─ SysOperLogServiceImpl.java (.java)
│        │              └─ ├─ SysPostServiceImpl.java (.java)
│        │              └─ ├─ SysRoleServiceImpl.java (.java)
│        │              └─ ├─ SysUserOnlineServiceImpl.java (.java)
│        │              └─ └─ SysUserServiceImpl.java (.java)
│        └─ resources
│           └─ mapper
│              └─ system
│              └─ ├─ SysConfigMapper.xml (.xml)
│              └─ ├─ SysDeptMapper.xml (.xml)
│              └─ ├─ SysDictDataMapper.xml (.xml)
│              └─ ├─ SysDictTypeMapper.xml (.xml)
│              └─ ├─ SysLogininforMapper.xml (.xml)
│              └─ ├─ SysMenuMapper.xml (.xml)
│              └─ ├─ SysNoticeMapper.xml (.xml)
│              └─ ├─ SysOperLogMapper.xml (.xml)
│              └─ ├─ SysPostMapper.xml (.xml)
│              └─ ├─ SysRoleDeptMapper.xml (.xml)
│              └─ ├─ SysRoleMapper.xml (.xml)
│              └─ ├─ SysRoleMenuMapper.xml (.xml)
│              └─ ├─ SysUserMapper.xml (.xml)
│              └─ ├─ SysUserPostMapper.xml (.xml)
│              └─ └─ SysUserRoleMapper.xml (.xml)
├─ ruoyi-ui
├─ ├─ .eslintrc.js (.js)
├─ ├─ babel.config.js (.js)
├─ ├─ package.json (.json)
├─ ├─ vue.config.js (.js)
│  ├─ bin
│  ├─ public
│  │  ├─ html
│  │  └─ styles
│  │     └─ theme-chalk
│  └─ src
│  └─ ├─ main.js (.js)
│  └─ ├─ permission.js (.js)
│  └─ ├─ settings.js (.js)
│     ├─ api
│     ├─ ├─ login.js (.js)
│     ├─ ├─ menu.js (.js)
│     │  ├─ monitor
│     │  ├─ ├─ job.js (.js)
│     │  ├─ ├─ jobLog.js (.js)
│     │  ├─ ├─ logininfor.js (.js)
│     │  ├─ ├─ online.js (.js)
│     │  ├─ ├─ operlog.js (.js)
│     │  ├─ └─ server.js (.js)
│     │  ├─ system
│     │  ├─ ├─ config.js (.js)
│     │  ├─ ├─ dept.js (.js)
│     │  ├─ ├─ menu.js (.js)
│     │  ├─ ├─ notice.js (.js)
│     │  ├─ ├─ post.js (.js)
│     │  ├─ ├─ role.js (.js)
│     │  ├─ ├─ user.js (.js)
│     │  │  └─ dict
│     │  │  └─ ├─ data.js (.js)
│     │  │  └─ └─ type.js (.js)
│     │  └─ tool
│     │  └─ └─ gen.js (.js)
│     ├─ assets
│     │  ├─ 401_images
│     │  ├─ 404_images
│     │  ├─ icons
│     │  ├─ ├─ index.js (.js)
│     │  │  └─ svg
│     │  ├─ images
│     │  ├─ logo
│     │  └─ styles
│     ├─ components
│     │  ├─ Breadcrumb
│     │  ├─ Crontab
│     │  ├─ DictData
│     │  ├─ └─ index.js (.js)
│     │  ├─ DictTag
│     │  ├─ Editor
│     │  ├─ FileUpload
│     │  ├─ Hamburger
│     │  ├─ HeaderSearch
│     │  ├─ IconSelect
│     │  ├─ └─ requireIcons.js (.js)
│     │  ├─ iFrame
│     │  ├─ ImagePreview
│     │  ├─ ImageUpload
│     │  ├─ Pagination
│     │  ├─ PanThumb
│     │  ├─ ParentView
│     │  ├─ RightPanel
│     │  ├─ RightToolbar
│     │  ├─ RuoYi
│     │  │  ├─ Doc
│     │  │  └─ Git
│     │  ├─ Screenfull
│     │  ├─ SizeSelect
│     │  ├─ SvgIcon
│     │  ├─ ThemePicker
│     │  └─ TopNav
│     ├─ directive
│     ├─ ├─ index.js (.js)
│     │  ├─ dialog
│     │  ├─ ├─ drag.js (.js)
│     │  ├─ ├─ dragHeight.js (.js)
│     │  ├─ └─ dragWidth.js (.js)
│     │  ├─ module
│     │  ├─ └─ clipboard.js (.js)
│     │  └─ permission
│     │  └─ ├─ hasPermi.js (.js)
│     │  └─ └─ hasRole.js (.js)
│     ├─ plugins
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ download.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ modal.js (.js)
│     ├─ └─ tab.js (.js)
│     ├─ store
│     ├─ ├─ getters.js (.js)
│     ├─ ├─ index.js (.js)
│     │  └─ modules
│     │  └─ ├─ app.js (.js)
│     │  └─ ├─ dict.js (.js)
│     │  └─ ├─ permission.js (.js)
│     │  └─ ├─ settings.js (.js)
│     │  └─ ├─ tagsView.js (.js)
│     │  └─ └─ user.js (.js)
│     ├─ utils
│     ├─ ├─ auth.js (.js)
│     ├─ ├─ errorCode.js (.js)
│     ├─ ├─ index.js (.js)
│     ├─ ├─ jsencrypt.js (.js)
│     ├─ ├─ permission.js (.js)
│     ├─ ├─ request.js (.js)
│     ├─ ├─ ruoyi.js (.js)
│     ├─ ├─ scroll-to.js (.js)
│     ├─ ├─ validate.js (.js)
│     │  ├─ dict
│     │  ├─ ├─ Dict.js (.js)
│     │  ├─ ├─ DictConverter.js (.js)
│     │  ├─ ├─ DictData.js (.js)
│     │  ├─ ├─ DictMeta.js (.js)
│     │  ├─ ├─ DictOptions.js (.js)
│     │  ├─ └─ index.js (.js)
│     │  └─ generator
│     │  └─ ├─ config.js (.js)
│     │  └─ ├─ css.js (.js)
│     │  └─ ├─ drawingDefault.js (.js)
│     │  └─ ├─ html.js (.js)
│     │  └─ ├─ icon.json (.json)
│     │  └─ ├─ js.js (.js)
│     │  └─ └─ render.js (.js)
│     └─ views
│        ├─ dashboard
│        │  └─ mixins
│        │  └─ └─ resize.js (.js)
│        ├─ error
│        ├─ monitor
│        │  ├─ druid
│        │  ├─ job
│        │  ├─ logininfor
│        │  ├─ online
│        │  ├─ operlog
│        │  └─ server
│        ├─ system
│        │  ├─ config
│        │  ├─ dept
│        │  ├─ dict
│        │  ├─ menu
│        │  ├─ notice
│        │  ├─ post
│        │  ├─ role
│        │  └─ user
│        │     └─ profile
│        └─ tool
│           ├─ gen
│           └─ swagger
└─ sql

2025-02-01T13:04:21.756966+0800 | INFO | 项目MD5:e0a7e5d315a3a38d420d4424b3eea116
2025-02-01T13:04:21.756966+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T13:09:40.806766+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:09:40.807851+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:09:40.807851+0800 | INFO | 当前命令行模式:True
2025-02-01T13:09:40.807851+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T13:09:40.807851+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:09:40.815712+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T13:09:40.815712+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T13:09:40.815712+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T13:09:40.816722+0800 | INFO | 当前batch_size:10
2025-02-01T13:12:26.890223+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:12:26.893484+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:12:26.893484+0800 | INFO | 当前命令行模式:True
2025-02-01T13:12:26.893484+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T13:12:26.893484+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:12:26.898627+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T13:12:26.898627+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T13:12:26.899739+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T13:12:26.899739+0800 | INFO | 当前batch_size:10
2025-02-01T13:13:06.200839+0800 | INFO | Agent_A计算完毕，输出文件:./cache/ccbd72ea49cd2e4f9a756a65bfba1dd6.graphml
2025-02-01T13:55:31.267888+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:55:31.270877+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:55:31.270877+0800 | INFO | 当前命令行模式:True
2025-02-01T13:55:31.271944+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T13:55:31.271944+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:55:31.278629+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T13:55:31.278629+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T13:55:40.300966+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:55:40.302887+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:55:40.302887+0800 | INFO | 当前命令行模式:True
2025-02-01T13:55:40.303964+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T13:55:40.303964+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:55:40.309485+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T13:55:40.310481+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T13:55:40.310481+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T13:56:08.974730+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:56:08.976366+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:56:08.976366+0800 | INFO | 当前命令行模式:True
2025-02-01T13:56:08.976366+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T13:56:08.976366+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:56:08.981524+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T13:56:08.981524+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T13:56:08.981524+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T13:56:33.101897+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:56:33.102895+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:56:33.103891+0800 | INFO | 当前命令行模式:True
2025-02-01T13:56:33.103891+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T13:56:33.103891+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:56:33.108423+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T13:56:33.109419+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T13:56:33.109419+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T13:57:11.209517+0800 | INFO | 加载配置文件config.yaml
2025-02-01T13:57:11.209517+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T13:57:11.210500+0800 | INFO | 当前命令行模式:True
2025-02-01T13:57:11.210500+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T13:57:11.210500+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T13:57:11.215992+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T13:57:11.215992+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T13:57:11.215992+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:00:47.965763+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:00:47.968781+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:00:47.968781+0800 | INFO | 当前命令行模式:True
2025-02-01T14:00:47.969778+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:00:47.969778+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:00:47.980251+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:00:47.981248+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:00:47.981248+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:01:21.770642+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:01:21.771631+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:01:21.771631+0800 | INFO | 当前命令行模式:True
2025-02-01T14:01:21.772861+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:01:21.772861+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:01:21.778435+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:01:21.779434+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:01:21.779434+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:01:37.366657+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:01:37.369647+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:01:37.369647+0800 | INFO | 当前命令行模式:True
2025-02-01T14:01:37.370652+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:01:37.370652+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:01:37.376160+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:01:37.377176+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:01:37.377176+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:02:17.223537+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:02:17.226510+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:02:17.226510+0800 | INFO | 当前命令行模式:True
2025-02-01T14:02:17.226510+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:02:17.227543+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:02:17.232465+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:02:17.233460+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:02:17.233460+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:02:37.075943+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:02:37.077943+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:02:37.077943+0800 | INFO | 当前命令行模式:True
2025-02-01T14:02:37.077943+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:02:37.077943+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:02:37.083922+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:02:37.083922+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:02:37.083922+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:04:19.279838+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:04:19.281017+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:04:19.281017+0800 | INFO | 当前命令行模式:True
2025-02-01T14:04:19.281017+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:04:19.281017+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:04:19.286367+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:04:19.286367+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:04:19.286367+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T14:04:19.287677+0800 | INFO | 当前batch_size:10
2025-02-01T14:04:52.162239+0800 | INFO | Agent_A计算完毕，输出文件:./output/ccbd72ea49cd2e4f9a756a65bfba1dd6.graphml
2025-02-01T14:04:52.164221+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:05:47.084776+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:05:47.084776+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:05:47.085775+0800 | INFO | 当前命令行模式:True
2025-02-01T14:05:47.085775+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:05:47.085775+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:05:47.093019+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:05:47.093019+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:05:47.093019+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:08:10.689864+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:08:10.693903+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:08:10.693903+0800 | INFO | 当前命令行模式:True
2025-02-01T14:08:10.693903+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:08:10.693903+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:08:10.707408+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:08:10.707408+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:08:10.707408+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:27:20.214252+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:27:20.215248+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:27:20.215248+0800 | INFO | 当前命令行模式:True
2025-02-01T14:27:20.215248+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:27:20.216247+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:27:20.222925+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:27:20.222925+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:27:20.223912+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:27:20.234419+0800 | INFO | 当前batch_size:10
2025-02-01T14:27:45.279634+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:27:45.282591+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:27:45.282591+0800 | INFO | 当前命令行模式:True
2025-02-01T14:27:45.282591+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:27:45.283418+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:27:45.289027+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:27:45.289027+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:27:45.289027+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:27:45.298521+0800 | INFO | 当前batch_size:10
2025-02-01T14:28:01.523280+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:28:01.526214+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:28:01.526214+0800 | INFO | 当前命令行模式:True
2025-02-01T14:28:01.526214+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:28:01.526214+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:28:01.531809+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:28:01.531809+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:28:01.531809+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:28:01.540341+0800 | INFO | 当前batch_size:10
2025-02-01T14:29:33.314981+0800 | INFO | Agent_2计算完毕，输出文件:./output/ccbd72ea49cd2e4f9a756a65bfba1dd6_审计结果.log
2025-02-01T14:31:34.018413+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:31:34.020405+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:31:34.021402+0800 | INFO | 当前命令行模式:True
2025-02-01T14:31:34.021402+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:31:34.021402+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:31:34.026889+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:31:34.026889+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:31:34.026889+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:31:34.034421+0800 | INFO | 当前batch_size:10
2025-02-01T14:31:52.186694+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:31:52.189696+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:31:52.189696+0800 | INFO | 当前命令行模式:True
2025-02-01T14:31:52.190681+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:31:52.190681+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:31:52.199444+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:31:52.199444+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:31:52.200442+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:31:52.210922+0800 | INFO | 当前batch_size:10
2025-02-01T14:33:15.389841+0800 | INFO | Agent_2计算完毕，输出文件:./output/ccbd72ea49cd2e4f9a756a65bfba1dd6_审计结果.log
2025-02-01T14:35:27.339740+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:35:27.342735+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:35:27.342735+0800 | INFO | 当前命令行模式:True
2025-02-01T14:35:27.342735+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:35:27.342735+0800 | INFO | 当前输出文件:./结果.log
2025-02-01T14:35:27.377376+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:35:27.377376+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:35:27.377376+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:35:27.385559+0800 | INFO | 当前batch_size:10
2025-02-01T14:35:27.385559+0800 | INFO | 数据大小:153
2025-02-01T14:35:27.385559+0800 | DEBUG | ['<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi\n        当前代码源码: 5:     <parent>\n 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>\n        源码摘要描述:ruoyi-admin项目依赖于ruoyi作为父项目\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-devtools\n        当前代码源码:21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于spring-boot-devtools进行开发辅助\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:springfox-boot-starter\n        当前代码源码:28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于springfox-boot-starter以集成Swagger功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:swagger-models\n        当前代码源码:34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger-models用于处理Swagger相关的类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:mysql-connector-java\n        当前代码源码:41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于mysql-connector-java以连接MySQL数据库\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-framework\n        当前代码源码:48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于ruoyi-framework作为核心模块\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-quartz\n        当前代码源码:54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于ruoyi-quartz以支持定时任务\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-generator\n        当前代码源码:60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于ruoyi-generator以支持代码生成\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-maven-plugin\n        当前代码源码:68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n        源码摘要描述:ruoyi-admin项目使用spring-boot-maven-plugin进行构建和打包\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行WAR包的构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义一个用户访问日志输出的appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义一个控制台输出的appender\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义一个用户访问日志输出的appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义一个系统日志输出的appender\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义一个用户访问日志输出的appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_error\n        当前代码源码:38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>\n        源码摘要描述:定义一个错误日志输出的appender\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义一个用户访问日志输出的appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义一个用户访问日志输出的appender\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:设置sys-user的日志级别为info并引用sys-user appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:com.ruoyi\n        当前代码源码:75: \t<logger name="com.ruoyi" level="info" />\n        源码摘要描述:设置com.ruoyi模块的日志级别为info\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:设置sys-user的日志级别为info并引用sys-user appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:org.springframework\n        当前代码源码:77: \t<logger name="org.springframework" level="warn" />\n        源码摘要描述:设置org.springframework模块的日志级别为warn\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:设置sys-user的日志级别为info并引用sys-user appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义一个用户访问日志输出的appender\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n87:     </root>\n        源码摘要描述:设置系统操作日志的根日志记录器为info并引用file_info和file_error appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义一个控制台输出的appender\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n87:     </root>\n        源码摘要描述:设置系统操作日志的根日志记录器为info并引用file_info和file_error appender\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义一个系统日志输出的appender\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:configuration\n        被调用代码单元名称:settings\n        当前代码源码: 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:configuration定义了MyBatis的全局参数设置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:settings用来配置具体的参数设定\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:settings用来配置具体的参数设定\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:RuoYiServletInitializer类重写configure方法以配置SpringApplicationBuilder实例\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n        源码摘要描述:RuoYiServletInitializer类扩展SpringBootServletInitializer类以支持web容器中的部署\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:RuoYiServletInitializer类重写configure方法以配置SpringApplicationBuilder实例\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:RuoYiServletInitializer类重写configure方法以配置SpringApplicationBuilder实例\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:configService\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n        源码摘要描述:CaptchaController类中getCode方法调用configService的selectCaptchaEnabled方法确认是否启用验证码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:IdUtils\n        当前代码源码:57:         String uuid = IdUtils.simpleUUID();\n        源码摘要描述:CaptchaController类中getCode方法调用IdUtils生成uuid以作为验证码识别标志\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:64:         String captchaType = RuoYiConfig.getCaptchaType();\n        源码摘要描述:CaptchaController类中getCode方法调用RuoYiConfig获取当前验证码类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:captchaProducerMath\n        当前代码源码:67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n        源码摘要描述:CaptchaController类中getCode方法在验证码类型为math时调用captchaProducerMath生成验证码文本和图片\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:captchaProducer\n        当前代码源码:74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n        源码摘要描述:CaptchaController类中getCode方法在验证码类型为char时调用captchaProducer生成验证码文本和图片\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:redisCache\n        当前代码源码:78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n        源码摘要描述:CaptchaController类中getCode方法调用redisCache将生成的验证码存入缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ImageIO\n        当前代码源码:83:             ImageIO.write(image, "jpg", os);\n        源码摘要描述:CaptchaController类中getCode方法调用ImageIO将验证码图片写入输出流\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用FileUtils将文件内容写入响应流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController处理文件下载请求，调用FileUtils检查下载文件是否合法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用FileUtils将文件内容写入响应流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController处理文件下载请求，调用RuoYiConfig获取下载路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用FileUtils将文件内容写入响应流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:StringUtils\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController处理文件下载请求，调用StringUtils格式化异常信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用FileUtils将文件内容写入响应流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUploadUtils\n        当前代码源码: 75:     @PostMapping("/upload")\n 76:     public AjaxResult uploadFile(MultipartFile file) throws Exception\n 77:     {\n 78:         try\n 79:         {\n 80:             // 上传文件路径\n 81:             String filePath = RuoYiConfig.getUploadPath();\n 82:             // 上传并返回新文件名称\n 83:             String fileName = FileUploadUtils.upload(filePath, file);\n 84:             String url = serverConfig.getUrl() + fileName;\n 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController处理单个文件上传请求，调用FileUploadUtils进行文件上传\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用FileUtils将文件内容写入响应流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:serverConfig\n        当前代码源码: 75:     @PostMapping("/upload")\n 76:     public AjaxResult uploadFile(MultipartFile file) throws Exception\n 77:     {\n 78:         try\n 79:         {\n 80:             // 上传文件路径\n 81:             String filePath = RuoYiConfig.getUploadPath();\n 82:             // 上传并返回新文件名称\n 83:             String fileName = FileUploadUtils.upload(filePath, file);\n 84:             String url = serverConfig.getUrl() + fileName;\n 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController处理单个文件上传请求，调用serverConfig获取文件URL\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用FileUtils将文件内容写入响应流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 75:     @PostMapping("/upload")\n 76:     public AjaxResult uploadFile(MultipartFile file) throws Exception\n 77:     {\n 78:         try\n 79:         {\n 80:             // 上传文件路径\n 81:             String filePath = RuoYiConfig.getUploadPath();\n 82:             // 上传并返回新文件名称\n 83:             String fileName = FileUploadUtils.upload(filePath, file);\n 84:             String url = serverConfig.getUrl() + fileName;\n 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController处理单个文件上传请求，创建AjaxResult对象以返回上传结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用FileUtils将文件内容写入响应流\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:Constants\n        当前代码源码:138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n        源码摘要描述:CommonController处理资源下载请求，调用Constants获取数据库资源地址前缀\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n        源码摘要描述:CacheController类在getInfo方法中使用redisTemplate执行Redis命令获取数据库大小和其他信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 35:     private RedisTemplate<String, String> redisTemplate;\n        源码摘要描述:CacheController类使用redisTemplate与Redis数据交互\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n        源码摘要描述:CacheController类在getInfo方法中使用redisTemplate执行Redis命令获取数据库大小和其他信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:SysCache\n        当前代码源码: 39:         caches.add(new SysCache(CacheConstants.LOGIN_TOKEN_KEY, "用户信息"));\n 40:         caches.add(new SysCache(CacheConstants.SYS_CONFIG_KEY, "配置信息"));\n 41:         caches.add(new SysCache(CacheConstants.SYS_DICT_KEY, "数据字典"));\n 42:         caches.add(new SysCache(CacheConstants.CAPTCHA_CODE_KEY, "验证码"));\n 43:         caches.add(new SysCache(CacheConstants.REPEAT_SUBMIT_KEY, "防重提交"));\n 44:         caches.add(new SysCache(CacheConstants.RATE_LIMIT_KEY, "限流处理"));\n 45:         caches.add(new SysCache(CacheConstants.PWD_ERR_CNT_KEY, "密码错误次数"));\n        源码摘要描述:CacheController类在初始化时使用SysCache构造函数添加缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:cache\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 76:         return AjaxResult.success(caches);\n        源码摘要描述:cache方法返回缓存列表的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getCacheKeys\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 84:         return AjaxResult.success(new TreeSet<>(cacheKeys));\n        源码摘要描述:getCacheKeys方法返回找到的缓存键的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 35:     private RedisTemplate<String, String> redisTemplate;\n        源码摘要描述:CacheController类使用redisTemplate与Redis数据交互\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getCacheKeys\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 84:         return AjaxResult.success(new TreeSet<>(cacheKeys));\n        源码摘要描述:getCacheKeys方法返回找到的缓存键的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getCacheValue\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 93:         return AjaxResult.success(sysCache);\n        源码摘要描述:getCacheValue方法返回缓存值的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 35:     private RedisTemplate<String, String> redisTemplate;\n        源码摘要描述:CacheController类使用redisTemplate与Redis数据交互\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getCacheValue\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 93:         return AjaxResult.success(sysCache);\n        源码摘要描述:getCacheValue方法返回缓存值的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:SysCache\n        当前代码源码: 39:         caches.add(new SysCache(CacheConstants.LOGIN_TOKEN_KEY, "用户信息"));\n 40:         caches.add(new SysCache(CacheConstants.SYS_CONFIG_KEY, "配置信息"));\n 41:         caches.add(new SysCache(CacheConstants.SYS_DICT_KEY, "数据字典"));\n 42:         caches.add(new SysCache(CacheConstants.CAPTCHA_CODE_KEY, "验证码"));\n 43:         caches.add(new SysCache(CacheConstants.REPEAT_SUBMIT_KEY, "防重提交"));\n 44:         caches.add(new SysCache(CacheConstants.RATE_LIMIT_KEY, "限流处理"));\n 45:         caches.add(new SysCache(CacheConstants.PWD_ERR_CNT_KEY, "密码错误次数"));\n        源码摘要描述:CacheController类在初始化时使用SysCache构造函数添加缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getCacheValue\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 93:         return AjaxResult.success(sysCache);\n        源码摘要描述:getCacheValue方法返回缓存值的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:clearCacheName\n        被调用代码单元名称:AjaxResult\n        当前代码源码:102:         return AjaxResult.success();\n        源码摘要描述:clearCacheName方法返回清除结果的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 35:     private RedisTemplate<String, String> redisTemplate;\n        源码摘要描述:CacheController类使用redisTemplate与Redis数据交互\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:clearCacheName\n        被调用代码单元名称:AjaxResult\n        当前代码源码:102:         return AjaxResult.success();\n        源码摘要描述:clearCacheName方法返回清除结果的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:clearCacheKey\n        被调用代码单元名称:AjaxResult\n        当前代码源码:110:         return AjaxResult.success();\n        源码摘要描述:clearCacheKey方法返回清除结果的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 35:     private RedisTemplate<String, String> redisTemplate;\n        源码摘要描述:CacheController类使用redisTemplate与Redis数据交互\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:clearCacheKey\n        被调用代码单元名称:AjaxResult\n        当前代码源码:110:         return AjaxResult.success();\n        源码摘要描述:clearCacheKey方法返回清除结果的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:clearCacheAll\n        被调用代码单元名称:AjaxResult\n        当前代码源码:120:     }\n        源码摘要描述:clearCacheAll方法返回清除所有缓存结果的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:redisTemplate\n        当前代码源码: 35:     private RedisTemplate<String, String> redisTemplate;\n        源码摘要描述:CacheController类使用redisTemplate与Redis数据交互\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:clearCacheAll\n        被调用代码单元名称:AjaxResult\n        当前代码源码:120:     }\n        源码摘要描述:clearCacheAll方法返回清除所有缓存结果的AjaxResult\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:getInfo\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 70:     }\n        源码摘要描述:getInfo方法返回获取Redis信息和命令统计的AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类中的getInfo方法返回一个AjaxResult对象，表示服务器的信息获取结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类中的getInfo方法返回一个AjaxResult对象，表示服务器的信息获取结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:Server\n        被调用代码单元名称:AjaxResult\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:Server类在ServerController类中被调用以封装服务器信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类中的getInfo方法返回一个AjaxResult对象，表示服务器的信息获取结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类中的unlock方法调用passwordService的clearLoginRecordCache方法清除特定用户名的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ISysLogininforService\n        当前代码源码:40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);\n        源码摘要描述:SysLogininforController类中的list方法调用logininforService的selectLogininforList方法查询登录信息列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类中的unlock方法调用passwordService的clearLoginRecordCache方法清除特定用户名的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");\n        源码摘要描述:SysLogininforController类中的export方法使用ExcelUtil类导出登录日志\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类中的unlock方法调用passwordService的clearLoginRecordCache方法清除特定用户名的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类中的unlock方法调用passwordService的clearLoginRecordCache方法清除特定用户名的登录记录缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n67:         return success();\n68:     }\n        源码摘要描述:SysOperlogController类用于清空操作日志，通过调用operLogService的cleanOperLog方法进行日志清除\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);\n        源码摘要描述:SysOperlogController类用于处理操作日志记录的相关请求，首先调用startPage方法以进行分页，然后通过调用operLogService的selectOperLogList方法获取操作日志列表，最后调用getDataTable方法返回数据表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n81:         return success();\n        源码摘要描述:SysUserOnlineController类通过redisCache实例删除指定tokenId的用户缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:43:     public TableDataInfo list(String ipaddr, String userName)\n44:     {\n45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");\n46:         List<SysUserOnline> userOnlineList = new ArrayList<SysUserOnline>();\n47:         for (String key : keys)\n48:         {\n49:             LoginUser user = redisCache.getCacheObject(key);\n50:             if (StringUtils.isNotEmpty(ipaddr) && StringUtils.isNotEmpty(userName))\n51:             {\n52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n53:             }\n54:             else if (StringUtils.isNotEmpty(ipaddr))\n55:             {\n56:                 userOnlineList.add(userOnlineService.selectOnlineByIpaddr(ipaddr, user));\n57:             }\n58:             else if (StringUtils.isNotEmpty(userName) && StringUtils.isNotNull(user.getUser()))\n59:             {\n60:                 userOnlineList.add(userOnlineService.selectOnlineByUserName(userName, user));\n61:             }\n62:             else\n63:             {\n64:                 userOnlineList.add(userOnlineService.loginUserToUserOnline(user));\n65:             }\n66:         }\n67:         Collections.reverse(userOnlineList);\n68:         userOnlineList.removeAll(Collections.singleton(null));\n69:         return getDataTable(userOnlineList);\n        源码摘要描述:SysUserOnlineController类通过redisCache实例访问Redis缓存，获取登录用户的相关信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n81:         return success();\n        源码摘要描述:SysUserOnlineController类通过redisCache实例删除指定tokenId的用户缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:userOnlineService\n        当前代码源码:52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n53:             }\n54:             else if (StringUtils.isNotEmpty(ipaddr))\n55:             {\n56:                 userOnlineList.add(userOnlineService.selectOnlineByIpaddr(ipaddr, user));\n57:             }\n58:             else if (StringUtils.isNotEmpty(userName) && StringUtils.isNotNull(user.getUser()))\n59:             {\n60:                 userOnlineList.add(userOnlineService.selectOnlineByUserName(userName, user));\n61:             }\n62:             else\n63:             {\n64:                 userOnlineList.add(userOnlineService.loginUserToUserOnline(user));\n        源码摘要描述:SysUserOnlineController类通过userOnlineService实例访问用户在线服务，进行用户在线信息的查询和处理\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n81:         return success();\n        源码摘要描述:SysUserOnlineController类通过redisCache实例删除指定tokenId的用户缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:getDataTable\n        当前代码源码:69:         return getDataTable(userOnlineList);\n70:     }\n        源码摘要描述:SysUserOnlineController类调用getDataTable方法生成返回的数据表格\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码: 33: {\n 34:     @Autowired\n 35:     private ISysConfigService configService;\n        源码摘要描述:SysConfigController类通过@Autowired注解注入ISysConfigService，提供参数配置相关服务\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:selectConfigList\n        当前代码源码: 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);\n        源码摘要描述:SysConfigController类在list方法获取参数配置列表，调用configService的selectConfigList方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:getDataTable\n        当前代码源码: 46:         return getDataTable(list);\n        源码摘要描述:SysConfigController类在list方法将参数配置列表转换为表格数据，调用getDataTable方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:selectConfigById\n        当前代码源码: 64:     public AjaxResult getInfo(@PathVariable Long configId)\n 65:     {\n 66:         return success(configService.selectConfigById(configId));\n        源码摘要描述:SysConfigController类在getInfo方法根据参数编号获取详细信息，调用configService的selectConfigById方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:selectConfigByKey\n        当前代码源码: 75:         return success(configService.selectConfigByKey(configKey));\n        源码摘要描述:SysConfigController类在getConfigKey方法根据参数键名查询参数值，调用configService的selectConfigByKey方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:checkConfigKeyUnique\n        当前代码源码: 86:         if (!configService.checkConfigKeyUnique(config))\n        源码摘要描述:SysConfigController类在add方法检查参数键名是否唯一，调用configService的checkConfigKeyUnique方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:insertConfig\n        当前代码源码: 91:         return toAjax(configService.insertConfig(config));\n        源码摘要描述:SysConfigController类在add方法新增参数配置，调用configService的insertConfig方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:updateConfig\n        当前代码源码:107:         return toAjax(configService.updateConfig(config));\n        源码摘要描述:SysConfigController类在edit方法修改参数配置，调用configService的updateConfig方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:deleteConfigByIds\n        当前代码源码:118:         configService.deleteConfigByIds(configIds);\n        源码摘要描述:SysConfigController类在remove方法删除参数配置，调用configService的deleteConfigByIds方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:resetConfigCache\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类在refreshCache方法刷新参数缓存，调用configService的resetConfigCache方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "参数数据");\n        源码摘要描述:SysConfigController类在export方法使用ExcelUtil导出参数数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "参数数据");\n        源码摘要描述:SysConfigController类在export方法使用ExcelUtil导出参数数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:deptService\n        当前代码源码:130:         return toAjax(deptService.deleteDeptById(deptId));\n        源码摘要描述:SysDeptController依赖ISysDeptService以删除部门\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:deptService\n        当前代码源码: 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n        源码摘要描述:SysDeptController依赖ISysDeptService以获取部门列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 35: public class SysDictDataController extends BaseController\n 36: {\n 37:     @Autowired\n 38:     private ISysDictDataService dictDataService;\n 39: \n 40:     @Autowired\n 41:     private ISysDictTypeService dictTypeService;\n 42: \n 43:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 44:     @GetMapping("/list")\n 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n 50:     }\n 51: \n 52:     @Log(title = "字典数据", businessType = BusinessType.EXPORT)\n 53:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 54:     @PostMapping("/export")\n 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n 61: \n 62:     /**\n 63:      * 查询字典数据详细\n 64:      */\n 65:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 66:     @GetMapping(value = "/{dictCode}")\n 67:     public AjaxResult getInfo(@PathVariable Long dictCode)\n 68:     {\n 69:         return success(dictDataService.selectDictDataById(dictCode));\n 70:     }\n 71: \n 72:     /**\n 73:      * 根据字典类型查询字典数据信息\n 74:      */\n 75:     @GetMapping(value = "/type/{dictType}")\n 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n 84:     }\n 85: \n 86:     /**\n 87:      * 新增字典类型\n 88:      */\n 89:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 90:     @Log(title = "字典数据", businessType = BusinessType.INSERT)\n 91:     @PostMapping\n 92:     public AjaxResult add(@Validated @RequestBody SysDictData dict)\n 93:     {\n 94:         dict.setCreateBy(getUsername());\n 95:         return toAjax(dictDataService.insertDictData(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 修改保存字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n102:     @Log(title = "字典数据", businessType = BusinessType.UPDATE)\n103:     @PutMapping\n104:     public AjaxResult edit(@Validated @RequestBody SysDictData dict)\n105:     {\n106:         dict.setUpdateBy(getUsername());\n107:         return toAjax(dictDataService.updateDictData(dict));\n108:     }\n109: \n110:     /**\n111:      * 删除字典类型\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n115:     @DeleteMapping("/{dictCodes}")\n116:     public AjaxResult remove(@PathVariable Long[] dictCodes)\n117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类通过调用dictDataService进行字典数据的查询和管理\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:deleteDictDataByIds\n        当前代码源码:118:         dictDataService.deleteDictDataByIds(dictCodes);\n        源码摘要描述:从dictDataService中执行根据IDs删除字典数据操作\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:selectDictDataList\n        当前代码源码: 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n        源码摘要描述:从dictDataService中获取字典数据列表\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 35: public class SysDictDataController extends BaseController\n 36: {\n 37:     @Autowired\n 38:     private ISysDictDataService dictDataService;\n 39: \n 40:     @Autowired\n 41:     private ISysDictTypeService dictTypeService;\n 42: \n 43:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 44:     @GetMapping("/list")\n 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n 50:     }\n 51: \n 52:     @Log(title = "字典数据", businessType = BusinessType.EXPORT)\n 53:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 54:     @PostMapping("/export")\n 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n 61: \n 62:     /**\n 63:      * 查询字典数据详细\n 64:      */\n 65:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 66:     @GetMapping(value = "/{dictCode}")\n 67:     public AjaxResult getInfo(@PathVariable Long dictCode)\n 68:     {\n 69:         return success(dictDataService.selectDictDataById(dictCode));\n 70:     }\n 71: \n 72:     /**\n 73:      * 根据字典类型查询字典数据信息\n 74:      */\n 75:     @GetMapping(value = "/type/{dictType}")\n 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n 84:     }\n 85: \n 86:     /**\n 87:      * 新增字典类型\n 88:      */\n 89:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 90:     @Log(title = "字典数据", businessType = BusinessType.INSERT)\n 91:     @PostMapping\n 92:     public AjaxResult add(@Validated @RequestBody SysDictData dict)\n 93:     {\n 94:         dict.setCreateBy(getUsername());\n 95:         return toAjax(dictDataService.insertDictData(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 修改保存字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n102:     @Log(title = "字典数据", businessType = BusinessType.UPDATE)\n103:     @PutMapping\n104:     public AjaxResult edit(@Validated @RequestBody SysDictData dict)\n105:     {\n106:         dict.setUpdateBy(getUsername());\n107:         return toAjax(dictDataService.updateDictData(dict));\n108:     }\n109: \n110:     /**\n111:      * 删除字典类型\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n115:     @DeleteMapping("/{dictCodes}")\n116:     public AjaxResult remove(@PathVariable Long[] dictCodes)\n117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类通过调用dictDataService进行字典数据的查询和管理\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:deleteDictDataByIds\n        当前代码源码:118:         dictDataService.deleteDictDataByIds(dictCodes);\n        源码摘要描述:从dictDataService中执行根据IDs删除字典数据操作\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:selectDictDataById\n        当前代码源码: 69:         return success(dictDataService.selectDictDataById(dictCode));\n        源码摘要描述:从dictDataService中根据ID获取字典数据详细\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 35: public class SysDictDataController extends BaseController\n 36: {\n 37:     @Autowired\n 38:     private ISysDictDataService dictDataService;\n 39: \n 40:     @Autowired\n 41:     private ISysDictTypeService dictTypeService;\n 42: \n 43:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 44:     @GetMapping("/list")\n 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n 50:     }\n 51: \n 52:     @Log(title = "字典数据", businessType = BusinessType.EXPORT)\n 53:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 54:     @PostMapping("/export")\n 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n 61: \n 62:     /**\n 63:      * 查询字典数据详细\n 64:      */\n 65:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 66:     @GetMapping(value = "/{dictCode}")\n 67:     public AjaxResult getInfo(@PathVariable Long dictCode)\n 68:     {\n 69:         return success(dictDataService.selectDictDataById(dictCode));\n 70:     }\n 71: \n 72:     /**\n 73:      * 根据字典类型查询字典数据信息\n 74:      */\n 75:     @GetMapping(value = "/type/{dictType}")\n 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n 84:     }\n 85: \n 86:     /**\n 87:      * 新增字典类型\n 88:      */\n 89:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 90:     @Log(title = "字典数据", businessType = BusinessType.INSERT)\n 91:     @PostMapping\n 92:     public AjaxResult add(@Validated @RequestBody SysDictData dict)\n 93:     {\n 94:         dict.setCreateBy(getUsername());\n 95:         return toAjax(dictDataService.insertDictData(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 修改保存字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n102:     @Log(title = "字典数据", businessType = BusinessType.UPDATE)\n103:     @PutMapping\n104:     public AjaxResult edit(@Validated @RequestBody SysDictData dict)\n105:     {\n106:         dict.setUpdateBy(getUsername());\n107:         return toAjax(dictDataService.updateDictData(dict));\n108:     }\n109: \n110:     /**\n111:      * 删除字典类型\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n115:     @DeleteMapping("/{dictCodes}")\n116:     public AjaxResult remove(@PathVariable Long[] dictCodes)\n117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类通过调用dictDataService进行字典数据的查询和管理\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:deleteDictDataByIds\n        当前代码源码:118:         dictDataService.deleteDictDataByIds(dictCodes);\n        源码摘要描述:从dictDataService中执行根据IDs删除字典数据操作\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:insertDictData\n        当前代码源码: 95:         return toAjax(dictDataService.insertDictData(dict));\n        源码摘要描述:调用dictDataService进行字典数据的插入\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 35: public class SysDictDataController extends BaseController\n 36: {\n 37:     @Autowired\n 38:     private ISysDictDataService dictDataService;\n 39: \n 40:     @Autowired\n 41:     private ISysDictTypeService dictTypeService;\n 42: \n 43:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 44:     @GetMapping("/list")\n 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n 50:     }\n 51: \n 52:     @Log(title = "字典数据", businessType = BusinessType.EXPORT)\n 53:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 54:     @PostMapping("/export")\n 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n 61: \n 62:     /**\n 63:      * 查询字典数据详细\n 64:      */\n 65:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 66:     @GetMapping(value = "/{dictCode}")\n 67:     public AjaxResult getInfo(@PathVariable Long dictCode)\n 68:     {\n 69:         return success(dictDataService.selectDictDataById(dictCode));\n 70:     }\n 71: \n 72:     /**\n 73:      * 根据字典类型查询字典数据信息\n 74:      */\n 75:     @GetMapping(value = "/type/{dictType}")\n 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n 84:     }\n 85: \n 86:     /**\n 87:      * 新增字典类型\n 88:      */\n 89:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 90:     @Log(title = "字典数据", businessType = BusinessType.INSERT)\n 91:     @PostMapping\n 92:     public AjaxResult add(@Validated @RequestBody SysDictData dict)\n 93:     {\n 94:         dict.setCreateBy(getUsername());\n 95:         return toAjax(dictDataService.insertDictData(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 修改保存字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n102:     @Log(title = "字典数据", businessType = BusinessType.UPDATE)\n103:     @PutMapping\n104:     public AjaxResult edit(@Validated @RequestBody SysDictData dict)\n105:     {\n106:         dict.setUpdateBy(getUsername());\n107:         return toAjax(dictDataService.updateDictData(dict));\n108:     }\n109: \n110:     /**\n111:      * 删除字典类型\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n115:     @DeleteMapping("/{dictCodes}")\n116:     public AjaxResult remove(@PathVariable Long[] dictCodes)\n117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类通过调用dictDataService进行字典数据的查询和管理\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:deleteDictDataByIds\n        当前代码源码:118:         dictDataService.deleteDictDataByIds(dictCodes);\n        源码摘要描述:从dictDataService中执行根据IDs删除字典数据操作\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:updateDictData\n        当前代码源码:107:         return toAjax(dictDataService.updateDictData(dict));\n        源码摘要描述:调用dictDataService进行字典数据的更新\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 35: public class SysDictDataController extends BaseController\n 36: {\n 37:     @Autowired\n 38:     private ISysDictDataService dictDataService;\n 39: \n 40:     @Autowired\n 41:     private ISysDictTypeService dictTypeService;\n 42: \n 43:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 44:     @GetMapping("/list")\n 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n 50:     }\n 51: \n 52:     @Log(title = "字典数据", businessType = BusinessType.EXPORT)\n 53:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 54:     @PostMapping("/export")\n 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n 61: \n 62:     /**\n 63:      * 查询字典数据详细\n 64:      */\n 65:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 66:     @GetMapping(value = "/{dictCode}")\n 67:     public AjaxResult getInfo(@PathVariable Long dictCode)\n 68:     {\n 69:         return success(dictDataService.selectDictDataById(dictCode));\n 70:     }\n 71: \n 72:     /**\n 73:      * 根据字典类型查询字典数据信息\n 74:      */\n 75:     @GetMapping(value = "/type/{dictType}")\n 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n 84:     }\n 85: \n 86:     /**\n 87:      * 新增字典类型\n 88:      */\n 89:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 90:     @Log(title = "字典数据", businessType = BusinessType.INSERT)\n 91:     @PostMapping\n 92:     public AjaxResult add(@Validated @RequestBody SysDictData dict)\n 93:     {\n 94:         dict.setCreateBy(getUsername());\n 95:         return toAjax(dictDataService.insertDictData(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 修改保存字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n102:     @Log(title = "字典数据", businessType = BusinessType.UPDATE)\n103:     @PutMapping\n104:     public AjaxResult edit(@Validated @RequestBody SysDictData dict)\n105:     {\n106:         dict.setUpdateBy(getUsername());\n107:         return toAjax(dictDataService.updateDictData(dict));\n108:     }\n109: \n110:     /**\n111:      * 删除字典类型\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n115:     @DeleteMapping("/{dictCodes}")\n116:     public AjaxResult remove(@PathVariable Long[] dictCodes)\n117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类通过调用dictDataService进行字典数据的查询和管理\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:deleteDictDataByIds\n        当前代码源码:118:         dictDataService.deleteDictDataByIds(dictCodes);\n        源码摘要描述:从dictDataService中执行根据IDs删除字典数据操作\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictDataService\n        被调用代码单元名称:deleteDictDataByIds\n        当前代码源码:118:         dictDataService.deleteDictDataByIds(dictCodes);\n        源码摘要描述:从dictDataService中执行根据IDs删除字典数据操作\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictTypeService\n        被调用代码单元名称:selectDictDataByType\n        当前代码源码: 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n        源码摘要描述:从dictTypeService中获取特定字典类型的数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:dictTypeService\n        被调用代码单元名称:selectDictDataByType\n        当前代码源码: 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n        源码摘要描述:从dictTypeService中获取特定字典类型的数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:getUsername\n        被调用代码单元名称:setUpdateBy\n        当前代码源码:106:         dict.setUpdateBy(getUsername());\n        源码摘要描述:获取当前用户名并设置到dict对象中\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:getUsername\n        被调用代码单元名称:setCreateBy\n        当前代码源码: 94:         dict.setCreateBy(getUsername());\n        源码摘要描述:获取当前用户名并设置到dict对象中\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:getUsername\n        被调用代码单元名称:setUpdateBy\n        当前代码源码:106:         dict.setUpdateBy(getUsername());\n        源码摘要描述:获取当前用户名并设置到dict对象中\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:getUsername\n        被调用代码单元名称:setUpdateBy\n        当前代码源码:106:         dict.setUpdateBy(getUsername());\n        源码摘要描述:获取当前用户名并设置到dict对象中\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n        源码摘要描述:SysDictTypeController类中的dictTypeService属性通过依赖注入实现字典类型服务的调用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeList\n        当前代码源码: 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n        源码摘要描述:SysDictTypeController类中的list方法调用selectDictTypeList实现获取字典类型列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeById\n        当前代码源码: 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n        源码摘要描述:SysDictTypeController类中的getInfo方法调用selectDictTypeById实现获取字典类型详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:checkDictTypeUnique\n        当前代码源码: 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n        源码摘要描述:SysDictTypeController类中的add方法调用checkDictTypeUnique实现检查字典类型唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:insertDictType\n        当前代码源码: 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n        源码摘要描述:SysDictTypeController类中的add方法调用insertDictType实现添加字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:updateDictType\n        当前代码源码: 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n        源码摘要描述:SysDictTypeController类中的edit方法调用updateDictType实现修改字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:deleteDictTypeByIds\n        当前代码源码:101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n        源码摘要描述:SysDictTypeController类中的remove方法调用deleteDictTypeByIds实现删除字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:resetDictCache\n        当前代码源码:113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n        源码摘要描述:SysDictTypeController类中的refreshCache方法调用resetDictCache实现刷新字典缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类中的optionselect方法调用selectDictTypeAll实现获取所有字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SysIndexController类中的ruoyiConfig字段用于获取系统基础配置的名称和版本\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:StringUtils\n        当前代码源码:25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类的index方法返回格式化的欢迎信息，使用StringUtils格式化字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SysIndexController类中的ruoyiConfig字段用于获取系统基础配置的名称和版本\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:RuoYiConfig\n        被调用代码单元名称:getVersion\n        当前代码源码:27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:RuoYiConfig类的getVersion方法用于获取系统版本\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:RuoYiConfig\n        被调用代码单元名称:getName\n        当前代码源码:27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:RuoYiConfig类的getName方法用于获取系统名称\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SysIndexController类中的ruoyiConfig字段用于获取系统基础配置的名称和版本\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:RuoYiConfig\n        被调用代码单元名称:getVersion\n        当前代码源码:27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:RuoYiConfig类的getVersion方法用于获取系统版本\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:RuoYiConfig\n        被调用代码单元名称:getVersion\n        当前代码源码:27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:RuoYiConfig类的getVersion方法用于获取系统版本\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:menuService\n        当前代码源码:94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController类调用menuService获取当前用户的菜单树\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:loginService\n        当前代码源码:48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;\n        源码摘要描述:SysLoginController类定义了登录方法，调用loginService进行用户登录逻辑\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:menuService\n        当前代码源码:94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController类调用menuService获取当前用户的菜单树\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SecurityUtils\n        当前代码源码:67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n        源码摘要描述:SysLoginController类通过SecurityUtils获取当前登录用户的信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:menuService\n        当前代码源码:94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController类调用menuService获取当前用户的菜单树\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:permissionService\n        当前代码源码:70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);\n        源码摘要描述:SysLoginController类调用permissionService获取用户的角色和权限集合\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:menuService\n        当前代码源码:94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController类调用menuService获取当前用户的菜单树\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:tokenService\n        当前代码源码:76:             tokenService.refreshToken(loginUser);\n        源码摘要描述:SysLoginController类在更新用户权限后，通过tokenService刷新用户的令牌\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:menuService\n        当前代码源码:94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController类调用menuService获取当前用户的菜单树\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:menuService\n        当前代码源码:94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController类调用menuService获取当前用户的菜单树\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:140:         return toAjax(menuService.deleteMenuById(menuId));\n        源码摘要描述:SysMenuController类通过menuService调用deleteMenuById方法删除菜单\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码: 41:     public AjaxResult list(SysMenu menu)\n 42:     {\n 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);\n        源码摘要描述:SysMenuController类通过menuService调用selectMenuList方法获取菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }\n        源码摘要描述:SysNoticeController类删除通知公告\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);\n        源码摘要描述:SysNoticeController类通过noticeService获取通知公告列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService\n        当前代码源码: 34:     @Autowired\n 35:     private ISysPostService postService;\n        源码摘要描述:SysPostController类中的postService属性被@Autowired注入，用于操作岗位数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:startPage\n        当前代码源码: 44:         startPage();\n        源码摘要描述:list方法调用startPage开始分页操作\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostList\n        当前代码源码: 45:         List<SysPost> list = postService.selectPostList(post);\n 46:         return getDataTable(list);\n        源码摘要描述:list方法调用postService的selectPostList获取岗位列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:getDataTable\n        当前代码源码: 46:         return getDataTable(list);\n        源码摘要描述:list方法调用getDataTable将返回的岗位列表格式化为TableDataInfo\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:ExcelUtil.exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:export方法调用ExcelUtil的exportExcel导出岗位数据至Excel\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostById\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:getInfo方法调用postService的selectPostById获取指定岗位的信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:getInfo方法调用success方法返回成功结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostNameUnique\n        当前代码源码: 77:         if (!postService.checkPostNameUnique(post))\n        源码摘要描述:add方法调用postService的checkPostNameUnique检查岗位名称是否唯一\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostCodeUnique\n        当前代码源码: 81:         else if (!postService.checkPostCodeUnique(post))\n        源码摘要描述:add方法调用postService的checkPostCodeUnique检查岗位编码是否唯一\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:getUsername\n        当前代码源码: 85:         post.setCreateBy(getUsername());\n        源码摘要描述:add方法调用getUsername获取当前用户的用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.insertPost\n        当前代码源码: 86:         return toAjax(postService.insertPost(post));\n        源码摘要描述:add方法调用postService的insertPost将岗位信息插入到数据库\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:error\n        当前代码源码: 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:add方法在岗位名称已存在时调用error返回错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.updatePost\n        当前代码源码:106:         return toAjax(postService.updatePost(post));\n        源码摘要描述:edit方法调用postService的updatePost更新岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.deletePostByIds\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:remove方法调用postService的deletePostByIds删除指定岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:toAjax\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:remove方法调用toAjax将删除操作的结果转为AjaxResult\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:optionselect方法调用success返回岗位选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostAll\n        当前代码源码:126:         List<SysPost> posts = postService.selectPostAll();\n        源码摘要描述:optionselect方法调用postService的selectPostAll获取所有岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n        源码摘要描述:SysProfileController类中的profile方法获取当前用户的信息并返回AjaxResult对象\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 63:         LoginUser loginUser = getLoginUser();\n        源码摘要描述:SysProfileController类中的updateProfile方法获取当前登录用户\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:SysUser\n        当前代码源码: 64:         SysUser currentUser = loginUser.getUser();\n        源码摘要描述:SysProfileController类中的updateProfile方法获取当前用户的SysUser对象\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n        源码摘要描述:SysProfileController类中的updateProfile方法检查电话号码是否不为空\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n        源码摘要描述:SysProfileController类中的updateProfile方法调用userService检查手机号码唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的updateProfile方法调用tokenService更新登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:SecurityUtils\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n        源码摘要描述:SysProfileController类中的updatePwd方法检查旧密码的正确性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:userService\n        当前代码源码:107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n        源码摘要描述:SysProfileController类中的updatePwd方法调用userService重置用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:tokenService\n        当前代码源码:134:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysProfileController类中的avatar方法调用tokenService更新登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:FileUploadUtils\n        当前代码源码:127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n        源码摘要描述:SysProfileController类中的avatar方法上传用户头像并获取其路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类中的register方法调用registerService的register方法实现用户注册\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:configService\n        当前代码源码:28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类中的register方法调用configService的selectConfigByKey方法以检查注册功能是否开启\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类中的register方法调用registerService的register方法实现用户注册\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类中的register方法调用registerService的register方法实现用户注册\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:empty\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类中的register方法调用StringUtils的isEmpty方法以判断msg是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:empty\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类中的register方法调用StringUtils的isEmpty方法以判断msg是否为空\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:255:     public AjaxResult deptTree(@PathVariable("roleId") Long roleId)\n256:     {\n257:         AjaxResult ajax = AjaxResult.success();\n258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n260:         return ajax;\n        源码摘要描述:SysRoleController类获取对应角色部门树列表，调用部门服务获取部门列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ISysRoleService\n        当前代码源码: 58:     @PreAuthorize("@ss.hasPermi(\'system:role:list\')")\n 59:     @GetMapping("/list")\n 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);\n        源码摘要描述:SysRoleController类提供角色管理相关的接口，调用角色服务接口以获取角色列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:255:     public AjaxResult deptTree(@PathVariable("roleId") Long roleId)\n256:     {\n257:         AjaxResult ajax = AjaxResult.success();\n258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n260:         return ajax;\n        源码摘要描述:SysRoleController类获取对应角色部门树列表，调用部门服务获取部门列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");\n        源码摘要描述:SysRoleController类导出角色信息，利用ExcelUtil将角色数据写入Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:255:     public AjaxResult deptTree(@PathVariable("roleId") Long roleId)\n256:     {\n257:         AjaxResult ajax = AjaxResult.success();\n258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n260:         return ajax;\n        源码摘要描述:SysRoleController类获取对应角色部门树列表，调用部门服务获取部门列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ISysUserService\n        当前代码源码:198:     {\n199:         startPage();\n200:         List<SysUser> list = userService.selectAllocatedList(user);\n201:         return getDataTable(list);\n        源码摘要描述:SysRoleController类查询已分配用户角色列表，调用用户服务获取分配的用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:255:     public AjaxResult deptTree(@PathVariable("roleId") Long roleId)\n256:     {\n257:         AjaxResult ajax = AjaxResult.success();\n258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n260:         return ajax;\n        源码摘要描述:SysRoleController类获取对应角色部门树列表，调用部门服务获取部门列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:255:     public AjaxResult deptTree(@PathVariable("roleId") Long roleId)\n256:     {\n257:         AjaxResult ajax = AjaxResult.success();\n258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n260:         return ajax;\n        源码摘要描述:SysRoleController类获取对应角色部门树列表，调用部门服务获取部门列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:userService\n        当前代码源码: 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n        源码摘要描述:SysUserController类中的list方法通过userService调用selectUserList方法获取用户列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 70:     @PostMapping("/export")\n 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");\n        源码摘要描述:SysUserController类中的export方法通过ExcelUtil导出用户数据到Excel\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:125:     public AjaxResult add(@Validated @RequestBody SysUser user)\n126:     {\n127:         deptService.checkDeptDataScope(user.getDeptId());\n        源码摘要描述:SysUserController类中的add方法调用deptService验证用户的部门数据范围\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:roleService\n        当前代码源码:128:         roleService.checkRoleDataScope(user.getRoleIds());\n129:         if (!userService.checkUserNameUnique(user))\n        源码摘要描述:SysUserController类中的add方法调用roleService验证用户的角色数据范围\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:111:             return R.fail("用户不存在");\n112:         }\n        源码摘要描述:TestController类的delete方法处理用户不存在的情况\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.ok\n        当前代码源码: 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);\n 47:     }\n        源码摘要描述:TestController类的userList方法返回用户列表的响应\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:111:             return R.fail("用户不存在");\n112:         }\n        源码摘要描述:TestController类的delete方法处理用户不存在的情况\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码: 60:             return R.fail("用户不存在");\n 61:         }\n        源码摘要描述:TestController类的getUser方法处理用户不存在的情况\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:getUserId\n        当前代码源码:144:     public Integer getUserId()\n145:     {\n146:         return userId;\n        源码摘要描述:UserEntity类获取用户ID的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setUserId\n        当前代码源码:149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }\n        源码摘要描述:UserEntity类设置用户ID的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:getUsername\n        当前代码源码:154:     public String getUsername()\n155:     {\n156:         return username;\n        源码摘要描述:UserEntity类获取用户名的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setUsername\n        当前代码源码:159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }\n        源码摘要描述:UserEntity类设置用户名的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:getPassword\n        当前代码源码:164:     public String getPassword()\n165:     {\n166:         return password;\n        源码摘要描述:UserEntity类获取用户密码的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setPassword\n        当前代码源码:169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }\n        源码摘要描述:UserEntity类设置用户密码的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:getMobile\n        当前代码源码:175:     {\n176:         return mobile;\n177:     }\n        源码摘要描述:UserEntity类获取用户手机的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类设置用户手机的函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n        源码摘要描述:SwaggerConfig类中createRestApi方法创建API文档的核心配置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SwaggerConfig类中ruoyiConfig成员变量用于注入系统基础配置\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n        源码摘要描述:SwaggerConfig类中createRestApi方法创建API文档的核心配置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig调用securityContexts方法配置API的安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:Contact\n        当前代码源码:120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n        源码摘要描述:ApiInfo类中contact方法用于设置API文档的联系信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:Contact\n        当前代码源码:120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n        源码摘要描述:ApiInfo类中contact方法用于设置API文档的联系信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n        源码摘要描述:SwaggerConfig类中createRestApi方法创建API文档的核心配置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig调用securityContexts方法配置API的安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:RequestHandlerSelectors\n        当前代码源码: 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n        源码摘要描述:Docket类中的select方法使用RequestHandlerSelectors来扫描API接口\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n        源码摘要描述:SwaggerConfig类中createRestApi方法创建API文档的核心配置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig调用securityContexts方法配置API的安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:PathSelectors\n        当前代码源码: 63:                 .paths(PathSelectors.any())\n        源码摘要描述:Docket类中使用PathSelectors配置接口的路径选择\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n        源码摘要描述:SwaggerConfig类中createRestApi方法创建API文档的核心配置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig调用securityContexts方法配置API的安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securitySchemes\n        当前代码源码: 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig调用securitySchemes方法配置API的安全模式\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n        源码摘要描述:SwaggerConfig类中createRestApi方法创建API文档的核心配置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig调用securityContexts方法配置API的安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig调用securityContexts方法配置API的安全上下文\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfoBuilder\n        被调用代码单元名称:ApiInfo\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n        源码摘要描述:使用ApiInfoBuilder构建ApiInfo实例\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:Contact\n        当前代码源码:120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n        源码摘要描述:ApiInfo类中contact方法用于设置API文档的联系信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:Contact\n        当前代码源码:120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n        源码摘要描述:ApiInfo类中contact方法用于设置API文档的联系信息\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:SecurityReference\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n 90:                         .operationSelector(o -> o.requestMappingPattern().matches("/.*"))\n        源码摘要描述:SecurityContext使用SecurityReference配置安全上下文\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:SecurityReference关联AuthorizationScope定义的授权范围\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:SecurityReference关联AuthorizationScope定义的授权范围\n        </路径_2>']
2025-02-01T14:35:31.500658+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无
  ▶ 位置：N/A
  ▶ 代码特征：N/A
  ▶ 攻击向量：N/A
  ▶ 修复建议：N/A

// 文件路径2
■ 漏洞类型：无
  ▶ 位置：N/A
  ▶ 代码特征：N/A
  ▶ 攻击向量：N/A
  ▶ 修复建议：N/A

<审计通过>
2025-02-01T14:35:31.500658+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：依赖版本过旧（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>   
  ▶ 攻击向量：maven-war-plugin版本3.1.0存在已知漏洞，可能允许远程代码执行
  ▶ 修复建议：升级maven-war-plugin至最新稳定版本

// 文件路径2
■ 漏洞类型：依赖版本过旧（中危）
  ▶ 位置：L23
  ▶ 代码特征：
    <artifactId>spring-boot-devtools</artifactId>   
  ▶ 攻击向量：spring-boot-devtools可能暴露开发环境信息，攻击者可利用信息进行攻击
  ▶ 修复建议：在生产环境中避免使用devtools，或将其标记为optional并确认不在最终构建中
</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// 文件路径1
<审计通过>

// 文件路径2
<审计通过>
</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用不安全的依赖（中危）
  ▶ 位置：L36
  ▶ 代码特征：
    <artifactId>swagger-models</artifactId>
    <version>1.6.2</version>
  ▶ 攻击向量：使用的swagger-models版本可能包含已知漏洞，攻击者可利用该漏洞进行信息泄露或其他攻击
  ▶ 修复建议：升级到swagger-models的最新安全版本

■ 漏洞类型：不安全的构建配置（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：在构建中禁用“failOnMissingWebXml”可能导致安全问题或应用部署不完整
  ▶ 修复建议：将此配置改为true以确保Web应用正确构建

</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：过时依赖（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>  // maven-war-plugin版本
  ▶ 潜在影响：使用过时的插件版本可能存在安全漏洞和已知缺陷，可能导致构建不安全的WAR文件
  ▶ 修复建议：更新maven-war-plugin至最新稳定版本

■ 漏洞类型：过时依赖（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    <artifactId>mysql-connector-java</artifactId>  // mysql连接器版本未指定
  ▶ 潜在影响：使用未指定版本的MySQL连接器可能引入已知的安全漏洞
  ▶ 修复建议：指定mysql-connector-java的最新稳定版本
</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：无
  ▶ 备注：pom.xml文件通过配置maven-war-plugin与相关依赖，未发现明显安全漏洞。
</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
<审计通过>
</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// 文件路径1
<审计通过>
</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：使用过时的依赖（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>  // maven-war-plugin版本
  ▶ 攻击向量：该版本可能存在已知漏洞，如未及时更新可能受到安全攻击
  ▶ 修复建议：更新maven-war-plugin至最新稳定版本以获取安全修复和新特性

■ 漏洞类型：使用过时的依赖（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    <version>2.5.15</version>  // spring-boot-maven-plugin版本
  ▶ 攻击向量：该版本可能存在已知漏洞，如未及时更新可能受到安全攻击
  ▶ 修复建议：更新spring-boot-maven-plugin至最新稳定版本以获取安全修复和新特性
</审计报告>
2025-02-01T14:35:31.501671+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用旧版插件（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用已知漏洞的maven-war-plugin版本可能导致攻击者利用已修复的安全漏洞
  ▶ 修复建议：升级到最新版本的maven-war-plugin，以修复已知漏洞并增强安全性

</审计报告>
2025-02-01T14:35:36.370314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：如果log.path泄露，攻击者可以利用该信息进行日志文件的访问或篡改
  ▶ 修复建议：使用安全机制以确保log.path不泄露，或进行访问控制

■ 漏洞类型：日志信息未脱敏（中危）
  ▶ 位置：L70
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：如果日志记录用户敏感信息，攻击者可以从日志中获取用户隐私数据
  ▶ 修复建议：在日志记录时过滤敏感信息
</审计报告>
2025-02-01T14:35:36.370314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L17-L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：如果${log.path}未正确定义，可能泄露文件系统结构信息，攻击者可利用此信息进行进一步攻击
  ▶ 修复建议：确保${log.path}设定为安全的位置，不应暴露于用户可见

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L62-L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：同上，文件路径如果未妥善处理，可能泄露有关系统的信息以及用户行为
  ▶ 修复建议：同上，增强日志文件路径的安全性以避免泄露敏感信息
</审计报告>
2025-02-01T14:35:36.370314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径注入（中危）
  ▶ 位置：L62, L39
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
    <file>${log.path}/sys-error.log</file>
  ▶ 攻击向量：攻击者可以通过控制${log.path}的值，来注入恶意文件路径，导致日志文件被写入到未授权的位置。
  ▶ 修复建议：应确保${log.path}变量的值经过严格验证，避免用户操控输出路径。

<审计通过>  
</审计报告>
2025-02-01T14:35:36.370314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：${log.path}变量未加密，攻击者可通过路径猜测获取日志文件
  ▶ 修复建议：确保${log.path}为受限路径并进行访问控制

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>
  ▶ 攻击向量：日志文件命名规则可能暴露系统结构信息
  ▶ 修复建议：使用更模糊的命名模式以避免暴露敏感信息
</审计报告>
2025-02-01T14:35:36.370314+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:35:36.370314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
<审计通过>
<审计通过>
</审计报告>
2025-02-01T14:35:36.372351+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：如果log.path的配置被恶意用户控制，可能会泄露日志文件路径和内容
  ▶ 修复建议：确保log.path使用受信任的绝对路径，不可由用户输入控制

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>
  ▶ 攻击向量：同样，如果log.path未妥善配置，可能会导致恶意用户获取历史日志文件
  ▶ 修复建议：限制log.path的访问权限并验证路径的安全性
</审计报告>
2025-02-01T14:35:36.372351+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志泄露（中危）
  ▶ 位置：L11
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：如果log.pattern中包含敏感信息，可能导致在控制台输出中泄露这些信息
  ▶ 修复建议：确保log.pattern不暴露敏感数据或采用环境变量进行配置

<审计通过>标记
</审计报告>
2025-02-01T14:35:36.372351+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径信息泄露（中危）
  ▶ 位置：L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：如果攻击者能够访问日志文件路径，可能会获取敏感信息或进行探索攻击
  ▶ 修复建议：使用绝对路径或者限制日志文件的访问权限

■ 漏洞类型：未处理的日志记录安全性（中危）
  ▶ 位置：L20-L23
  ▶ 代码特征：
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
    <maxHistory>60</maxHistory>
  ▶ 攻击向量：未对过期日志文件做适当的清理，可能导致敏感信息的滞留在未删除的日志中
  ▶ 修复建议：定期审查和清理过期日志文件，或者设置适当的日志保留策略
</审计报告>
2025-02-01T14:35:36.372351+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\mybatis\mybatis-config.xml
■ 漏洞类型：缓存配置风险（中危）
  ▶ 位置：L9
  ▶ 代码特征：
    <setting name="cacheEnabled" value="true" />
  ▶ 攻击向量：如果未妥善处理缓存，可能导致缓存中的敏感数据被未授权读取
  ▶ 修复建议：在业务逻辑中谨慎使用缓存并确保缓存数据的安全性，避免暴露敏感信息

■ 漏洞类型：使用生成主键的风险（中危）
  ▶ 位置：L11
  ▶ 代码特征：
    <setting name="useGeneratedKeys" value="true" />
  ▶ 攻击向量：生成主键的过程中可能引入非预期的主键值，导致数据完整性问题
  ▶ 修复建议：应在插入操作前对主键的生成逻辑进行严格控制，确保安全与完整性
</审计报告>
2025-02-01T14:35:40.798320+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:35:40.798320+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:35:40.798320+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：未验证的输入（信息）
  ▶ 位置：L46-L54
  ▶ 代码特征：
    if (!captchaEnabled)
    {
        return ajax;
    }
  ▶ 攻击向量：配置服务中返回的captchaEnabled值未经过验证，可能导致安全配置不当。
  ▶ 修复建议：在使用configService返回的值之前，确保其有效性和来源可靠性。

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L50
  ▶ 代码特征：
    ajax.put("captchaEnabled", captchaEnabled);
  ▶ 攻击向量：可能暴露系统配置给恶意用户，特别是在开启调试模式时。
  ▶ 修复建议：避免将敏感配置信息直接返回给客户端，考虑使用更安全的方式处理。

</审计报告>
2025-02-01T14:35:40.799318+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：未处理的异常（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    ImageIO.write(image, "jpg", os);
  ▶ 攻击向量：当image为null或os不可写时，可能导致系统崩溃或不当的错误信息暴露
  ▶ 修复建议：添加异常处理逻辑，确保安全输出错误信息并避免系统崩溃

■ 漏洞类型：UUID生成可预测性（中危）
  ▶ 位置：L57
  ▶ 代码特征：
    String uuid = IdUtils.simpleUUID();
  ▶ 攻击向量：若IdUtils.simpleUUID()存在弱随机性，攻击者可以推测出UUID值，导致可能的验证码重复使用
  ▶ 修复建议：使用强随机性的UUID生成方法，以确保唯一性和不可预测性
</审计报告>
2025-02-01T14:35:40.799318+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L64
  ▶ 代码特征：
    String captchaType = RuoYiConfig.getCaptchaType();
  ▶ 攻击向量：如果RuoYiConfig.getCaptchaType()返回的值可以被攻击者预测或控制，可能导致系统对验证码的处理方式被绕过
  ▶ 修复建议：确保返回的验证码类型为安全值，并在配置文件中不公开敏感类型

■ 漏洞类型：不安全的文件操作（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    ImageIO.write(image, "jpg", os);
  ▶ 攻击向量：如果os未经过验证，攻击者可以可能影响文件写入操作，导致任意文件创建与覆盖
  ▶ 修复建议：确保输出流os是经过验证的，限制文件输出目录
</审计报告>
2025-02-01T14:35:40.799318+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：缺乏验证码随机性（中危）
  ▶ 位置：L67-L70
  ▶ 代码特征：
    String capText = captchaProducerMath.createText();
    capStr = capText.substring(0, capText.lastIndexOf("@"));
    code = capText.substring(capText.lastIndexOf("@") + 1);
    image = captchaProducerMath.createImage(capStr);
  ▶ 攻击向量：攻击者可利用验证码生成算法的可预测性，自动化攻击系统而绕过验证码验证
  ▶ 修复建议：引入更安全的随机生成策略，增加验证码的复杂性和不可预测性

■ 漏洞类型：未对用户输入的输出流进行必要的安全检查（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    ImageIO.write(image, "jpg", os);
  ▶ 攻击向量：由于未进行验证，攻击者可能利用伪造的数据向输出流写入恶意内容
  ▶ 修复建议：对输出流内容进行有效性和安全性检查，确保合规的数据可写入
</审计报告>
2025-02-01T14:35:40.803379+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L74-L75
  ▶ 代码特征：
    capStr = code = captchaProducer.createText();
    image = captchaProducer.createImage(capStr);
  ▶ 攻击向量：若captchaProducer未对生成的结果进行过滤，恶意用户可通过请求验证码接口反向推测系统默认生成的字符模式或推测用户输入信息。
  ▶ 修复建议：确保生成的验证码包含不可预测的随机字符，并添加有效的防猜测机制。

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    ImageIO.write(image, "jpg", os);
  ▶ 攻击向量：若image为空或os无法写入，则可能导致程序异常崩溃而未进行适当处理。
  ▶ 修复建议：对ImageIO.write前进行有效性检查，并添加异常处理逻辑。
</审计报告>
2025-02-01T14:35:40.803379+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：缓存时间控制（中危）
  ▶ 位置：L78
  ▶ 代码特征：
    redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);
  ▶ 攻击向量：攻击者可能利用验证码缓存的过期时间攻击接口，访问控制不彻底。
  ▶ 修复建议：在设置验证码的过期时间时，确保根据业务场景合理化设置，避免过长过期时间。

■ 漏洞类型：潜在的XSS（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    ImageIO.write(image, "jpg", os);
  ▶ 攻击向量：如果image被用户输入的图形污染，可能导致反射性XSS。
  ▶ 修复建议：对图像生成过程中的用户输入进行严格的验证和消毒，确保不会引入恶意内容。

</审计报告>
2025-02-01T14:35:40.803379+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：未经过滤的输出（高危）
  ▶ 位置：L83
  ▶ 代码特征：
    ImageIO.write(image, "jpg", os);
  ▶ 潜在影响：如果输入的image对象不受信任，可能会导致返回的图片中注入恶意数据，危害用户终端
  ▶ 修复建议：确保image对象在写入前经过有效的输入验证和过滤处理

<审计通过>
2025-02-01T14:35:40.803379+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：目录遍历（高危）
  ▶ 位置：L151
  ▶ 代码特征：
    String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);
  ▶ 攻击向量：构造资源路径为'../etc/passwd'，可访问服务器文件系统中的敏感文件
  ▶ 修复建议：使用白名单或正则验证resource，确保不允许任何目录穿越字符
  
■ 漏洞类型：目录遍历（高危）
  ▶ 位置：L56
  ▶ 代码特征：
    String filePath = RuoYiConfig.getDownloadPath() + fileName;
  ▶ 攻击向量：构造fileName为'../etc/passwd'，可以下载服务器上敏感文件
  ▶ 修复建议：同上，进行路径验证，确保fileName不包含不安全字符
</审计报告>
2025-02-01T14:35:45.628990+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L145, L51
  ▶ 代码特征：
    if (!FileUtils.checkAllowDownload(resource))
    if (!FileUtils.checkAllowDownload(fileName))
  ▶ 攻击向量：构造resource或fileName为"../confidential.txt"通过未验证的用户输入下载任意文件
  ▶ 潜在影响：攻击者可获取服务器上任意文件内容，导致敏感信息曝光
  ▶ 修复建议：增强checkAllowDownload方法，增加对路径的严格校验，防止路径遍历漏洞

■ 漏洞类型：资源未关闭（低危）
  ▶ 位置：L156, L60
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
    FileUtils.writeBytes(filePath, response.getOutputStream());
  ▶ 策略：未显式关闭输出流可能导致资源泄露
  ▶ 修复建议：使用try-with-resources语句确保输出流被关闭
</审计报告>
2025-02-01T14:35:45.628990+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L151, L56
  ▶ 代码特征：
    String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);
    String filePath = RuoYiConfig.getDownloadPath() + fileName;
  ▶ 攻击向量：构造resource或fileName为'../../etc/passwd'，可访问系统任意文件
  ▶ 修复建议：对resource和fileName进行合法性校验，限制其只能在预期的目录下。

■ 漏洞类型：未处理的异常（中危）
  ▶ 位置：L146, L53
  ▶ 代码特征：
    throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));
    throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));
  ▶ 攻击向量：恶意用户可能通过构造特定的输入导致异常被抛出，从而潜在的暴露系统实现细节
  ▶ 修复建议：使用自定义的异常类进行处理，并隐藏具体异常信息。

</审计报告>
2025-02-01T14:35:45.628990+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L151
  ▶ 代码特征：
    String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);
  ▶ 攻击向量：构造resource='../../etc/passwd'可下载敏感文件
  ▶ 修复建议：验证resource参数，限制可下载文件的路径

■ 漏洞类型：不安全的文件上传（高危）
  ▶ 位置：L83
  ▶ 代码特征：
    String fileName = FileUploadUtils.upload(filePath, file);
  ▶ 攻击向量：上传恶意文件如webshell，可能导致服务器被攻击
  ▶ 修复建议：在上传时检查文件类型，并对文件进行适当的处理

</审计报告>
2025-02-01T14:35:45.628990+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L151
  ▶ 代码特征：
    String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);
  ▶ 攻击向量：构造resource参数为"../../../../etc/passwd"获取系统文件
  ▶ 修复建议：在FileUtils.checkAllowDownload中严格检查resource路径并禁止路径遍历

// 文件路径2
■ 漏洞类型：未验证文件上传（高危）
  ▶ 位置：L83
  ▶ 代码特征：
    String fileName = FileUploadUtils.upload(filePath, file);
  ▶ 攻击向量：上传恶意文件（如PHP、JSP等可执行文件）导致远程代码执行
  ▶ 修复建议：在上传文件时进行文件类型检查，限制可上传的文件类型

</审计报告>
2025-02-01T14:35:45.629992+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：文件路径遍历（高危）
  ▶ 位置：L151
  ▶ 代码特征：
    String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);
  ▶ 攻击向量：构造resource为"../../etc/passwd"，可以绕过文件路径限制，下载任意文件
  ▶ 修复建议：验证resource参数，确保其不包含路径遍历字符（如"../"）

■ 漏洞类型：未验证的文件上传（高危）
  ▶ 位置：L83
  ▶ 代码特征：
    String fileName = FileUploadUtils.upload(filePath, file);
  ▶ 攻击向量：上传恶意文件（如php，jsp）作为文件，可能导致代码执行或服务器被攻击
  ▶ 修复建议：对上传文件进行白名单限制，并检查文件类型和内容
</审计报告>
2025-02-01T14:35:45.629992+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：不安全文件下载（中危）
  ▶ 位置：L144-L156
  ▶ 代码特征：
    if (!FileUtils.checkAllowDownload(resource))
    String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：攻击者可以构造非法的resource参数，下载不允许的文件，例如使用`../../../`路径遍历技术访问上级目录文件。
  ▶ 潜在影响：可能导致敏感文件泄露，服务器文件结构暴露。
  ▶ 修复建议：增强资源访问控制，确保资源路径在允许的范围内，使用安全的文件下载机制。

</审计报告>
2025-02-01T14:35:45.629992+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：命令注入（中危）
  ▶ 位置：L52-L54
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
    Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));
    Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());
  ▶ 攻击向量：如果用户输入或系统配置的命令未经验证，攻击者可以利用命令注入攻击Redis命令的执行。
  ▶ 潜在影响：攻击者可控制Redis服务器，执行任意命令，可能导致数据丢失或泄露。
  ▶ 修复建议：确保执行的Redis命令来源安全，并对用户输入进行严格的验证与过滤。

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L35
  ▶ 代码特征：
    private RedisTemplate<String, String> redisTemplate;
  ▶ 攻击向量：若redisTemplate配置没有适当的访问控制，攻击者可能有权访问Redis数据库。
  ▶ 潜在影响：攻击者可以读取、修改或删除Redis数据库中的数据。
  ▶ 修复建议：实施身份验证和授权措施，确保只有授权用户可以通过RedisTemplate进行操作。
</审计报告>
2025-02-01T14:35:45.629992+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：潜在的未验证输入（中危）
  ▶ 位置：L52-L54
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
    Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));
  ▶ 攻击向量：假如用户能够通过某种方式控制Redis命令的输入，可能导致不当的命令执行。
  ▶ 修复建议：确保输入参数来源的安全性，必要时对用户提供的数据进行清洗。

■ 漏洞类型：潜在的数据泄露（信息）
  ▶ 位置：L39-L45
  ▶ 代码特征：
    caches.add(new SysCache(CacheConstants.LOGIN_TOKEN_KEY, "用户信息"));
    caches.add(new SysCache(CacheConstants.SYS_CONFIG_KEY, "配置信息"));
  ▶ 潜在影响：直接使用明文描述信息可能导致敏感信息泄露。
  ▶ 修复建议：使用更安全的方式来管理和记录敏感信息，或者通过加密存储描述信息。
</审计报告>
2025-02-01T14:35:45.630998+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
<审计通过>
2025-02-01T14:35:45.630998+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L76
  ▶ 代码特征：
    return AjaxResult.success(caches);
  ▶ 攻击向量：如果caches包含敏感信息，攻击者可以通过Ajax请求获取完整的缓存数据，可能导致敏感信息泄露。
  ▶ 修复建议：在返回caches之前，过滤掉敏感信息，确保只返回必要的数据。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L70
  ▶ 代码特征：
    // 返回获取Redis信息和命令统计的AjaxResult
  ▶ 攻击向量：若getInfo方法返回未经过滤的Redis信息，攻击者可以利用这些信息进行进一步的攻击。
  ▶ 修复建议：确保Redis信息在返回前进行适当的权限校验和数据过滤。
</审计报告>
2025-02-01T14:35:50.489867+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L84
  ▶ 代码特征：
    return AjaxResult.success(new TreeSet<>(cacheKeys));
  ▶ 攻击向量：如果cacheKeys包含敏感信息（例如用户ID、敏感配置等），直接返回可能导致信息泄露
  ▶ 修复建议：对返回的缓存键进行过滤，确保不包含敏感信息

■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L35
  ▶ 代码特征：
    private RedisTemplate<String, String> redisTemplate;
  ▶ 攻击向量：如果没有适当的权限控制，攻击者可通过redisTemplate访问Redis数据，获取敏感缓存
  ▶ 修复建议：增加访问权限验证，确保只有授权用户可以调用与redisTemplate相关的功能
</审计报告>
2025-02-01T14:35:50.490865+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：可能的XSS（中危）
  ▶ 位置：L84
  ▶ 代码特征：
    return AjaxResult.success(new TreeSet<>(cacheKeys));
  ▶ 攻击向量：如果cacheKeys数据来源于用户输入，可能造成XSS攻击，导致恶意脚本执行。
  ▶ 修复建议：确保对cacheKeys中的数据进行严格的输入验证和编码处理。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L70
  ▶ 代码特征：
    // Redis信息和命令统计的返回
  ▶ 攻击向量：敏感信息可能被恶意用户获取，影响系统安全。
  ▶ 修复建议：限制对Redis信息获取的权限，仅允许授权用户访问。
</审计报告>
2025-02-01T14:35:50.490865+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    return AjaxResult.success(sysCache);
  ▶ 攻击向量：若sysCache包含敏感信息，且AjaxResult返回数据未妥善处理，攻击者可能获取敏感数据
  ▶ 修复建议：确保sysCache中的数据不包含敏感信息，并对返回结果进行脱敏处理

■ 漏洞类型：无访问控制（高危）
  ▶ 位置：L35
  ▶ 代码特征：
    private RedisTemplate<String, String> redisTemplate;
  ▶ 攻击向量：未限制对redisTemplate的操作权限，恶意用户可直接调用该控制器获取并篡改缓存数据
  ▶ 修复建议：在调用getCacheValue方法前进行权限验证，确保只有授权用户可访问
</审计报告>
2025-02-01T14:35:50.490865+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L39-L45
  ▶ 代码特征：
    caches.add(new SysCache(CacheConstants.LOGIN_TOKEN_KEY, "用户信息"));
    caches.add(new SysCache(CacheConstants.SYS_CONFIG_KEY, "配置信息"));
    caches.add(new SysCache(CacheConstants.SYS_DICT_KEY, "数据字典"));
    caches.add(new SysCache(CacheConstants.CAPTCHA_CODE_KEY, "验证码"));
    caches.add(new SysCache(CacheConstants.REPEAT_SUBMIT_KEY, "防重提交"));
  ▶ 攻击向量：如果攻击者能够访问缓存信息，可能会获取敏感数据，比如用户信息或配置。
  ▶ 修复建议：确保缓存内容经过适当的加密或限制访问。

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    return AjaxResult.success(sysCache);
  ▶ 攻击向量：若未对用户权限进行校验，任何用户均可能获取缓存值。
  ▶ 修复建议：增加用户权限校验逻辑，确保只有经过身份验证的用户才能访问此数据。

</审计报告>
2025-02-01T14:35:50.495042+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    return AjaxResult.success(sysCache);
  ▶ 攻击向量：如果sysCache中包含敏感信息，攻击者可能通过获得AjaxResult而获取这些信息。
  ▶ 修复建议：确保不在返回的AjaxResult中泄露任何敏感信息，特别是在用户有可能访问的接口中。

■ 漏洞类型：通用信息泄露（信息）
  ▶ 位置：L70
  ▶ 代码特征：
    return AjaxResult.success(redisInfo);
  ▶ 攻击向量：返回Redis信息可能让攻击者了解系统的架构和配置信息，有助于进行进一步的攻击。
  ▶ 修复建议：限制对外暴露的Redis信息，或者对返回内容进行筛选，避免公开敏感信息。
</审计报告>
2025-02-01T14:35:50.495042+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无
  ▶ 位置：N/A
  ▶ 代码特征：无明显漏洞
  ▶ 修复建议：无
  
// 文件路径2
■ 漏洞类型：无
  ▶ 位置：N/A
  ▶ 代码特征：无明显漏洞
  ▶ 修复建议：无

<审计通过>
2025-02-01T14:35:50.495042+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：XSS（中危）
  ▶ 位置：L102
  ▶ 代码特征：
    return AjaxResult.success();
  ▶ 攻击向量：若AjaxResult未对返回数据进行适当的转义，攻击者可能通过构造包含恶意脚本的内容，导致用户浏览器执行这些脚本。
  ▶ 修复建议：对返回的数据进行HTML转义处理，以防止XSS攻击。

<审计通过>
</审计报告>
2025-02-01T14:35:50.495042+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无
  ▶ 位置：无潜在漏洞
  ▶ 代码特征：代码安全，没有明显的安全隐患
  ▶ 修复建议：无

■ 漏洞类型：无
  ▶ 位置：无潜在漏洞
  ▶ 代码特征：代码安全，没有明显的安全隐患
  ▶ 修复建议：无
</审计报告>
2025-02-01T14:35:50.495042+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L70
  ▶ 代码特征：
    return AjaxResult.success(redisInfo); // 较为敏感的缓存信息
  ▶ 攻击向量：若攻击者能够调用getInfo方法，则可能获取到Redis的内部结构和命令信息
  ▶ 修复建议：鉴别用户权限，限制此接口的访问，仅允许具有管理权限的用户访问

<审计通过>
</审计报告>
2025-02-01T14:35:50.495042+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无漏洞
  ▶ 代码摘要：CacheController类主要负责与Redis进行数据交互，以及清除所有缓存的AjaxResult返回。
  ▶ 审计结论：未发现安全漏洞，代码实现符合安全规范。

</审计报告>
2025-02-01T14:35:56.035756+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：缺乏访问控制（中危）
  ▶ 位置：L70
  ▶ 代码特征：
    return AjaxResult.success(redisTemplate.opsForValue().get("someKey"));
  ▶ 攻击向量：未对用户权限进行适当验证，可能导致未授权用户获取敏感信息
  ▶ 修复建议：在getInfo方法中添加权限校验逻辑

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L120
  ▶ 代码特征：
    clearCacheAll()方法没有验证调用者的角色和权限
  ▶ 攻击向量：用户能够调用此方法而不具备相应权限，可能导致恶意用户清除缓存
  ▶ 修复建议：在clearCacheAll方法中实施权限检查
</审计报告>
2025-02-01T14:35:56.036752+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L23
  ▶ 代码特征：
    Server server = new Server();
    server.copyTo();
  ▶ 攻击向量：如果Server类的copyTo方法包含敏感信息的直接暴露，攻击者可能利用此接口获取服务器内部状态或配置信息。
  ▶ 修复建议：审查Server类的实现，确保不暴露敏感信息。添加权限控制以限制对getInfo方法的访问。

</审计报告>
2025-02-01T14:35:56.036752+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\ServerController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L23-L25
  ▶ 代码特征：
    Server server = new Server();
    server.copyTo();
    return AjaxResult.success(server);
  ▶ 攻击向量：server对象中的敏感信息如果被恶意用户获取，可能导致敏感数据泄露
  ▶ 修复建议：确保Server类中的敏感信息不被直接暴露在AjaxResult中，可以选择隐藏或脱敏处理

</审计报告>
2025-02-01T14:35:56.036752+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：未验证的用户输入（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
  ▶ 攻击向量：如果logininfor中的某些字段（如username）未经过滤，则可能导致SQL注入。
  ▶ 修复建议：对logininfor对象的数据进行验证和清理，确保输入安全。

<审计通过>
</审计报告>
2025-02-01T14:35:56.037751+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L50-L54
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
    util.exportExcel(response, list, "登录日志");
  ▶ 攻击向量：通过构造请求获取敏感的登录信息导出
  ▶ 潜在影响：攻击者可直接下载包含用户登录记录的Excel文件，泄露用户敏感信息
  ▶ 修复建议：限制导出功能的权限，仅允许授权用户访问该功能。

■ 漏洞类型：缺乏验证（低危）
  ▶ 位置：L79
  ▶ 代码特征：
    passwordService.clearLoginRecordCache(userName);
  ▶ 攻击向量：未对userName进行验证和过滤，可能导致清除非授权用户的登录记录
  ▶ 潜在影响：恶意用户可能通过构造请求清除其他用户的登录记录
  ▶ 修复建议：对userName进行严格验证和授权检查。
</审计报告>
2025-02-01T14:35:56.037751+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    passwordService.clearLoginRecordCache(userName);
  ▶ 攻击向量：攻击者可通过枚举用户名，利用clearLoginRecordCache方法的执行结果获取用户存在的信息
  ▶ 修复建议：在执行相关操作前进行身份验证和限制接口的使用权限

<审计通过>

2025-02-01T14:35:56.037751+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysOperlogController.java
■ 漏洞类型：不安全的日志清理（中危）
  ▶ 位置：L64-L67
  ▶ 代码特征：
    operLogService.cleanOperLog();
  ▶ 攻击向量：攻击者可能通过反复的清除日志，隐藏其恶意操作轨迹，影响审计能力
  ▶ 修复建议：在清除日志之前加入权限控制，确保只有授权用户可以执行此操作

■ 漏洞类型：潜在的SQL注入（中危）
  ▶ 位置：L36-L40
  ▶ 代码特征：
    List<SysOperLog> list = operLogService.selectOperLogList(operLog);
  ▶ 攻击向量：如果operLog对象未经过严格验证，用户可构造恶意参数，从而进行SQL注入
  ▶ 修复建议：确保对operLog对象的所有输入参数进行严格的校验和过滤，使用参数化查询

</审计报告>
2025-02-01T14:35:56.037751+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无授权访问（中危）
  ▶ 位置：L43-L69
  ▶ 代码特征：
    Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");
    // 此处未进行用户权限验证
  ▶ 攻击向量：恶意用户可能通过提供任意ipaddr或userName获取所有在线用户信息
  ▶ 修复建议：在执行获取在线用户信息操作前进行权限验证和用户身份确认

■ 漏洞类型：无效输入检测（中危）
  ▶ 位置：L58
  ▶ 代码特征：
    else if (StringUtils.isNotEmpty(userName) && StringUtils.isNotNull(user.getUser()))
  ▶ 攻击向量：user对象可能为空，导致系统抛出空指针异常
  ▶ 修复建议：增加null检查，确保user对象是有效的
</审计报告>
2025-02-01T14:35:56.037751+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysUserOnlineController.java
■ 漏洞类型：未校验用户输入（潜在风险）
  ▶ 位置：L52-L64
  ▶ 代码特征：
    userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));
  ▶ 攻击向量：如果ipaddr或userName由恶意用户构造，可能导致信息泄露或授权绕过（如传入ipaddr='1.1.1.1 OR 1=1'）
  ▶ 修复建议：增加对userName和ipaddr的输入验证，确保其格式和内容的合法性

■ 漏洞类型：API暴露（安全）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：若tokenId未经过严格验证，恶意用户可以直接调用该API删除任意用户的会话，导致服务拒绝或用户信息泄露
  ▶ 修复建议：增加对tokenId的访问控制，确保只有授权用户能够删除对应的缓存
</审计报告>
2025-02-01T14:35:56.038748+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysUserOnlineController.java
■ 漏洞类型：未验证的用户输入（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：如果tokenId由用户输入，可以构造tokenId=' OR '1'='1'进行未授权访问或删除操作
  ▶ 修复建议：在使用tokenId之前进行严格的验证和授权，避免不安全的用户输入导致的敏感操作

<审计通过>
2025-02-01T14:36:00.093374+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：未验证用户权限，恶意用户可以调用该方法清除缓存，导致潜在的服务拒绝
  ▶ 修复建议：在调用前增加权限检查

■ 漏洞类型：未处理异常（低危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：如果configService.resetConfigCache()内部抛出异常，可能导致服务崩溃
  ▶ 修复建议：添加异常处理机制，确保服务的稳定性
</审计报告>
2025-02-01T14:36:00.095963+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L42-L46
  ▶ 代码特征：
    List<SysConfig> list = configService.selectConfigList(config);
  ▶ 攻击向量：攻击者可以构造恶意请求，获取系统配置列表，可能包含敏感信息
  ▶ 修复建议：对返回的配置列表进行权限校验，确保只有授权用户可以访问
</审计报告>
2025-02-01T14:36:00.095963+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L46
  ▶ 代码特征：
    return getDataTable(list);
  ▶ 攻击向量：未对list内容进行审查，可能会返回敏感配置数据，造成信息泄露
  ▶ 修复建议：对返回的数据进行适当的过滤和审查。

■ 漏洞类型：非授权访问（高危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：如果没有进行身份和权限验证，攻击者可能滥用此功能清除或修改配置缓存
  ▶ 修复建议：在调用resetConfigCache方法之前，确保经过适当的权限检查。
</审计报告>
2025-02-01T14:36:00.095963+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：缺少参数验证（中危）
  ▶ 位置：L64-L66
  ▶ 代码特征：
    return success(configService.selectConfigById(configId));
  ▶ 攻击向量：如果configId可以被外部输入，攻击者可以构造configId为负值或不合法值，从而导致不正确的行为或返回敏感信息。
  ▶ 修复建议：增加对configId的有效性验证，例如检查其是否为空或在合理范围内。

■ 漏洞类型：缺少权限验证（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：如果未对当前用户进行权限验证，恶意用户可能调用此接口来重置缓存，从而影响系统行为。
  ▶ 修复建议：在调用resetConfigCache方法前，检查当前用户是否具有相应权限。
</审计报告>
2025-02-01T14:36:00.096961+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    return success(configService.selectConfigByKey(configKey));
  ▶ 攻击向量：如果configKey未经过严格验证，攻击者可能获取敏感配置信息
  ▶ 修复建议：对configKey进行严格的输入验证

<审计通过>
</审计报告>
2025-02-01T14:36:00.096961+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    if (!configService.checkConfigKeyUnique(config))
  ▶ 攻击向量：攻击者可利用未进行访问控制的add方法，构造请求添加恶意配置，导致系统配置被篡改
  ▶ 修复建议：在add方法中添加权限校验，确保只有授权用户可以修改系统配置

■ 漏洞类型：数据滥用（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：若未限制清空缓存的请求，攻击者可以频繁调用此方法导致服务拒绝
  ▶ 修复建议：在resetConfigCache方法上添加权限校验和限制调用频率
</审计报告>
2025-02-01T14:36:00.096961+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L91
  ▶ 代码特征：
    return toAjax(configService.insertConfig(config));
  ▶ 攻击向量：如果config未经过验证或清洗，攻击者可以构造config包含恶意SQL片段，例如config="{\"name\":\"test', 'value\":\"wrong' OR '1'='1\"}"
  ▶ 修复建议：对config参数进行严格的类型验证和清洗，使用参数化查询。

<审计通过>
</审计报告>
2025-02-01T14:36:00.096961+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L107
  ▶ 代码特征：
    return toAjax(configService.updateConfig(config));
  ▶ 攻击向量：未对config对象进行用户权限验证，恶意用户可能修改关键信息
  ▶ 修复建议：在调用updateConfig方法前添加用户权限检查

■ 漏洞类型：潜在的缓存穿透（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：频繁调用resetConfigCache可能导致缓存清空过于频繁，影响系统性能
  ▶ 修复建议：增加调用频率限制和监控

</审计报告>
2025-02-01T14:36:00.097957+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    configService.deleteConfigByIds(configIds);
  ▶ 攻击向量：构造恶意configIds值，可能引发可删除未授权的配置
  ▶ 修复建议：增加对configIds格式和内容的验证，以防止非法输入

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：缺乏权限控制，攻击者可能访问该接口重置缓存
  ▶ 修复建议：在resetConfigCache方法中增加用户权限检查
</审计报告>
2025-02-01T14:36:00.097957+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：信息泄漏（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 潜在影响：未对configService的resetConfigCache方法执行前的权限校验，可能导致未授权用户也能刷新参数缓存。
  ▶ 修复建议：在调用resetConfigCache方法前进行用户权限检查。

<审计通过>
2025-02-01T14:36:07.847237+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：未验证的输出（信息）
  ▶ 位置：L56
  ▶ 代码特征：
    util.exportExcel(response, list, "参数数据");
  ▶ 攻击向量：如果list包含用户输入的数据，可能导致在Excel导出中输出恶意内容（如HTML或JavaScript），从而引发XSS攻击。
  ▶ 修复建议：在输出数据到Excel前，对list中的数据进行HTML转义处理。

</审计报告>
2025-02-01T14:36:07.848233+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDeptController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L42-L44
  ▶ 代码特征：
    List<SysDept> depts = deptService.selectDeptList(dept);
  ▶ 攻击向量：构造SysDept对象，其中字段值如"deptName' OR '1'='1"可能导致SQL注入
  ▶ 修复建议：对输入的SysDept对象内容进行验证与清洗，使用参数化查询增强安全性

■ 漏洞类型：缺乏权限验证（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    return toAjax(deptService.deleteDeptById(deptId));
  ▶ 攻击向量：未校验当前用户是否有权限删除指定部门，可能导致权限越权
  ▶ 修复建议：在执行删除操作前，检查用户的权限

</审计报告>
2025-02-01T14:36:07.848233+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L48
  ▶ 代码特征：
    List<SysDictData> list = dictDataService.selectDictDataList(dictData);
  ▶ 攻击向量：如果dictData对象中的字段未经过充分验证，恶意用户可以构造dictData使得SQL查询受到攻击。
  ▶ 潜在影响：此漏洞可能导致未授权数据访问或数据泄露。
  ▶ 修复建议：确保dictData的字段经过严格验证和过滤，使用ORM框架的预处理语句。

■ 漏洞类型：未授权删除（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：缺乏对dictCodes的权限验证，恶意用户可能通过API调用删除未授权的字典数据。
  ▶ 潜在影响：此漏洞可能导致重要数据的丢失或篡改。
  ▶ 修复建议：在删除操作前添加身份验证和权限检查。

</审计报告>
2025-02-01T14:36:07.848233+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：潜在的 SQL 注入（高危）
  ▶ 位置：L48、L69、L118
  ▶ 代码特征：
    - dictDataService.selectDictDataList(dictData);
    - dictDataService.selectDictDataById(dictCode);
    - dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：如果 dictData、dictCode 或 dictCodes 中包含未经过滤的用户输入，攻击者可能构造恶意输入。例如，dictCode 可能被构造成 dictCode = 1; DROP TABLE users;--。
  ▶ 修复建议：确保所有用户输入在传递给数据库之前进行验证和清洗，使用参数化查询进行安全处理。

■ 漏洞类型：缺少输入验证（中危）
  ▶ 位置：L56-L57
  ▶ 代码特征：
    db.Exec("SELECT * FROM users WHERE id=" + userInput)
  ▶ 攻击向量：在导出操作中，没有对 dictData 请求体进行验证，可能导致恶意数据被处理或导出。
  ▶ 修复建议：在调用服务之前，对 dictData 进行适当的验证，以确保其符合预期标准，例如类型和范围验证。
</审计报告>
2025-02-01T14:36:07.852222+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L43, L53, L65, L89, L101, L113
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:dict:list')")
    @PreAuthorize("@ss.hasPermi('system:dict:export')")
    @PreAuthorize("@ss.hasPermi('system:dict:query')")
    @PreAuthorize("@ss.hasPermi('system:dict:add')")
    @PreAuthorize("@ss.hasPermi('system:dict:edit')")
    @PreAuthorize("@ss.hasPermi('system:dict:remove')")
  ▶ 攻击向量：如果权限控制逻辑存在漏洞，攻击者可能利用未正确映射权限，进行任意数据操作。
  ▶ 修复建议：确保所有业务逻辑中的权限控制都通过有效的用户角色验证。

■ 漏洞类型：未验证用户输入（高危）
  ▶ 位置：L68, L76, L92, L104
  ▶ 代码特征：
    public AjaxResult getInfo(@PathVariable Long dictCode)
    public AjaxResult dictType(@PathVariable String dictType)
    public AjaxResult add(@Validated @RequestBody SysDictData dict)
    public AjaxResult edit(@Validated @RequestBody SysDictData dict)
  ▶ 攻击向量：直接接受用户输入的dictCode和dictType未进行验证，可能导致信息泄露或意外数据修改。
  ▶ 修复建议：在获取用户输入之前，要进行充分的输入验证和数据清洗。

■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes)
    // dictCodes 直接来自路径变量，未经过滤
  ▶ 攻击向量：通过构造dictCodes包含恶意内容，可能引发SQL注入。
  ▶ 修复建议：建议在服务层做参数校验，或者使用参数化查询来防止注入。

</审计报告>
2025-02-01T14:36:07.852222+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L43-L54
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:dict:list')")
    @GetMapping("/list")
  ▶ 攻击向量：如果@ss.hasPermi 未正确配置，恶意用户可能访问字典数据列表
  ▶ 修复建议：确保权限验证逻辑的严格性，避免权限绕过

■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L116
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：dictCodes未经过验证，攻击者可传入非法ID进行删除操作
  ▶ 修复建议：在调用前验证dictCodes的有效性与权限检查

■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L107
  ▶ 代码特征：
    dictDataService.updateDictData(dict);
  ▶ 攻击向量：调用updateDictData时，dict的数据内容未进行有效性验证，可能存在被攻击者注入恶意数据
  ▶ 修复建议：对dict的数据内容进行验证和清洗

</审计报告>
2025-02-01T14:36:07.852222+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：未校验的输入数据（中危）
  ▶ 位置：L116
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：攻击者可以构造恶意的dictCodes数组，例如包含不存在的ID或空值，可能导致意外删除操作。
  ▶ 修复建议：在调用deleteDictDataByIds方法之前，对dictCodes进行有效性校验。

</审计报告>
2025-02-01T14:36:07.853216+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L78
  ▶ 代码特征：
    List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);
  ▶ 攻击向量：如果dictType未得到适当的验证和清洗，攻击者可能利用此漏洞请求未授权的字典数据。
  ▶ 修复建议：对dictType增加输入验证，确保只接受预定义的字典类型。
</审计报告>
2025-02-01T14:36:07.853216+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：用户信息泄露（中危）
  ▶ 位置：L94, L106
  ▶ 代码特征：
    dict.setCreateBy(getUsername());
    dict.setUpdateBy(getUsername());
  ▶ 攻击向量：未经授权的用户通过调用相应接口可能获取当前用户信息
  ▶ 修复建议：需确保调用getUsername()前对用户权限进行合理校验，或者在系统级别限制敏感接口访问权限
</审计报告>
2025-02-01T14:36:07.853216+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L106
  ▶ 代码特征：
    dict.setUpdateBy(getUsername());
  ▶ 攻击向量：如果getUsername()返回的用户名来源于外部输入，攻击者可能会通过模仿合法用户的行为获取敏感数据
  ▶ 修复建议：确保getUsername()严格验证输入，防止不当用户名赋值
</审计报告>
2025-02-01T14:36:21.684668+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：无明显漏洞（审计通过）

// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：无明显漏洞（审计通过）
</审计报告>
2025-02-01T14:36:21.685680+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L38-L44
  ▶ 代码特征：
    List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);
  ▶ 攻击向量：如果dictType对象未进行充分的验证，攻击者可以通过构造恶意请求内容，获取不应返回的敏感字典类型信息
  ▶ 修复建议：对dictType对象进行严格的输入验证和过滤

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L128-L130
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果未控制访问权限，恶意用户可以访问该接口，获取所有字典类型的信息
  ▶ 修复建议：增加适当的访问权限检查，确保只有授权用户可以访问此接口
</审计报告>
2025-02-01T14:36:21.685680+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：路径遍历（中危）
  ▶ 位置：L61
  ▶ 代码特征：
    public AjaxResult getInfo(@PathVariable Long dictId)
  ▶ 攻击向量：如果dictId参数未正确限制或验证，攻击者可以尝试构造dictId为恶意值，如dictId=-1或其他不合法值，造成未授权的数据访问
  ▶ 修复建议：对dictId进行合法性校验，确保只访问允许的字典类型ID

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L63
  ▶ 代码特征：
    return success(dictTypeService.selectDictTypeById(dictId));
  ▶ 攻击向量：如果selectDictTypeById方法内部未进行对dictId的有效性检查，可能导致查询数据库中不存在或错误数据
  ▶ 修复建议：在selectDictTypeById方法中加入输入验证，包括检查id是否有效，是否存在相应记录等
</审计报告>
2025-02-01T14:36:21.685680+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L76
  ▶ 代码特征：
    return error("新增字典'" + dict.getDictName() + "'失败，字典类型已存在");
  ▶ 攻击向量：攻击者可以通过多次尝试猜测已有字典类型，并通过返回的错误信息泄露系统信息
  ▶ 修复建议：避免在错误信息中直接暴露字典类型名称，可以使用更通用的错误描述。

■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L70
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:dict:add')")
  ▶ 攻击向量：如果权限控制未正确实现，攻击者可能通过发送POST请求（如使用API工具）来执行字典添加操作
  ▶ 修复建议：确保权限验证逻辑严密，建议加入异常处理机制以捕获未授权访问情况
</审计报告>
2025-02-01T14:36:21.687684+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型： SQL注入（高危）
  ▶ 位置： L74-L76
  ▶ 代码特征：
    if (!dictTypeService.checkDictTypeUnique(dict))
  ▶ 攻击向量：通过构造恶意输入字典对象，可能导致数据库查询被操控
  ▶ 潜在影响：攻击者可通过提交恶意字典名称，绕过唯一性检查，进行批量插入
  ▶ 修复建议：确保checkDictTypeUnique方法使用参数化查询和严格的输入验证

// 文件路径2
■ 漏洞类型：未处理异常（中危）
  ▶ 位置： L79
  ▶ 代码特征：
    return toAjax(dictTypeService.insertDictType(dict));
  ▶ 攻击向量：dictTypeService.insertDictType方法可能抛出未捕获异常
  ▶ 潜在影响：如果插入失败时未处理异常，将导致系统崩溃或未按预期返回错误信息
  ▶ 修复建议：在插入操作前后添加异常处理，确保给出合理反馈

</审计报告>
2025-02-01T14:36:21.687684+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L90
  ▶ 代码特征：
    if (!dictTypeService.checkDictTypeUnique(dict))
  ▶ 攻击向量：恶意用户可以提交非法的字典数据，导致数据库中出现不一致的数据
  ▶ 修复建议：增强对dict对象属性的验证，确保数据符合预期格式和范围

// 文件路径2
■ 漏洞类型：缺乏权限控制（中危）
  ▶ 位置：L85
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:dict:edit')")
  ▶ 攻击向量：若未妥善配置权限，可被非授权用户访问修改字典类型的接口
  ▶ 修复建议：检查权限配置，并确保@PreAuthorize注解适配业务逻辑

</审计报告>
2025-02-01T14:36:21.687684+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：无权限访问（中危）
  ▶ 位置：L101
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:dict:remove')")
  ▶ 攻击向量：若应用未正确配置权限验证，攻击者可构造请求直接访问删除接口
  ▶ 修复建议：确保权限配置及用户权限的有效性

■ 漏洞类型：缺乏输入验证（高危）
  ▶ 位置：L104
  ▶ 代码特征：
    public AjaxResult remove(@PathVariable Long[] dictIds)
  ▶ 攻击向量：未验证dictIds的有效性，可能导致删除非目标字典或引发错误
  ▶ 修复建议：对dictIds进行有效性和安全性检查，确保删除操作的合法性

■ 漏洞类型：潜在的SQL注入（高危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如selectDictTypeAll内部未进行参数化处理，可能存在SQL注入风险
  ▶ 修复建议：确认selectDictTypeAll实现中使用了参数化查询，确保SQL安全性
</审计报告>
2025-02-01T14:36:21.687684+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L113-L115
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:dict:remove')")
    @DeleteMapping("/refreshCache")
  ▶ 攻击向量：假设攻击者可以模拟具有“system:dict:remove”权限的用户，可能会执行缓存刷新操作
  ▶ 修复建议：审核权限控制逻辑，确保权限验证的有效性

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L128-L129
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
    return success(dictTypes);
  ▶ 攻击向量：若字典类型数据中包含敏感信息，直接返回并可能被未授权用户访问
  ▶ 修复建议：根据用户权限过滤返回结果，避免敏感数据泄露
</审计报告>
2025-02-01T14:36:21.689678+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果dictTypeService的方法没有进行访问控制，攻击者可以通过该接口获取所有字典类型的详细信息。
  ▶ 潜在影响：可能泄露敏感的系统字典数据
  ▶ 修复建议：限制接口访问权限，仅允许授权用户访问该接口
</审计报告>
2025-02-01T14:36:21.689678+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysIndexController.java
■ 漏洞类型：反射攻击（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：若ruoyiConfig.getName()或ruoyiConfig.getVersion()返回未经验证的用户输入，可能导致反射注入攻击
  ▶ 修复建议：验证和消毒ruoyiConfig中的数据，确保不含恶意输入

<审计通过>
2025-02-01T14:36:29.574633+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysIndexController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：潜在的版本信息泄露，攻击者可通过观察响应内容获取系统架构和版本信息
  ▶ 修复建议：移除或模糊处理版本信息，以减少对攻击者的帮助。
</审计报告>
2025-02-01T14:36:29.575136+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysIndexController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：攻击者可通过访问此信息，获取系统版本和名称，可能针对已知漏洞进行攻击
  ▶ 修复建议：避免在响应中直接展示系统的版本信息，使用通用的版本声明替代具体信息
</审计报告>
2025-02-01T14:36:29.575136+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L94-L95
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：未验证userId的来源，可能导致恶意用户通过构造请求获取不属于其的菜单
  ▶ 修复建议：加入用户身份验证和权限检查，以确保用户只能访问其自身菜单

■ 漏洞类型：敏感信息泄露（中危）
  ▶ 位置：L53
  ▶ 代码特征：
    String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(), loginBody.getUuid());
  ▶ 攻击向量：如果loginService处理不当，可能导致凭证泄露
  ▶ 修复建议：确保登录服务在处理用户凭证时进行加密和严格的输入验证
</审计报告>
2025-02-01T14:36:29.575136+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：权限绕过（中危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果userId未经过验证，攻击者可以构造请求绕过权限控制，获取他人菜单树
  ▶ 修复建议：确保userId参数经过严格验证，或者从登录用户信息中获取userId

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L67
  ▶ 代码特征：
    LoginUser loginUser = SecurityUtils.getLoginUser();
  ▶ 攻击向量：如果当前用户身份未正确验证，可能泄露其他用户的登录信息
  ▶ 修复建议：增加权限检查，确保仅允许获取当前用户信息
</审计报告>
2025-02-01T14:36:29.575136+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：未验证的用户输入（中危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果userId未经过验证或清洗，攻击者可以构造userId，例如userId=999999999，并可能导致拒绝服务或权限提升
  ▶ 修复建议：在调用menuService前对userId进行校验，确保其属于有效和授权的范围

■ 漏洞类型：未验证的用户输入（中危）
  ▶ 位置：L70-L72
  ▶ 代码特征：
    Set<String> roles = permissionService.getRolePermission(user);
    Set<String> permissions = permissionService.getMenuPermission(user);
  ▶ 攻击向量：如果user未经过验证，攻击者可以使用非法用户信息尝试获取角色和权限，可能导致信息泄露
  ▶ 修复建议：确保在调用permissionService前对user进行身份验证和检查
</审计报告>
2025-02-01T14:36:29.579418+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：权限管理缺失（高危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：未验证userId的来源，使攻击者可以通过构造请求直接访问其他用户的菜单
  ▶ 潜在影响：可能导致用户信息泄露及权限提升
  ▶ 修复建议：在调用selectMenuTreeByUserId方法前，验证用户的权限或确保userId来自经过身份验证的用户。

■ 漏洞类型：不安全的令牌管理（中危）
  ▶ 位置：L76
  ▶ 代码特征：
    tokenService.refreshToken(loginUser);
  ▶ 攻击向量：如果loginUser未经过适当验证，攻击者可以伪造loginUser进行不当的令牌刷新
  ▶ 潜在影响：不当的令牌管理可能导致会话劫持
  ▶ 修复建议：确保loginUser的正确性和来源，在调用refreshToken之前进行适当的验证。
</审计报告>
2025-02-01T14:36:29.579418+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果userId未经过验证或处理，可以构造userId为'1; DROP TABLE users; --执行恶意SQL
  ▶ 修复建议：确保userId为合法用户ID并经过严格的类型验证

<审计通过>
2025-02-01T14:36:29.579418+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysMenuController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L140
  ▶ 代码特征：
    return toAjax(menuService.deleteMenuById(menuId));
  ▶ 攻击向量：构造menuId为负值或非预期字符串，可能导致不当删除操作。
  ▶ 修复建议：在调用deleteMenuById之前，对menuId进行合法性验证。

■ 漏洞类型：缺乏访问控制（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());
  ▶ 攻击向量：若未对getUserId()结果进行权限控制，恶意用户可能获取不应访问的菜单列表。
  ▶ 修复建议：在服务层增加对用户权限的验证，确保用户仅能访问其有权访问的菜单。

</审计报告>
2025-02-01T14:36:29.579418+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在的SQL注入（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysNotice> list = noticeService.selectNoticeList(notice);
  ▶ 攻击向量：如果notice对象的属性未经过严格验证或过滤，攻击者可以构造恶意notice对象以尝试触发SQL注入
  ▶ 修复建议：确保对notice对象的所有输入进行验证和过滤，使用参数化查询以防止SQL注入

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L89
  ▶ 代码特征：
    return toAjax(noticeService.deleteNoticeByIds(noticeIds));
  ▶ 攻击向量：如果noticeIds未经过验证，攻击者可以构造一个恶意的noticeIds数组以删除不属于其权限的通知公告
  ▶ 修复建议：在执行删除操作前，添加适当的权限验证，并验证noticeIds的输入格式
</审计报告>
2025-02-01T14:36:29.579418+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无漏洞
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 审计结论：此处代码调用success方法返回岗位列表，无明显安全隐患。

■ 漏洞类型：无漏洞
  ▶ 位置：L34-L35
  ▶ 代码特征：
    @Autowired
    private ISysPostService postService;
  ▶ 审计结论：依赖注入使用了@Autowired，没有发现配置错误或漏洞风险。

<审计通过>标记
</审计报告>
2025-02-01T14:36:39.261940+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感信息，攻击者可以利用该接口获取岗位信息，包括用户岗位详情
  ▶ 修复建议：确保返回的数据不包含敏感信息，并进行适当的权限检查

■ 漏洞类型：输入验证缺失（中危）
  ▶ 位置：L44
  ▶ 代码特征：
    startPage();
  ▶ 攻击向量：未验证传入的分页参数，可能导致分页非预期操作
  ▶ 修复建议：添加对分页参数的类型和范围检查
</审计报告>
2025-02-01T14:36:39.261940+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L45
  ▶ 代码特征：
    List<SysPost> list = postService.selectPostList(post);
  ▶ 攻击向量：若post对象未经过严格验证，可能导致信息泄露或不当访问
  ▶ 修复建议：确保post对象中的敏感数据经过严格验证和清理

■ 漏洞类型：不安全的对象引用（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：成功返回posts但未检查是否包含未经授权的对象，可能导致敏感岗位信息的暴露
  ▶ 修复建议：在返回之前进行权限检查和数据清理
</审计报告>
2025-02-01T14:36:39.261940+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：无漏洞
  ▶ 位置：L127，L46
  ▶ 代码摘要：相关代码涉及返回岗位选择框列表及格式化返回的数据，没有直接的安全漏洞风险。
  
<审计通过>
2025-02-01T14:36:39.261940+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：XSS（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts中的内容未经过适当的转义，攻击者可插入恶意脚本，如<script>alert('XSS')</script>。
  ▶ 修复建议：对posts中的用户输入进行HTML转义，确保不执行任意脚本。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L56
  ▶ 代码特征：
    util.exportExcel(response, list, "岗位数据");
  ▶ 攻击向量：导出的Excel文件中可能包含敏感信息，如用户列表或密码。
  ▶ 修复建议：确保导出的数据不包含敏感信息，并实施适当的数据访问控制。

</审计报告>
2025-02-01T14:36:39.262927+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：攻击者可以通过请求特定的postId获取敏感的岗位信息
  ▶ 修复建议：确保对postId进行验证和授权检查，防止未授权的访问。

<审计通过>
</审计报告>
2025-02-01T14:36:39.262927+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：直接反射（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：如果postId来自用户输入且未经过验证，攻击者可以构造postId=1; DROP TABLE posts;来进行数据库操作
  ▶ 修复建议：对postId进行类型验证和验证是否存在

<审计通过> 
</审计报告>
2025-02-01T14:36:39.266944+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：潜在数据泄露（信息）
  ▶ 位置：L77
  ▶ 代码特征：
    if (!postService.checkPostNameUnique(post))
  ▶ 攻击向量：如果post对象未经过严格的验证和清理，攻击者可以通过插入恶意数据来影响checkPostNameUnique的判断逻辑，进而导致数据泄露
  ▶ 修复建议：确保输入数据在进入checkPostNameUnique之前经过严格的验证和清理。
  
■ 漏洞类型：路径依赖性未验证（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts数据来自不可信的源，可能会导致返回不安全的信息或对象
  ▶ 修复建议：在调用success方法之前，确保对posts数据进行有效性检查，确保没有敏感信息被返回。
</审计报告>
2025-02-01T14:36:39.266944+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：返回岗位列表时未进行用户权限校验，可能导致未授权用户访问敏感信息
  ▶ 修复建议：对返回的数据进行权限校验，确保用户只有在具有相应权限时才能访问特定信息

■ 漏洞类型：逻辑错误（低危）
  ▶ 位置：L81
  ▶ 代码特征：
    else if (!postService.checkPostCodeUnique(post))
  ▶ 攻击向量：未处理checkPostCodeUnique方法可能返回的异常情况，可能导致服务异常
  ▶ 修复建议：添加异常捕获逻辑，处理checkPostCodeUnique方法的返回值和潜在异常
</审计报告>
2025-02-01T14:36:39.266944+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L85
  ▶ 代码特征：
    post.setCreateBy(getUsername());
  ▶ 攻击向量：getUsername()方法存在未授权调用，可能泄露用户信息
  ▶ 修复建议：对getUsername()的调用添加用户权限验证

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：posts数据未做检验，可能因异常导致未处理的返回
  ▶ 修复建议：在success()前添加空值检查和异常处理
</审计报告>
2025-02-01T14:36:39.266944+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L86
  ▶ 代码特征：
    return toAjax(postService.insertPost(post));
  ▶ 攻击向量：如果post对象未经过充分验证，攻击者可以将恶意SQL代码注入到岗位信息的字段中，例如{"name": "岗位名', '1'='1"}，导致数据库中的敏感信息被泄露。
  ▶ 修复建议：在插入前对post对象的内容进行全面的验证和参数化，以确保sql安全。

</审计报告>
2025-02-01T14:36:43.573791+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    return error("新增岗位'" + post.getPostName() + "'失败，岗位名称已存在");
  ▶ 攻击向量：恶意用户通过反向工程提取错误消息，从中获取现有岗位名称
  ▶ 修复建议：避免在错误消息中暴露敏感信息，改为返回通用错误说明

<审计通过>
2025-02-01T14:36:43.573791+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的输入（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    return toAjax(postService.updatePost(post));
  ▶ 攻击向量：后续操作未验证post对象的来源和内容，可能导致伪造的岗位信息被更新
  ▶ 修复建议：在调用updatePost之前，确保对post进行完整性和有效性验证

<审计通过>
</审计报告>
2025-02-01T14:36:43.573791+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未验证的用户输入（中危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：如果postIds可以被用户控制，则可能，包括恶意构造的postIds来删除不应删除的记录
  ▶ 修复建议：验证postIds输入格式，并确保是合法的ID集合，且执行前进行适当的权限检查

<审计通过>
</审计报告>
2025-02-01T14:36:43.573791+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：未对postIds进行类型或格式验证，攻击者可传入postIds的恶意值如`'1 OR 1=1'`从而实现删除操作的注入
  ▶ 修复建议：对postIds进行有效性检查，确保其为合法的ID格式

</审计报告>
2025-02-01T14:36:43.573791+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感岗位信息，攻击者可通过接口调用获取岗位数据
  ▶ 修复建议：在返回前对posts进行敏感信息过滤或限制字段暴露

■ 漏洞类型：潜在的空指针异常（中危）
  ▶ 位置：L126
  ▶ 代码特征：
    List<SysPost> posts = postService.selectPostAll();
  ▶ 攻击向量：如果postService.selectPostAll()返回null，后续调用将导致空指针异常
  ▶ 修复建议：在使用前检查posts是否为null

</审计报告>
2025-02-01T14:36:43.573791+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L48-L53
  ▶ 代码特征：
    LoginUser loginUser = getLoginUser();
    SysUser user = loginUser.getUser();
    ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));
    ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));
  ▶ 潜在影响：返回的AjaxResult对象中包含用户的详细信息及角色和岗位组，这可能会导致敏感信息被未授权用户访问。
  ▶ 修复建议：限制返回的用户信息，避免泄露过多敏感数据。

</审计报告>
2025-02-01T14:36:43.577822+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：敏感信息暴露（中危）
  ▶ 位置：L134
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 潜在影响：如果LoginUser对象中含有敏感信息且未经过适当处理，可能导致敏感信息在无授权情况下被访问或泄露。
  ▶ 修复建议：确认LoginUser对象中的敏感信息是否需要进行脱敏处理，或进行适当的权限验证。

■ 漏洞类型：潜在未授权访问（中危）
  ▶ 位置：L63
  ▶ 代码特征：
    LoginUser loginUser = getLoginUser();
  ▶ 攻击向量：如果getLoginUser()方法未做权限控制，攻击者可能通过未授权手段获取登录用户的详细信息。
  ▶ 修复建议：确保getLoginUser()中包含访问控制逻辑，避免未授权用户访问。

</审计报告>
2025-02-01T14:36:43.577822+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L64
  ▶ 代码特征：
    SysUser currentUser = loginUser.getUser();
  ▶ 攻击向量：如果loginUser对象的来源不安全，可能导致敏感用户信息泄露
  ▶ 修复建议：确保loginUser是经过验证的对象，并对返回的用户信息进行适当的脱敏处理。

<审计通过>
</审计报告>
2025-02-01T14:36:43.577822+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L134
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：若loginUser对象中包含敏感信息，且tokenService未适当处理或遮蔽这些信息，可能导致敏感数据泄露。
  ▶ 修复建议：在调用setLoginUser之前，确保loginUser对象不包含任何敏感信息，或使用敏感信息遮蔽策略。

■ 漏洞类型：逻辑错误（低危）
  ▶ 位置：L69
  ▶ 代码特征：
    if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))
  ▶ 攻击向量：若user.getPhonenumber()返回的电话号码存在格式问题，可能导致逻辑判断失效，影响用户数据更新的准确性。
  ▶ 修复建议：增加电话号码格式验证，确保其有效性。
</审计报告>
2025-02-01T14:36:43.577822+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：攻击者可以构造请求获得`loginUser.getUsername()`的暴露信息，利用用户信息进行进一步攻击。
  ▶ 修复建议：避免在错误信息中暴露用户详细信息。

<审计通过>
2025-02-01T14:36:49.570729+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L134, L80
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：如果loginUser对象未经过严格的验证和清理，攻击者可构造恶意用户信息，可能导致敏感信息被篡改或泄露。
  ▶ 修复建议：确保loginUser对象在设置前进行验证和清理，避免记录敏感信息。

</审计报告>
2025-02-01T14:36:49.570729+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：不安全的密码处理（中危）
  ▶ 位置：L98
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
  ▶ 攻击向量：如果password未经过加密处理，则可通过暴力破解等方法获取旧密码
  ▶ 修复建议：确保所有密码在存储和比较时均使用安全哈希函数并加盐处理

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L134
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：如果loginUser包含敏感信息，可能导致敏感信息被意外地记录或泄露
  ▶ 修复建议：确保loginUser中不包含敏感数据，或使用安全方法处理此类数据
</审计报告>
2025-02-01T14:36:49.570729+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：潜在的身份验证绕过（中危）
  ▶ 位置：L134
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：如果loginUser输入未经过严格验证，攻击者可以利用此漏洞覆盖当前登录用户。
  ▶ 修复建议：对loginUser进行身份验证和权限审查，确保用户授权。

■ 漏洞类型：未验证用户输入（中危）
  ▶ 位置：L107
  ▶ 代码特征：
    if (userService.resetUserPwd(userName, newPassword) > 0)
  ▶ 攻击向量：如果userName和newPassword未被验证，攻击者可利用此漏洞对任意用户进行密码重置。
  ▶ 修复建议：增加输入验证和用户权限检查，确保用户确实有权限重置密码。
</审计报告>
2025-02-01T14:36:49.570729+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：文件上传（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：未对上传文件类型和大小进行严格验证，攻击者可上传恶意代码。 
  ▶ 潜在影响：攻击者可通过上传恶意脚本获取服务器权限或执行远程代码。
  ▶ 修复建议：增加对上传文件的MIME类型和文件大小的验证，确保只允许特定格式的图片文件上传。
  
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L134
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：如果tokenService未对loginUser进行严格检查，可能导致未授权用户可以设置任意用户信息。
  ▶ 潜在影响：攻击者可以伪装成其他用户访问或修改敏感数据。
  ▶ 修复建议：在设置登录用户之前，确保进行用户身份验证和权限检查。
</审计报告>
2025-02-01T14:36:49.570729+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：输入验证不足（中危）
  ▶ 位置：L29-L30
  ▶ 代码特征：
    public AjaxResult register(@RequestBody RegisterBody user)
  ▶ 攻击向量：恶意用户可能通过构造包含特殊字符的user对象进行攻击，例如SQL注入或代码执行
  ▶ 修复建议：增加对RegisterBody对象中字段内容的验证，包括长度和格式检查

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L31-L34
  ▶ 代码特征：
    if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))
  ▶ 攻击向量：如果configService的返回值被篡改，攻击者可能会绕过注册限制
  ▶ 修复建议：确保selectConfigByKey返回值在数据源中不能被恶意修改，并记录访问日志以便审计
</审计报告>
2025-02-01T14:36:49.572732+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：未验证的用户输入（高危）
  ▶ 位置：L35
  ▶ 代码特征：
    String msg = registerService.register(user);
  ▶ 攻击向量：恶意用户可以构造包含特殊字符的user对象，导致后端执行不安全操作（如SQL注入、命令注入等），潜在影响包括数据泄露或应用程序崩溃
  ▶ 修复建议：在调用register方法之前，验证和净化用户输入，确保其符合预期格式

</审计报告>
2025-02-01T14:36:49.572732+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：未验证用户输入（中危）
  ▶ 位置：L36
  ▶ 代码特征：
    return StringUtils.isEmpty(msg) ? success() : error(msg);
  ▶ 攻击向量：msg未经过充分验证，攻击者可以在msg中注入恶意代码。
  ▶ 潜在影响：可能导致信息泄露或服务拒绝
  ▶ 修复建议：对msg进行严格的输入验证和清洗
    
<审计通过>
2025-02-01T14:36:49.572732+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺少权限验证（中危）
  ▶ 位置：L58
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:role:list')")
  ▶ 攻击向量：如果权限控制未正确配置，恶意用户可能通过未授权访问接口获取敏感角色数据
  ▶ 修复建议：确保权限验证逻辑覆盖所有调用的安全接口，并进行审计

// 文件路径2
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L258
  ▶ 代码特征：
    ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));
  ▶ 攻击向量：如果roleId不受控，攻击者可枚举部门信息，导致信息泄露
  ▶ 修复建议：添加roleId的合法性验证，确保只有有权限的角色才能访问相应部门信息
</审计报告>
2025-02-01T14:36:49.572732+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：未验证的路径变量（中危）
  ▶ 位置：L255-L258
  ▶ 代码特征：
    public AjaxResult deptTree(@PathVariable("roleId") Long roleId)
  ▶ 攻击向量：未验证的roleId可能导致不必要的角色数据泄露
  ▶ 修复建议：对roleId进行验证，确保其为预期的合法值

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L72
  ▶ 代码特征：
    List<SysRole> list = roleService.selectRoleList(role);
  ▶ 攻击向量：如果role对象包含敏感数据，可能通过未授权角色导出信息
  ▶ 修复建议：对role对象进行合法性检查，并限制导出数据的权限
</审计报告>
2025-02-01T14:36:49.572732+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的输入参数（中危）
  ▶ 位置：L255-L258
  ▶ 代码特征：
    AjaxResult ajax = AjaxResult.success();
    ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));
  ▶ 攻击向量：传入恶意roleId，例如roleId=-1 UNION SELECT * FROM users，可以导致SQL注入或数据泄漏
  ▶ 修复建议：对roleId进行有效性验证，确保传入值在预期范围内

■ 漏洞类型：未验证的输入参数（中危）
  ▶ 位置：L199-L200
  ▶ 代码特征：
    startPage();
    List<SysUser> list = userService.selectAllocatedList(user);
  ▶ 攻击向量：未对user对象进行完整性检查，可能导致信息泄露或数据库查询异常
  ▶ 修复建议：对user对象的关键字段进行非空和格式校验
</审计报告>
2025-02-01T14:36:56.205213+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：路径遍历（中危）
  ▶ 位置：L258
  ▶ 代码特征：
    ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));
  ▶ 攻击向量：构造roleId的值为非法输入，例如使用负数或超大正整数，可能导致服务层数据查询异常
  ▶ 修复建议：验证roleId的有效性，确保其在合理范围内，并限制输入格式

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L255
  ▶ 代码特征：
    public AjaxResult deptTree(@PathVariable("roleId") Long roleId)
  ▶ 攻击向量：未验证roleId的输入来源，可能被恶意用户构造请求造成服务错误的查询
  ▶ 修复建议：添加roleId的输入验证逻辑，确保其为有效的角色ID
</审计报告>
2025-02-01T14:36:56.205213+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：潜在SQL注入（高危）
  ▶ 位置：L64
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：如果user对象未经过适当验证和清理，攻击者可以通过构造恶意的user对象，例如包含特殊字符的用户名字段，进行SQL注入攻击。
  ▶ 修复建议：对user对象进行严格验证，确保其字段符合预期格式，并使用参数化查询或ORM框架来避免SQL注入。

<审计通过>
2025-02-01T14:36:56.205213+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：输出路径注入（高危）
  ▶ 位置：L73-L75
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
    util.exportExcel(response, list, "用户数据");
  ▶ 攻击向量：如果user中包含恶意参数，可构造类似user='; rm -rf /'的输入引发文件路径注入
  ▶ 潜在影响：攻击者可以利用此漏洞造成拒绝服务（DoS），或者文件系统破坏
  ▶ 修复建议：对用户输入进行严格验证和过滤，确保不包含恶意字符

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L73
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：如果user输入未经过滤，攻击者可能获取系统中所有用户信息
  ▶ 潜在影响：用户的隐私信息可能被泄露，导致社工攻击和身份盗窃
  ▶ 修复建议：对用户输入进行验证，并限制返回的用户数据范围

</审计报告>
2025-02-01T14:36:56.205213+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    deptService.checkDeptDataScope(user.getDeptId());
  ▶ 攻击向量：如果user.getDeptId()返回恶意值，可能会导致越权访问
  ▶ 修复建议：在调用checkDeptDataScope前进行用户权限和deptId的有效性验证

■ 漏洞类型：缺乏权限控制（中危）
  ▶ 位置：L254
  ▶ 代码特征：
    return success(deptService.selectDeptTreeList(dept));
  ▶ 攻击向量：未验证dept参数的权限，可能导致未授权的信息泄露
  ▶ 修复建议：增加对dept参数的权限校验

</审计报告>
2025-02-01T14:36:56.205213+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L128-L129
  ▶ 代码特征：
    roleService.checkRoleDataScope(user.getRoleIds());
    if (!userService.checkUserNameUnique(user))
  ▶ 攻击向量：若未对用户角色进行严格验证，恶意用户可能通过构造请求来访问或修改其未授权的数据
  ▶ 修复建议：加强角色数据范围验证，确保用户只能访问其权限范围内的数据

■ 漏洞类型：潜在数据泄露（中危）
  ▶ 位置：L254
  ▶ 代码特征：
    return success(deptService.selectDeptTreeList(dept));
  ▶ 攻击向量：dept参数未经过严格验证，恶意用户可能构造请求来获取敏感部门信息
  ▶ 修复建议：对dept参数进行严格验证与过滤，避免数据泄露
</审计报告>
2025-02-01T14:36:56.209403+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L111
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：错误信息可能泄露系统内部实现细节，攻击者可基于此进行社会工程学攻击
  ▶ 修复建议：提供更加通用的错误信息，如“操作失败”

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L46
  ▶ 代码特征：
    return R.ok(userList);
  ▶ 攻击向量：如果没有权限控制，未授权用户可能获取敏感用户数据
  ▶ 修复建议：加入权限校验逻辑
</审计报告>
2025-02-01T14:36:56.209403+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：缺乏用户输入验证（中危）
  ▶ 位置：L111
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：攻击者可利用输入进行拒绝服务攻击或信息泄露
  ▶ 修复建议：增加用户输入的有效性检验，在给出失败提示前先检查用户是否存在

■ 漏洞类型：缺乏用户输入验证（中危）
  ▶ 位置：L60
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：攻击者可借此点攻击可能导致滥用服务
  ▶ 修复建议：增加用户输入的有效性检验，避免因用户不存在而频繁调用此方法
</审计报告>
2025-02-01T14:36:56.209403+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：设置mobile参数未进行格式检查，可能导致不合规的手机号格式。
  ▶ 潜在影响：攻击者可注入恶意数据，导致数据完整性受损，并可能触发后续逻辑错误。

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L144-L146
  ▶ 代码特征：
    return userId;
  ▶ 攻击向量：getUserId方法未对userId进行合理性验证，可能返回未授权用户的ID信息。
  ▶ 潜在影响：未授权访问敏感信息，可能导致信息泄露。

</审计报告>
2025-02-01T14:36:56.209403+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：输入验证不足（中危）
  ▶ 位置：L180-L182, L149-L152
  ▶ 代码特征：
    public void setMobile(String mobile) {
        this.mobile = mobile;
    }
    public void setUserId(Integer userId) {
        this.userId = userId;
    }
  ▶ 攻击向量：通过直接调用setMobile或setUserId方法注入恶意数据，例如设置mobile为非法格式电话或userId为负值，可能导致数据一致性问题。
  ▶ 修复建议：在设置用户手机和用户ID时，增加输入验证，确保输入数据符合预期格式。

</审计报告>
2025-02-01T14:36:56.209403+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：输入验证不足（中危）
  ▶ 位置：L181
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未验证mobile的格式，可能导致恶意输入如非数字字符的手机号码
  ▶ 潜在影响：数据库或业务逻辑错误，影响数据完整性
  ▶ 修复建议：在赋值前增加对mobile的格式验证

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L156
  ▶ 代码特征：
    return username;
  ▶ 攻击向量：未检查username是否为null，直接返回可能导致NullPointerException
  ▶ 潜在影响：导致系统崩溃或服务不可用
  ▶ 修复建议：在返回之前添加null检查，如if (username != null) { return username; } else { return ""; }

</审计报告>
2025-02-01T14:37:01.962781+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L181
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未对mobile进行有效验证和过滤，恶意用户可输入敏感信息进行欺骗
  ▶ 修复建议：在设置mobile前进行合法性检查与格式验证

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L161
  ▶ 代码特征：
    this.username = username;
  ▶ 攻击向量：未对username进行有效验证和过滤，可能导致用户信息被伪造
  ▶ 修复建议：在设置username前进行合法性检查与格式验证
</审计报告>
2025-02-01T14:37:01.962781+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L164-L166
  ▶ 代码特征：
    return password;
  ▶ 攻击向量：若password未经过加密存储，攻击者可以通过未授权访问直接获取用户密码
  ▶ 修复建议：应确保密码被加密后再返回，使用哈希函数如BCrypt处理密码

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：如果mobile参数未经过有效性检测，攻击者可以设置不合法的手机号（如SQL注入或无效格式）
  ▶ 修复建议：在设置手机号之前，加入格式和有效性验证
</审计报告>
2025-02-01T14:37:01.962781+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L181
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未对mobile变量进行格式验证，可能导致不合法的手机号码被设置
  ▶ 修复建议：在设置mobile前加入正则表达式验证，确保其为有效的手机号码格式

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L171
  ▶ 代码特征：
    this.password = password;
  ▶ 攻击向量：未对password变量进行强度验证，可能允许弱密码设置
  ▶ 修复建议：在设置password前进行强度检验，例如检查长度、特殊字符等
</审计报告>
2025-02-01T14:37:01.962781+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L180
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：如果mobile值未经过验证，可能导致恶意值被设置，影响系统的稳定性和功能
  ▶ 修复建议：对mobile进行格式验证和清洗

<审计通过>
2025-02-01T14:37:01.962781+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:37:01.962781+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：安全敏感数据暴露（中危）
  ▶ 位置：L53-L63
  ▶ 代码特征：
    .enable(enabled)
    .paths(PathSelectors.any())
  ▶ 攻击向量：Swagger接口文档暴露了所有API，可能导致攻击者获取敏感接口信息
  ▶ 修复建议：限制暴露的API接口，使用条件控制启用Swagger文档

■ 漏洞类型：依赖注入敏感配置（信息）
  ▶ 位置：L34-L35
  ▶ 代码特征：
    @Autowired
    private RuoYiConfig ruoyiConfig;
  ▶ 攻击向量：RuoYiConfig中可能包含敏感配置信息，需检查其访问控制
  ▶ 修复建议：确保RuoYiConfig中的敏感信息受到保护，并限制恶意访问
</审计报告>
2025-02-01T14:37:01.968738+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：敏感信息泄露（中危）
  ▶ 位置：L120
  ▶ 代码特征：
    .contact(new Contact(ruoyiConfig.getName(), null, null))
  ▶ 攻击向量：ruoyiConfig.getName()可能包含敏感信息，如果该信息暴露在API文档中，攻击者可以利用 
  ▶ 修复建议：确保不在公开API文档中展示敏感信息，考虑使用占位符或移除联系信息。

<审计通过>
<审计通过> 
</审计报告>
2025-02-01T14:37:01.968738+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L53-L54
  ▶ 代码特征：
    .apiInfo(apiInfo())
  ▶ 攻击向量：如果apiInfo()方法返回的信息包含敏感数据，可能被恶意用户访问
  ▶ 修复建议：确保apiInfo()方法返回的信息不会公开敏感信息

■ 漏洞类型：安全性不足（低危）
  ▶ 位置：L67
  ▶ 代码特征：
    .securityContexts(securityContexts())
  ▶ 攻击向量：未验证的安全上下文可能导致未授权访问接口
  ▶ 修复建议：应确保securityContexts()方法返回的安全上下文经过严格审核并正确配置
</审计报告>
2025-02-01T14:37:01.968738+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：暴露敏感信息（中危）
  ▶ 位置：L63-L67
  ▶ 代码特征：
    .paths(PathSelectors.any())
  ▶ 攻击向量：未限制的接口路径可能导致敏感API被外部发现，攻击者可通过Swagger UI获取到详细的API信息
  ▶ 修复建议：限制暴露的接口路径，使用具体路径而非PathSelectors.any()

■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L67-L68
  ▶ 代码特征：
    .securityContexts(securityContexts())
  ▶ 攻击向量：如果securityContexts()未正确配置安全认证，攻击者可以绕过身份验证访问API
  ▶ 修复建议：确保securityContexts()返回的安全上下文配置完整，并添加必要的身份验证机制
</审计报告>
2025-02-01T14:37:01.968738+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L57-L63
  ▶ 代码特征：
    .select()
    .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))
    .paths(PathSelectors.any())
  ▶ 攻击向量：所有接口暴露给Swagger展示，攻击者可以查看API实现，潜在敏感信息和接口行为
  ▶ 修复建议：限制可展示的API路径，使用具体的路径选择以降低信息泄露风险

■ 漏洞类型：安全上下文配置不当（中危）
  ▶ 位置：L67-L68
  ▶ 代码特征：
    .securityContexts(securityContexts())
    .pathMapping(pathMapping);
  ▶ 攻击向量：如果securityContexts()方法未正确配置，可能导致API在未授权情况下暴露
  ▶ 修复建议：确保securityContexts()中的上下文安全配置正确，使用适当的JWT或OAuth配置

</审计报告>
2025-02-01T14:37:07.017623+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：敏感信息暴露（中危）
  ▶ 位置：L57-L63
  ▶ 代码特征：
    .paths(PathSelectors.any())
  ▶ 攻击向量：可能导致未授权的API被暴露，攻击者可获取敏感数据
  ▶ 修复建议：限制暴露的API路径，使用具体路径过滤

■ 漏洞类型：配置不当（信息）
  ▶ 位置：L65
  ▶ 代码特征：
    .securityContexts(securityContexts())
  ▶ 攻击向量：安全上下文配置不充分，可能导致API访问控制失效
  ▶ 修复建议：确保securityContexts方法正确配置身份验证和权限控制
</审计报告>
2025-02-01T14:37:07.017623+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L120
  ▶ 代码特征：
    .contact(new Contact(ruoyiConfig.getName(), null, null))
  ▶ 攻击向量：ruoyiConfig.getName()可能返回敏感信息，如用户数据或系统信息，若该信息不应被公开则存在泄露风险
  ▶ 修复建议：确保ruoyiConfig.getName()返回的信息不包含敏感数据，或在生产环境中进行适当控制

<审计通过>
2025-02-01T14:37:07.017623+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：权限提升（中危）
  ▶ 位置：L104
  ▶ 代码特征：
    securityReferences.add(new SecurityReference("Authorization", authorizationScopes));
  ▶ 攻击向量：未对authorizationScopes的内容进行严格验证和限制，可能允许未授权用户访问敏感接口
  ▶ 修复建议：在添加SecurityReference之前，验证authorizationScopes是否包含合法的授权范围。

<审计通过>
</审计报告>
2025-02-01T14:37:07.018618+0800 | INFO | Agent_2计算完毕，输出文件:./output/ccbd72ea49cd2e4f9a756a65bfba1dd6_审计结果.log
2025-02-01T14:41:15.495958+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:41:15.496967+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:41:15.496967+0800 | INFO | 当前命令行模式:True
2025-02-01T14:41:15.496967+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:41:15.497964+0800 | INFO | 当前输出文件:./output
2025-02-01T14:41:15.513223+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:41:15.513223+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:41:15.513223+0800 | INFO | 调用异步处理Agent_1...
2025-02-01T14:41:15.514141+0800 | INFO | 当前batch_size:10
2025-02-01T14:41:15.514141+0800 | DEBUG | [SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', name='pom.xml', source_code=' 1: <?xml version="1.0" encoding="UTF-8"?>\n 2: <project xmlns="http://maven.apache.org/POM/4.0.0"\n 3:          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n 4:          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n 5:     <parent>\n 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>\n10:     <modelVersion>4.0.0</modelVersion>\n11:     <packaging>jar</packaging>\n12:     <artifactId>ruoyi-admin</artifactId>\n13: \n14:     <description>\n15:         web服务入口\n16:     </description>\n17: \n18:     <dependencies>\n19: \n20:         <!-- spring-boot-devtools -->\n21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>\n26: \n27:         <!-- swagger3-->\n28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>\n32: \n33:         <!-- 防止进入swagger页面报类型转换错误，排除3.0.0中的引用，手动增加1.6.2版本 -->\n34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>\n39: \n40:          <!-- Mysql驱动包 -->\n41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>\n45: \n46:         <!-- 核心模块-->\n47:         <dependency>\n48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>\n51: \n52:         <!-- 定时任务-->\n53:         <dependency>\n54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>\n57: \n58:         <!-- 代码生成-->\n59:         <dependency>\n60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>\n63: \n64:     </dependencies>\n65: \n66:     <build>\n67:         <plugins>\n68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n73:                     <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->\n74:                 </configuration>\n75:                 <executions>\n76:                     <execution>\n77:                         <goals>\n78:                             <goal>repackage</goal>\n79:                         </goals>\n80:                     </execution>\n81:                 </executions>\n82:             </plugin>\n83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n92:         </plugins>\n93:         <finalName>${project.artifactId}</finalName>\n94:     </build>\n95: \n96: </project>', extension='.xml'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', name='logback.xml', source_code=' 1: <?xml version="1.0" encoding="UTF-8"?>\n 2: <configuration>\n 3:     <!-- 日志存放路径 -->\n 4: \t<property name="log.path" value="/home/ruoyi/logs" />\n 5:     <!-- 日志输出格式 -->\n 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n 7: \n 8: \t<!-- 控制台输出 -->\n 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n14: \t\n15: \t<!-- 系统日志输出 -->\n16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n37: \t\n38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>\n59: \t\n60: \t<!-- 用户访问日志输出  -->\n61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n73: \t\n74: \t<!-- 系统模块日志级别控制  -->\n75: \t<logger name="com.ruoyi" level="info" />\n76: \t<!-- Spring日志级别控制  -->\n77: \t<logger name="org.springframework" level="warn" />\n78: \n79: \t<root level="info">\n80: \t\t<appender-ref ref="console" />\n81: \t</root>\n82: \t\n83: \t<!--系统操作日志-->\n84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n87:     </root>\n88: \t\n89: \t<!--系统用户操作日志-->\n90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n93: </configuration> ', extension='.xml'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml', name='mybatis-config.xml', source_code=' 1: <?xml version="1.0" encoding="UTF-8" ?>\n 2: <!DOCTYPE configuration\n 3: PUBLIC "-//mybatis.org//DTD Config 3.0//EN"\n 4: "http://mybatis.org/dtd/mybatis-3-config.dtd">\n 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n19: \t\n20: </configuration>', extension='.xml'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java', name='RuoYiApplication.java', source_code=' 1: package com.ruoyi;\n 2: \n 3: import org.springframework.boot.SpringApplication;\n 4: import org.springframework.boot.autoconfigure.SpringBootApplication;\n 5: import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\n 6: \n 7: /**\n 8:  * 启动程序\n 9:  * \n10:  * @author ruoyi\n11:  */\n12: @SpringBootApplication(exclude = { DataSourceAutoConfiguration.class })\n13: public class RuoYiApplication\n14: {\n15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n19:         System.out.println("(♥◠‿◠)ﾉﾞ  若依启动成功   ლ(´ڡ`ლ)ﾞ  \\n" +\n20:                 " .-------.       ____     __        \\n" +\n21:                 " |  _ _   \\\\      \\\\   \\\\   /  /    \\n" +\n22:                 " | ( \' )  |       \\\\  _. /  \'       \\n" +\n23:                 " |(_ o _) /        _( )_ .\'         \\n" +\n24:                 " | (_,_).\' __  ___(_ o _)\'          \\n" +\n25:                 " |  |\\\\ \\\\  |  ||   |(_,_)\'         \\n" +\n26:                 " |  | \\\\ `\'   /|   `-\'  /           \\n" +\n27:                 " |  |  \\\\    /  \\\\      /           \\n" +\n28:                 " \'\'-\'   `\'-\'    `-..-\'              ");\n29:     }\n30: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java', name='RuoYiServletInitializer.java', source_code=' 1: package com.ruoyi;\n 2: \n 3: import org.springframework.boot.builder.SpringApplicationBuilder;\n 4: import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n 5: \n 6: /**\n 7:  * web容器中进行部署\n 8:  * \n 9:  * @author ruoyi\n10:  */\n11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java', name='CaptchaController.java', source_code=' 1: package com.ruoyi.web.controller.common;\n 2: \n 3: import java.awt.image.BufferedImage;\n 4: import java.io.IOException;\n 5: import java.util.concurrent.TimeUnit;\n 6: import javax.annotation.Resource;\n 7: import javax.imageio.ImageIO;\n 8: import javax.servlet.http.HttpServletResponse;\n 9: import org.springframework.beans.factory.annotation.Autowired;\n10: import org.springframework.util.FastByteArrayOutputStream;\n11: import org.springframework.web.bind.annotation.GetMapping;\n12: import org.springframework.web.bind.annotation.RestController;\n13: import com.google.code.kaptcha.Producer;\n14: import com.ruoyi.common.config.RuoYiConfig;\n15: import com.ruoyi.common.constant.CacheConstants;\n16: import com.ruoyi.common.constant.Constants;\n17: import com.ruoyi.common.core.domain.AjaxResult;\n18: import com.ruoyi.common.core.redis.RedisCache;\n19: import com.ruoyi.common.utils.sign.Base64;\n20: import com.ruoyi.common.utils.uuid.IdUtils;\n21: import com.ruoyi.system.service.ISysConfigService;\n22: \n23: /**\n24:  * 验证码操作处理\n25:  * \n26:  * @author ruoyi\n27:  */\n28: @RestController\n29: public class CaptchaController\n30: {\n31:     @Resource(name = "captchaProducer")\n32:     private Producer captchaProducer;\n33: \n34:     @Resource(name = "captchaProducerMath")\n35:     private Producer captchaProducerMath;\n36: \n37:     @Autowired\n38:     private RedisCache redisCache;\n39:     \n40:     @Autowired\n41:     private ISysConfigService configService;\n42:     /**\n43:      * 生成验证码\n44:      */\n45:     @GetMapping("/captchaImage")\n46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n93:     }\n94: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', name='CommonController.java', source_code='  1: package com.ruoyi.web.controller.common;\n  2: \n  3: import java.util.ArrayList;\n  4: import java.util.List;\n  5: import javax.servlet.http.HttpServletRequest;\n  6: import javax.servlet.http.HttpServletResponse;\n  7: import org.slf4j.Logger;\n  8: import org.slf4j.LoggerFactory;\n  9: import org.springframework.beans.factory.annotation.Autowired;\n 10: import org.springframework.http.MediaType;\n 11: import org.springframework.web.bind.annotation.GetMapping;\n 12: import org.springframework.web.bind.annotation.PostMapping;\n 13: import org.springframework.web.bind.annotation.RequestMapping;\n 14: import org.springframework.web.bind.annotation.RestController;\n 15: import org.springframework.web.multipart.MultipartFile;\n 16: import com.ruoyi.common.config.RuoYiConfig;\n 17: import com.ruoyi.common.constant.Constants;\n 18: import com.ruoyi.common.core.domain.AjaxResult;\n 19: import com.ruoyi.common.utils.StringUtils;\n 20: import com.ruoyi.common.utils.file.FileUploadUtils;\n 21: import com.ruoyi.common.utils.file.FileUtils;\n 22: import com.ruoyi.framework.config.ServerConfig;\n 23: \n 24: /**\n 25:  * 通用请求处理\n 26:  * \n 27:  * @author ruoyi\n 28:  */\n 29: @RestController\n 30: @RequestMapping("/common")\n 31: public class CommonController\n 32: {\n 33:     private static final Logger log = LoggerFactory.getLogger(CommonController.class);\n 34: \n 35:     @Autowired\n 36:     private ServerConfig serverConfig;\n 37: \n 38:     private static final String FILE_DELIMETER = ",";\n 39: \n 40:     /**\n 41:      * 通用下载请求\n 42:      * \n 43:      * @param fileName 文件名称\n 44:      * @param delete 是否删除\n 45:      */\n 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n 71: \n 72:     /**\n 73:      * 通用上传请求（单个）\n 74:      */\n 75:     @PostMapping("/upload")\n 76:     public AjaxResult uploadFile(MultipartFile file) throws Exception\n 77:     {\n 78:         try\n 79:         {\n 80:             // 上传文件路径\n 81:             String filePath = RuoYiConfig.getUploadPath();\n 82:             // 上传并返回新文件名称\n 83:             String fileName = FileUploadUtils.upload(filePath, file);\n 84:             String url = serverConfig.getUrl() + fileName;\n 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n 91:         }\n 92:         catch (Exception e)\n 93:         {\n 94:             return AjaxResult.error(e.getMessage());\n 95:         }\n 96:     }\n 97: \n 98:     /**\n 99:      * 通用上传请求（多个）\n100:      */\n101:     @PostMapping("/uploads")\n102:     public AjaxResult uploadFiles(List<MultipartFile> files) throws Exception\n103:     {\n104:         try\n105:         {\n106:             // 上传文件路径\n107:             String filePath = RuoYiConfig.getUploadPath();\n108:             List<String> urls = new ArrayList<String>();\n109:             List<String> fileNames = new ArrayList<String>();\n110:             List<String> newFileNames = new ArrayList<String>();\n111:             List<String> originalFilenames = new ArrayList<String>();\n112:             for (MultipartFile file : files)\n113:             {\n114:                 // 上传并返回新文件名称\n115:                 String fileName = FileUploadUtils.upload(filePath, file);\n116:                 String url = serverConfig.getUrl() + fileName;\n117:                 urls.add(url);\n118:                 fileNames.add(fileName);\n119:                 newFileNames.add(FileUtils.getName(fileName));\n120:                 originalFilenames.add(file.getOriginalFilename());\n121:             }\n122:             AjaxResult ajax = AjaxResult.success();\n123:             ajax.put("urls", StringUtils.join(urls, FILE_DELIMETER));\n124:             ajax.put("fileNames", StringUtils.join(fileNames, FILE_DELIMETER));\n125:             ajax.put("newFileNames", StringUtils.join(newFileNames, FILE_DELIMETER));\n126:             ajax.put("originalFilenames", StringUtils.join(originalFilenames, FILE_DELIMETER));\n127:             return ajax;\n128:         }\n129:         catch (Exception e)\n130:         {\n131:             return AjaxResult.error(e.getMessage());\n132:         }\n133:     }\n134: \n135:     /**\n136:      * 本地资源通用下载\n137:      */\n138:     @GetMapping("/download/resource")\n139:     public void resourceDownload(String resource, HttpServletRequest request, HttpServletResponse response)\n140:             throws Exception\n141:     {\n142:         try\n143:         {\n144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));\n147:             }\n148:             // 本地资源路径\n149:             String localPath = RuoYiConfig.getProfile();\n150:             // 数据库资源地址\n151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);\n152:             // 下载名称\n153:             String downloadName = StringUtils.substringAfterLast(downloadPath, "/");\n154:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n157:         }\n158:         catch (Exception e)\n159:         {\n160:             log.error("下载文件失败", e);\n161:         }\n162:     }\n163: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', name='CacheController.java', source_code='  1: package com.ruoyi.web.controller.monitor;\n  2: \n  3: import java.util.ArrayList;\n  4: import java.util.Collection;\n  5: import java.util.HashMap;\n  6: import java.util.List;\n  7: import java.util.Map;\n  8: import java.util.Properties;\n  9: import java.util.Set;\n 10: import java.util.TreeSet;\n 11: import org.springframework.beans.factory.annotation.Autowired;\n 12: import org.springframework.data.redis.core.RedisCallback;\n 13: import org.springframework.data.redis.core.RedisTemplate;\n 14: import org.springframework.security.access.prepost.PreAuthorize;\n 15: import org.springframework.web.bind.annotation.DeleteMapping;\n 16: import org.springframework.web.bind.annotation.GetMapping;\n 17: import org.springframework.web.bind.annotation.PathVariable;\n 18: import org.springframework.web.bind.annotation.RequestMapping;\n 19: import org.springframework.web.bind.annotation.RestController;\n 20: import com.ruoyi.common.constant.CacheConstants;\n 21: import com.ruoyi.common.core.domain.AjaxResult;\n 22: import com.ruoyi.common.utils.StringUtils;\n 23: import com.ruoyi.system.domain.SysCache;\n 24: \n 25: /**\n 26:  * 缓存监控\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/monitor/cache")\n 32: public class CacheController\n 33: {\n 34:     @Autowired\n 35:     private RedisTemplate<String, String> redisTemplate;\n 36: \n 37:     private final static List<SysCache> caches = new ArrayList<SysCache>();\n 38:     {\n 39:         caches.add(new SysCache(CacheConstants.LOGIN_TOKEN_KEY, "用户信息"));\n 40:         caches.add(new SysCache(CacheConstants.SYS_CONFIG_KEY, "配置信息"));\n 41:         caches.add(new SysCache(CacheConstants.SYS_DICT_KEY, "数据字典"));\n 42:         caches.add(new SysCache(CacheConstants.CAPTCHA_CODE_KEY, "验证码"));\n 43:         caches.add(new SysCache(CacheConstants.REPEAT_SUBMIT_KEY, "防重提交"));\n 44:         caches.add(new SysCache(CacheConstants.RATE_LIMIT_KEY, "限流处理"));\n 45:         caches.add(new SysCache(CacheConstants.PWD_ERR_CNT_KEY, "密码错误次数"));\n 46:     }\n 47: \n 48:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 49:     @GetMapping()\n 50:     public AjaxResult getInfo() throws Exception\n 51:     {\n 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n 55: \n 56:         Map<String, Object> result = new HashMap<>(3);\n 57:         result.put("info", info);\n 58:         result.put("dbSize", dbSize);\n 59: \n 60:         List<Map<String, String>> pieList = new ArrayList<>();\n 61:         commandStats.stringPropertyNames().forEach(key -> {\n 62:             Map<String, String> data = new HashMap<>(2);\n 63:             String property = commandStats.getProperty(key);\n 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n 66:             pieList.add(data);\n 67:         });\n 68:         result.put("commandStats", pieList);\n 69:         return AjaxResult.success(result);\n 70:     }\n 71: \n 72:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 73:     @GetMapping("/getNames")\n 74:     public AjaxResult cache()\n 75:     {\n 76:         return AjaxResult.success(caches);\n 77:     }\n 78: \n 79:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 80:     @GetMapping("/getKeys/{cacheName}")\n 81:     public AjaxResult getCacheKeys(@PathVariable String cacheName)\n 82:     {\n 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n 84:         return AjaxResult.success(new TreeSet<>(cacheKeys));\n 85:     }\n 86: \n 87:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 88:     @GetMapping("/getValue/{cacheName}/{cacheKey}")\n 89:     public AjaxResult getCacheValue(@PathVariable String cacheName, @PathVariable String cacheKey)\n 90:     {\n 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);\n 92:         SysCache sysCache = new SysCache(cacheName, cacheKey, cacheValue);\n 93:         return AjaxResult.success(sysCache);\n 94:     }\n 95: \n 96:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 97:     @DeleteMapping("/clearCacheName/{cacheName}")\n 98:     public AjaxResult clearCacheName(@PathVariable String cacheName)\n 99:     {\n100:         Collection<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n101:         redisTemplate.delete(cacheKeys);\n102:         return AjaxResult.success();\n103:     }\n104: \n105:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n106:     @DeleteMapping("/clearCacheKey/{cacheKey}")\n107:     public AjaxResult clearCacheKey(@PathVariable String cacheKey)\n108:     {\n109:         redisTemplate.delete(cacheKey);\n110:         return AjaxResult.success();\n111:     }\n112: \n113:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n114:     @DeleteMapping("/clearCacheAll")\n115:     public AjaxResult clearCacheAll()\n116:     {\n117:         Collection<String> cacheKeys = redisTemplate.keys("*");\n118:         redisTemplate.delete(cacheKeys);\n119:         return AjaxResult.success();\n120:     }\n121: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java', name='ServerController.java', source_code=' 1: package com.ruoyi.web.controller.monitor;\n 2: \n 3: import org.springframework.security.access.prepost.PreAuthorize;\n 4: import org.springframework.web.bind.annotation.GetMapping;\n 5: import org.springframework.web.bind.annotation.RequestMapping;\n 6: import org.springframework.web.bind.annotation.RestController;\n 7: import com.ruoyi.common.core.domain.AjaxResult;\n 8: import com.ruoyi.framework.web.domain.Server;\n 9: \n10: /**\n11:  * 服务器监控\n12:  * \n13:  * @author ruoyi\n14:  */\n15: @RestController\n16: @RequestMapping("/monitor/server")\n17: public class ServerController\n18: {\n19:     @PreAuthorize("@ss.hasPermi(\'monitor:server:list\')")\n20:     @GetMapping()\n21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n26:     }\n27: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java', name='SysLogininforController.java', source_code=' 1: package com.ruoyi.web.controller.monitor;\n 2: \n 3: import java.util.List;\n 4: import javax.servlet.http.HttpServletResponse;\n 5: import org.springframework.beans.factory.annotation.Autowired;\n 6: import org.springframework.security.access.prepost.PreAuthorize;\n 7: import org.springframework.web.bind.annotation.DeleteMapping;\n 8: import org.springframework.web.bind.annotation.GetMapping;\n 9: import org.springframework.web.bind.annotation.PathVariable;\n10: import org.springframework.web.bind.annotation.PostMapping;\n11: import org.springframework.web.bind.annotation.RequestMapping;\n12: import org.springframework.web.bind.annotation.RestController;\n13: import com.ruoyi.common.annotation.Log;\n14: import com.ruoyi.common.core.controller.BaseController;\n15: import com.ruoyi.common.core.domain.AjaxResult;\n16: import com.ruoyi.common.core.page.TableDataInfo;\n17: import com.ruoyi.common.enums.BusinessType;\n18: import com.ruoyi.common.utils.poi.ExcelUtil;\n19: import com.ruoyi.framework.web.service.SysPasswordService;\n20: import com.ruoyi.system.domain.SysLogininfor;\n21: import com.ruoyi.system.service.ISysLogininforService;\n22: \n23: /**\n24:  * 系统访问记录\n25:  * \n26:  * @author ruoyi\n27:  */\n28: @RestController\n29: @RequestMapping("/monitor/logininfor")\n30: public class SysLogininforController extends BaseController\n31: {\n32:     @Autowired\n33:     private ISysLogininforService logininforService;\n34: \n35:     @Autowired\n36:     private SysPasswordService passwordService;\n37: \n38:     @PreAuthorize("@ss.hasPermi(\'monitor:logininfor:list\')")\n39:     @GetMapping("/list")\n40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);\n45:     }\n46: \n47:     @Log(title = "登录日志", businessType = BusinessType.EXPORT)\n48:     @PreAuthorize("@ss.hasPermi(\'monitor:logininfor:export\')")\n49:     @PostMapping("/export")\n50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");\n55:     }\n56: \n57:     @PreAuthorize("@ss.hasPermi(\'monitor:logininfor:remove\')")\n58:     @Log(title = "登录日志", businessType = BusinessType.DELETE)\n59:     @DeleteMapping("/{infoIds}")\n60:     public AjaxResult remove(@PathVariable Long[] infoIds)\n61:     {\n62:         return toAjax(logininforService.deleteLogininforByIds(infoIds));\n63:     }\n64: \n65:     @PreAuthorize("@ss.hasPermi(\'monitor:logininfor:remove\')")\n66:     @Log(title = "登录日志", businessType = BusinessType.CLEAN)\n67:     @DeleteMapping("/clean")\n68:     public AjaxResult clean()\n69:     {\n70:         logininforService.cleanLogininfor();\n71:         return success();\n72:     }\n73: \n74:     @PreAuthorize("@ss.hasPermi(\'monitor:logininfor:unlock\')")\n75:     @Log(title = "账户解锁", businessType = BusinessType.OTHER)\n76:     @GetMapping("/unlock/{userName}")\n77:     public AjaxResult unlock(@PathVariable("userName") String userName)\n78:     {\n79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n81:     }\n82: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java', name='SysOperlogController.java', source_code=' 1: package com.ruoyi.web.controller.monitor;\n 2: \n 3: import java.util.List;\n 4: import javax.servlet.http.HttpServletResponse;\n 5: import org.springframework.beans.factory.annotation.Autowired;\n 6: import org.springframework.security.access.prepost.PreAuthorize;\n 7: import org.springframework.web.bind.annotation.DeleteMapping;\n 8: import org.springframework.web.bind.annotation.GetMapping;\n 9: import org.springframework.web.bind.annotation.PathVariable;\n10: import org.springframework.web.bind.annotation.PostMapping;\n11: import org.springframework.web.bind.annotation.RequestMapping;\n12: import org.springframework.web.bind.annotation.RestController;\n13: import com.ruoyi.common.annotation.Log;\n14: import com.ruoyi.common.core.controller.BaseController;\n15: import com.ruoyi.common.core.domain.AjaxResult;\n16: import com.ruoyi.common.core.page.TableDataInfo;\n17: import com.ruoyi.common.enums.BusinessType;\n18: import com.ruoyi.common.utils.poi.ExcelUtil;\n19: import com.ruoyi.system.domain.SysOperLog;\n20: import com.ruoyi.system.service.ISysOperLogService;\n21: \n22: /**\n23:  * 操作日志记录\n24:  * \n25:  * @author ruoyi\n26:  */\n27: @RestController\n28: @RequestMapping("/monitor/operlog")\n29: public class SysOperlogController extends BaseController\n30: {\n31:     @Autowired\n32:     private ISysOperLogService operLogService;\n33: \n34:     @PreAuthorize("@ss.hasPermi(\'monitor:operlog:list\')")\n35:     @GetMapping("/list")\n36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);\n41:     }\n42: \n43:     @Log(title = "操作日志", businessType = BusinessType.EXPORT)\n44:     @PreAuthorize("@ss.hasPermi(\'monitor:operlog:export\')")\n45:     @PostMapping("/export")\n46:     public void export(HttpServletResponse response, SysOperLog operLog)\n47:     {\n48:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n49:         ExcelUtil<SysOperLog> util = new ExcelUtil<SysOperLog>(SysOperLog.class);\n50:         util.exportExcel(response, list, "操作日志");\n51:     }\n52: \n53:     @Log(title = "操作日志", businessType = BusinessType.DELETE)\n54:     @PreAuthorize("@ss.hasPermi(\'monitor:operlog:remove\')")\n55:     @DeleteMapping("/{operIds}")\n56:     public AjaxResult remove(@PathVariable Long[] operIds)\n57:     {\n58:         return toAjax(operLogService.deleteOperLogByIds(operIds));\n59:     }\n60: \n61:     @Log(title = "操作日志", businessType = BusinessType.CLEAN)\n62:     @PreAuthorize("@ss.hasPermi(\'monitor:operlog:remove\')")\n63:     @DeleteMapping("/clean")\n64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n67:         return success();\n68:     }\n69: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', name='SysUserOnlineController.java', source_code=' 1: package com.ruoyi.web.controller.monitor;\n 2: \n 3: import java.util.ArrayList;\n 4: import java.util.Collection;\n 5: import java.util.Collections;\n 6: import java.util.List;\n 7: import org.springframework.beans.factory.annotation.Autowired;\n 8: import org.springframework.security.access.prepost.PreAuthorize;\n 9: import org.springframework.web.bind.annotation.DeleteMapping;\n10: import org.springframework.web.bind.annotation.GetMapping;\n11: import org.springframework.web.bind.annotation.PathVariable;\n12: import org.springframework.web.bind.annotation.RequestMapping;\n13: import org.springframework.web.bind.annotation.RestController;\n14: import com.ruoyi.common.annotation.Log;\n15: import com.ruoyi.common.constant.CacheConstants;\n16: import com.ruoyi.common.core.controller.BaseController;\n17: import com.ruoyi.common.core.domain.AjaxResult;\n18: import com.ruoyi.common.core.domain.model.LoginUser;\n19: import com.ruoyi.common.core.page.TableDataInfo;\n20: import com.ruoyi.common.core.redis.RedisCache;\n21: import com.ruoyi.common.enums.BusinessType;\n22: import com.ruoyi.common.utils.StringUtils;\n23: import com.ruoyi.system.domain.SysUserOnline;\n24: import com.ruoyi.system.service.ISysUserOnlineService;\n25: \n26: /**\n27:  * 在线用户监控\n28:  * \n29:  * @author ruoyi\n30:  */\n31: @RestController\n32: @RequestMapping("/monitor/online")\n33: public class SysUserOnlineController extends BaseController\n34: {\n35:     @Autowired\n36:     private ISysUserOnlineService userOnlineService;\n37: \n38:     @Autowired\n39:     private RedisCache redisCache;\n40: \n41:     @PreAuthorize("@ss.hasPermi(\'monitor:online:list\')")\n42:     @GetMapping("/list")\n43:     public TableDataInfo list(String ipaddr, String userName)\n44:     {\n45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");\n46:         List<SysUserOnline> userOnlineList = new ArrayList<SysUserOnline>();\n47:         for (String key : keys)\n48:         {\n49:             LoginUser user = redisCache.getCacheObject(key);\n50:             if (StringUtils.isNotEmpty(ipaddr) && StringUtils.isNotEmpty(userName))\n51:             {\n52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n53:             }\n54:             else if (StringUtils.isNotEmpty(ipaddr))\n55:             {\n56:                 userOnlineList.add(userOnlineService.selectOnlineByIpaddr(ipaddr, user));\n57:             }\n58:             else if (StringUtils.isNotEmpty(userName) && StringUtils.isNotNull(user.getUser()))\n59:             {\n60:                 userOnlineList.add(userOnlineService.selectOnlineByUserName(userName, user));\n61:             }\n62:             else\n63:             {\n64:                 userOnlineList.add(userOnlineService.loginUserToUserOnline(user));\n65:             }\n66:         }\n67:         Collections.reverse(userOnlineList);\n68:         userOnlineList.removeAll(Collections.singleton(null));\n69:         return getDataTable(userOnlineList);\n70:     }\n71: \n72:     /**\n73:      * 强退用户\n74:      */\n75:     @PreAuthorize("@ss.hasPermi(\'monitor:online:forceLogout\')")\n76:     @Log(title = "在线用户", businessType = BusinessType.FORCE)\n77:     @DeleteMapping("/{tokenId}")\n78:     public AjaxResult forceLogout(@PathVariable String tokenId)\n79:     {\n80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n81:         return success();\n82:     }\n83: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', name='SysConfigController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.List;\n  4: import javax.servlet.http.HttpServletResponse;\n  5: import org.springframework.beans.factory.annotation.Autowired;\n  6: import org.springframework.security.access.prepost.PreAuthorize;\n  7: import org.springframework.validation.annotation.Validated;\n  8: import org.springframework.web.bind.annotation.DeleteMapping;\n  9: import org.springframework.web.bind.annotation.GetMapping;\n 10: import org.springframework.web.bind.annotation.PathVariable;\n 11: import org.springframework.web.bind.annotation.PostMapping;\n 12: import org.springframework.web.bind.annotation.PutMapping;\n 13: import org.springframework.web.bind.annotation.RequestBody;\n 14: import org.springframework.web.bind.annotation.RequestMapping;\n 15: import org.springframework.web.bind.annotation.RestController;\n 16: import com.ruoyi.common.annotation.Log;\n 17: import com.ruoyi.common.core.controller.BaseController;\n 18: import com.ruoyi.common.core.domain.AjaxResult;\n 19: import com.ruoyi.common.core.page.TableDataInfo;\n 20: import com.ruoyi.common.enums.BusinessType;\n 21: import com.ruoyi.common.utils.poi.ExcelUtil;\n 22: import com.ruoyi.system.domain.SysConfig;\n 23: import com.ruoyi.system.service.ISysConfigService;\n 24: \n 25: /**\n 26:  * 参数配置 信息操作处理\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/config")\n 32: public class SysConfigController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysConfigService configService;\n 36: \n 37:     /**\n 38:      * 获取参数配置列表\n 39:      */\n 40:     @PreAuthorize("@ss.hasPermi(\'system:config:list\')")\n 41:     @GetMapping("/list")\n 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);\n 47:     }\n 48: \n 49:     @Log(title = "参数管理", businessType = BusinessType.EXPORT)\n 50:     @PreAuthorize("@ss.hasPermi(\'system:config:export\')")\n 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysConfig config)\n 53:     {\n 54:         List<SysConfig> list = configService.selectConfigList(config);\n 55:         ExcelUtil<SysConfig> util = new ExcelUtil<SysConfig>(SysConfig.class);\n 56:         util.exportExcel(response, list, "参数数据");\n 57:     }\n 58: \n 59:     /**\n 60:      * 根据参数编号获取详细信息\n 61:      */\n 62:     @PreAuthorize("@ss.hasPermi(\'system:config:query\')")\n 63:     @GetMapping(value = "/{configId}")\n 64:     public AjaxResult getInfo(@PathVariable Long configId)\n 65:     {\n 66:         return success(configService.selectConfigById(configId));\n 67:     }\n 68: \n 69:     /**\n 70:      * 根据参数键名查询参数值\n 71:      */\n 72:     @GetMapping(value = "/configKey/{configKey}")\n 73:     public AjaxResult getConfigKey(@PathVariable String configKey)\n 74:     {\n 75:         return success(configService.selectConfigByKey(configKey));\n 76:     }\n 77: \n 78:     /**\n 79:      * 新增参数配置\n 80:      */\n 81:     @PreAuthorize("@ss.hasPermi(\'system:config:add\')")\n 82:     @Log(title = "参数管理", businessType = BusinessType.INSERT)\n 83:     @PostMapping\n 84:     public AjaxResult add(@Validated @RequestBody SysConfig config)\n 85:     {\n 86:         if (!configService.checkConfigKeyUnique(config))\n 87:         {\n 88:             return error("新增参数\'" + config.getConfigName() + "\'失败，参数键名已存在");\n 89:         }\n 90:         config.setCreateBy(getUsername());\n 91:         return toAjax(configService.insertConfig(config));\n 92:     }\n 93: \n 94:     /**\n 95:      * 修改参数配置\n 96:      */\n 97:     @PreAuthorize("@ss.hasPermi(\'system:config:edit\')")\n 98:     @Log(title = "参数管理", businessType = BusinessType.UPDATE)\n 99:     @PutMapping\n100:     public AjaxResult edit(@Validated @RequestBody SysConfig config)\n101:     {\n102:         if (!configService.checkConfigKeyUnique(config))\n103:         {\n104:             return error("修改参数\'" + config.getConfigName() + "\'失败，参数键名已存在");\n105:         }\n106:         config.setUpdateBy(getUsername());\n107:         return toAjax(configService.updateConfig(config));\n108:     }\n109: \n110:     /**\n111:      * 删除参数配置\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:config:remove\')")\n114:     @Log(title = "参数管理", businessType = BusinessType.DELETE)\n115:     @DeleteMapping("/{configIds}")\n116:     public AjaxResult remove(@PathVariable Long[] configIds)\n117:     {\n118:         configService.deleteConfigByIds(configIds);\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 刷新参数缓存\n124:      */\n125:     @PreAuthorize("@ss.hasPermi(\'system:config:remove\')")\n126:     @Log(title = "参数管理", businessType = BusinessType.CLEAN)\n127:     @DeleteMapping("/refreshCache")\n128:     public AjaxResult refreshCache()\n129:     {\n130:         configService.resetConfigCache();\n131:         return success();\n132:     }\n133: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java', name='SysDeptController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.List;\n  4: import org.apache.commons.lang3.ArrayUtils;\n  5: import org.springframework.beans.factory.annotation.Autowired;\n  6: import org.springframework.security.access.prepost.PreAuthorize;\n  7: import org.springframework.validation.annotation.Validated;\n  8: import org.springframework.web.bind.annotation.DeleteMapping;\n  9: import org.springframework.web.bind.annotation.GetMapping;\n 10: import org.springframework.web.bind.annotation.PathVariable;\n 11: import org.springframework.web.bind.annotation.PostMapping;\n 12: import org.springframework.web.bind.annotation.PutMapping;\n 13: import org.springframework.web.bind.annotation.RequestBody;\n 14: import org.springframework.web.bind.annotation.RequestMapping;\n 15: import org.springframework.web.bind.annotation.RestController;\n 16: import com.ruoyi.common.annotation.Log;\n 17: import com.ruoyi.common.constant.UserConstants;\n 18: import com.ruoyi.common.core.controller.BaseController;\n 19: import com.ruoyi.common.core.domain.AjaxResult;\n 20: import com.ruoyi.common.core.domain.entity.SysDept;\n 21: import com.ruoyi.common.enums.BusinessType;\n 22: import com.ruoyi.common.utils.StringUtils;\n 23: import com.ruoyi.system.service.ISysDeptService;\n 24: \n 25: /**\n 26:  * 部门信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dept")\n 32: public class SysDeptController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDeptService deptService;\n 36: \n 37:     /**\n 38:      * 获取部门列表\n 39:      */\n 40:     @PreAuthorize("@ss.hasPermi(\'system:dept:list\')")\n 41:     @GetMapping("/list")\n 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n 45:         return success(depts);\n 46:     }\n 47: \n 48:     /**\n 49:      * 查询部门列表（排除节点）\n 50:      */\n 51:     @PreAuthorize("@ss.hasPermi(\'system:dept:list\')")\n 52:     @GetMapping("/list/exclude/{deptId}")\n 53:     public AjaxResult excludeChild(@PathVariable(value = "deptId", required = false) Long deptId)\n 54:     {\n 55:         List<SysDept> depts = deptService.selectDeptList(new SysDept());\n 56:         depts.removeIf(d -> d.getDeptId().intValue() == deptId || ArrayUtils.contains(StringUtils.split(d.getAncestors(), ","), deptId + ""));\n 57:         return success(depts);\n 58:     }\n 59: \n 60:     /**\n 61:      * 根据部门编号获取详细信息\n 62:      */\n 63:     @PreAuthorize("@ss.hasPermi(\'system:dept:query\')")\n 64:     @GetMapping(value = "/{deptId}")\n 65:     public AjaxResult getInfo(@PathVariable Long deptId)\n 66:     {\n 67:         deptService.checkDeptDataScope(deptId);\n 68:         return success(deptService.selectDeptById(deptId));\n 69:     }\n 70: \n 71:     /**\n 72:      * 新增部门\n 73:      */\n 74:     @PreAuthorize("@ss.hasPermi(\'system:dept:add\')")\n 75:     @Log(title = "部门管理", businessType = BusinessType.INSERT)\n 76:     @PostMapping\n 77:     public AjaxResult add(@Validated @RequestBody SysDept dept)\n 78:     {\n 79:         if (!deptService.checkDeptNameUnique(dept))\n 80:         {\n 81:             return error("新增部门\'" + dept.getDeptName() + "\'失败，部门名称已存在");\n 82:         }\n 83:         dept.setCreateBy(getUsername());\n 84:         return toAjax(deptService.insertDept(dept));\n 85:     }\n 86: \n 87:     /**\n 88:      * 修改部门\n 89:      */\n 90:     @PreAuthorize("@ss.hasPermi(\'system:dept:edit\')")\n 91:     @Log(title = "部门管理", businessType = BusinessType.UPDATE)\n 92:     @PutMapping\n 93:     public AjaxResult edit(@Validated @RequestBody SysDept dept)\n 94:     {\n 95:         Long deptId = dept.getDeptId();\n 96:         deptService.checkDeptDataScope(deptId);\n 97:         if (!deptService.checkDeptNameUnique(dept))\n 98:         {\n 99:             return error("修改部门\'" + dept.getDeptName() + "\'失败，部门名称已存在");\n100:         }\n101:         else if (dept.getParentId().equals(deptId))\n102:         {\n103:             return error("修改部门\'" + dept.getDeptName() + "\'失败，上级部门不能是自己");\n104:         }\n105:         else if (StringUtils.equals(UserConstants.DEPT_DISABLE, dept.getStatus()) && deptService.selectNormalChildrenDeptById(deptId) > 0)\n106:         {\n107:             return error("该部门包含未停用的子部门！");\n108:         }\n109:         dept.setUpdateBy(getUsername());\n110:         return toAjax(deptService.updateDept(dept));\n111:     }\n112: \n113:     /**\n114:      * 删除部门\n115:      */\n116:     @PreAuthorize("@ss.hasPermi(\'system:dept:remove\')")\n117:     @Log(title = "部门管理", businessType = BusinessType.DELETE)\n118:     @DeleteMapping("/{deptId}")\n119:     public AjaxResult remove(@PathVariable Long deptId)\n120:     {\n121:         if (deptService.hasChildByDeptId(deptId))\n122:         {\n123:             return warn("存在下级部门,不允许删除");\n124:         }\n125:         if (deptService.checkDeptExistUser(deptId))\n126:         {\n127:             return warn("部门存在用户,不允许删除");\n128:         }\n129:         deptService.checkDeptDataScope(deptId);\n130:         return toAjax(deptService.deleteDeptById(deptId));\n131:     }\n132: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', name='SysDictDataController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.ArrayList;\n  4: import java.util.List;\n  5: import javax.servlet.http.HttpServletResponse;\n  6: import org.springframework.beans.factory.annotation.Autowired;\n  7: import org.springframework.security.access.prepost.PreAuthorize;\n  8: import org.springframework.validation.annotation.Validated;\n  9: import org.springframework.web.bind.annotation.DeleteMapping;\n 10: import org.springframework.web.bind.annotation.GetMapping;\n 11: import org.springframework.web.bind.annotation.PathVariable;\n 12: import org.springframework.web.bind.annotation.PostMapping;\n 13: import org.springframework.web.bind.annotation.PutMapping;\n 14: import org.springframework.web.bind.annotation.RequestBody;\n 15: import org.springframework.web.bind.annotation.RequestMapping;\n 16: import org.springframework.web.bind.annotation.RestController;\n 17: import com.ruoyi.common.annotation.Log;\n 18: import com.ruoyi.common.core.controller.BaseController;\n 19: import com.ruoyi.common.core.domain.AjaxResult;\n 20: import com.ruoyi.common.core.domain.entity.SysDictData;\n 21: import com.ruoyi.common.core.page.TableDataInfo;\n 22: import com.ruoyi.common.enums.BusinessType;\n 23: import com.ruoyi.common.utils.StringUtils;\n 24: import com.ruoyi.common.utils.poi.ExcelUtil;\n 25: import com.ruoyi.system.service.ISysDictDataService;\n 26: import com.ruoyi.system.service.ISysDictTypeService;\n 27: \n 28: /**\n 29:  * 数据字典信息\n 30:  * \n 31:  * @author ruoyi\n 32:  */\n 33: @RestController\n 34: @RequestMapping("/system/dict/data")\n 35: public class SysDictDataController extends BaseController\n 36: {\n 37:     @Autowired\n 38:     private ISysDictDataService dictDataService;\n 39: \n 40:     @Autowired\n 41:     private ISysDictTypeService dictTypeService;\n 42: \n 43:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 44:     @GetMapping("/list")\n 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n 50:     }\n 51: \n 52:     @Log(title = "字典数据", businessType = BusinessType.EXPORT)\n 53:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 54:     @PostMapping("/export")\n 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n 61: \n 62:     /**\n 63:      * 查询字典数据详细\n 64:      */\n 65:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 66:     @GetMapping(value = "/{dictCode}")\n 67:     public AjaxResult getInfo(@PathVariable Long dictCode)\n 68:     {\n 69:         return success(dictDataService.selectDictDataById(dictCode));\n 70:     }\n 71: \n 72:     /**\n 73:      * 根据字典类型查询字典数据信息\n 74:      */\n 75:     @GetMapping(value = "/type/{dictType}")\n 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n 84:     }\n 85: \n 86:     /**\n 87:      * 新增字典类型\n 88:      */\n 89:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 90:     @Log(title = "字典数据", businessType = BusinessType.INSERT)\n 91:     @PostMapping\n 92:     public AjaxResult add(@Validated @RequestBody SysDictData dict)\n 93:     {\n 94:         dict.setCreateBy(getUsername());\n 95:         return toAjax(dictDataService.insertDictData(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 修改保存字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n102:     @Log(title = "字典数据", businessType = BusinessType.UPDATE)\n103:     @PutMapping\n104:     public AjaxResult edit(@Validated @RequestBody SysDictData dict)\n105:     {\n106:         dict.setUpdateBy(getUsername());\n107:         return toAjax(dictDataService.updateDictData(dict));\n108:     }\n109: \n110:     /**\n111:      * 删除字典类型\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n115:     @DeleteMapping("/{dictCodes}")\n116:     public AjaxResult remove(@PathVariable Long[] dictCodes)\n117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n120:     }\n121: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', name='SysDictTypeController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.List;\n  4: import javax.servlet.http.HttpServletResponse;\n  5: import org.springframework.beans.factory.annotation.Autowired;\n  6: import org.springframework.security.access.prepost.PreAuthorize;\n  7: import org.springframework.validation.annotation.Validated;\n  8: import org.springframework.web.bind.annotation.DeleteMapping;\n  9: import org.springframework.web.bind.annotation.GetMapping;\n 10: import org.springframework.web.bind.annotation.PathVariable;\n 11: import org.springframework.web.bind.annotation.PostMapping;\n 12: import org.springframework.web.bind.annotation.PutMapping;\n 13: import org.springframework.web.bind.annotation.RequestBody;\n 14: import org.springframework.web.bind.annotation.RequestMapping;\n 15: import org.springframework.web.bind.annotation.RestController;\n 16: import com.ruoyi.common.annotation.Log;\n 17: import com.ruoyi.common.core.controller.BaseController;\n 18: import com.ruoyi.common.core.domain.AjaxResult;\n 19: import com.ruoyi.common.core.domain.entity.SysDictType;\n 20: import com.ruoyi.common.core.page.TableDataInfo;\n 21: import com.ruoyi.common.enums.BusinessType;\n 22: import com.ruoyi.common.utils.poi.ExcelUtil;\n 23: import com.ruoyi.system.service.ISysDictTypeService;\n 24: \n 25: /**\n 26:  * 数据字典信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dict/type")\n 32: public class SysDictTypeController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n 36: \n 37:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n 45: \n 46:     @Log(title = "字典类型", businessType = BusinessType.EXPORT)\n 47:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");\n 54:     }\n 55: \n 56:     /**\n 57:      * 查询字典类型详细\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n 65: \n 66:     /**\n 67:      * 新增字典类型\n 68:      */\n 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n 81: \n 82:     /**\n 83:      * 修改字典类型\n 84:      */\n 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 删除字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n108:     }\n109: \n110:     /**\n111:      * 刷新字典缓存\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 获取字典选择框列表\n124:      */\n125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n131: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java', name='SysIndexController.java', source_code=' 1: package com.ruoyi.web.controller.system;\n 2: \n 3: import org.springframework.beans.factory.annotation.Autowired;\n 4: import org.springframework.web.bind.annotation.RequestMapping;\n 5: import org.springframework.web.bind.annotation.RestController;\n 6: import com.ruoyi.common.config.RuoYiConfig;\n 7: import com.ruoyi.common.utils.StringUtils;\n 8: \n 9: /**\n10:  * 首页\n11:  *\n12:  * @author ruoyi\n13:  */\n14: @RestController\n15: public class SysIndexController\n16: {\n17:     /** 系统基础配置 */\n18:     @Autowired\n19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n28:     }\n29: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java', name='SysLoginController.java', source_code=' 1: package com.ruoyi.web.controller.system;\n 2: \n 3: import java.util.List;\n 4: import java.util.Set;\n 5: import org.springframework.beans.factory.annotation.Autowired;\n 6: import org.springframework.web.bind.annotation.GetMapping;\n 7: import org.springframework.web.bind.annotation.PostMapping;\n 8: import org.springframework.web.bind.annotation.RequestBody;\n 9: import org.springframework.web.bind.annotation.RestController;\n10: import com.ruoyi.common.constant.Constants;\n11: import com.ruoyi.common.core.domain.AjaxResult;\n12: import com.ruoyi.common.core.domain.entity.SysMenu;\n13: import com.ruoyi.common.core.domain.entity.SysUser;\n14: import com.ruoyi.common.core.domain.model.LoginBody;\n15: import com.ruoyi.common.core.domain.model.LoginUser;\n16: import com.ruoyi.common.utils.SecurityUtils;\n17: import com.ruoyi.framework.web.service.SysLoginService;\n18: import com.ruoyi.framework.web.service.SysPermissionService;\n19: import com.ruoyi.framework.web.service.TokenService;\n20: import com.ruoyi.system.service.ISysMenuService;\n21: \n22: /**\n23:  * 登录验证\n24:  * \n25:  * @author ruoyi\n26:  */\n27: @RestController\n28: public class SysLoginController\n29: {\n30:     @Autowired\n31:     private SysLoginService loginService;\n32: \n33:     @Autowired\n34:     private ISysMenuService menuService;\n35: \n36:     @Autowired\n37:     private SysPermissionService permissionService;\n38: \n39:     @Autowired\n40:     private TokenService tokenService;\n41: \n42:     /**\n43:      * 登录方法\n44:      * \n45:      * @param loginBody 登录信息\n46:      * @return 结果\n47:      */\n48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;\n57:     }\n58: \n59:     /**\n60:      * 获取用户信息\n61:      * \n62:      * @return 用户信息\n63:      */\n64:     @GetMapping("getInfo")\n65:     public AjaxResult getInfo()\n66:     {\n67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n68:         SysUser user = loginUser.getUser();\n69:         // 角色集合\n70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);\n73:         if (!loginUser.getPermissions().equals(permissions))\n74:         {\n75:             loginUser.setPermissions(permissions);\n76:             tokenService.refreshToken(loginUser);\n77:         }\n78:         AjaxResult ajax = AjaxResult.success();\n79:         ajax.put("user", user);\n80:         ajax.put("roles", roles);\n81:         ajax.put("permissions", permissions);\n82:         return ajax;\n83:     }\n84: \n85:     /**\n86:      * 获取路由信息\n87:      * \n88:      * @return 路由信息\n89:      */\n90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n96:     }\n97: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', name='SysMenuController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.List;\n  4: import org.springframework.beans.factory.annotation.Autowired;\n  5: import org.springframework.security.access.prepost.PreAuthorize;\n  6: import org.springframework.validation.annotation.Validated;\n  7: import org.springframework.web.bind.annotation.DeleteMapping;\n  8: import org.springframework.web.bind.annotation.GetMapping;\n  9: import org.springframework.web.bind.annotation.PathVariable;\n 10: import org.springframework.web.bind.annotation.PostMapping;\n 11: import org.springframework.web.bind.annotation.PutMapping;\n 12: import org.springframework.web.bind.annotation.RequestBody;\n 13: import org.springframework.web.bind.annotation.RequestMapping;\n 14: import org.springframework.web.bind.annotation.RestController;\n 15: import com.ruoyi.common.annotation.Log;\n 16: import com.ruoyi.common.constant.UserConstants;\n 17: import com.ruoyi.common.core.controller.BaseController;\n 18: import com.ruoyi.common.core.domain.AjaxResult;\n 19: import com.ruoyi.common.core.domain.entity.SysMenu;\n 20: import com.ruoyi.common.enums.BusinessType;\n 21: import com.ruoyi.common.utils.StringUtils;\n 22: import com.ruoyi.system.service.ISysMenuService;\n 23: \n 24: /**\n 25:  * 菜单信息\n 26:  * \n 27:  * @author ruoyi\n 28:  */\n 29: @RestController\n 30: @RequestMapping("/system/menu")\n 31: public class SysMenuController extends BaseController\n 32: {\n 33:     @Autowired\n 34:     private ISysMenuService menuService;\n 35: \n 36:     /**\n 37:      * 获取菜单列表\n 38:      */\n 39:     @PreAuthorize("@ss.hasPermi(\'system:menu:list\')")\n 40:     @GetMapping("/list")\n 41:     public AjaxResult list(SysMenu menu)\n 42:     {\n 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);\n 45:     }\n 46: \n 47:     /**\n 48:      * 根据菜单编号获取详细信息\n 49:      */\n 50:     @PreAuthorize("@ss.hasPermi(\'system:menu:query\')")\n 51:     @GetMapping(value = "/{menuId}")\n 52:     public AjaxResult getInfo(@PathVariable Long menuId)\n 53:     {\n 54:         return success(menuService.selectMenuById(menuId));\n 55:     }\n 56: \n 57:     /**\n 58:      * 获取菜单下拉树列表\n 59:      */\n 60:     @GetMapping("/treeselect")\n 61:     public AjaxResult treeselect(SysMenu menu)\n 62:     {\n 63:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 64:         return success(menuService.buildMenuTreeSelect(menus));\n 65:     }\n 66: \n 67:     /**\n 68:      * 加载对应角色菜单列表树\n 69:      */\n 70:     @GetMapping(value = "/roleMenuTreeselect/{roleId}")\n 71:     public AjaxResult roleMenuTreeselect(@PathVariable("roleId") Long roleId)\n 72:     {\n 73:         List<SysMenu> menus = menuService.selectMenuList(getUserId());\n 74:         AjaxResult ajax = AjaxResult.success();\n 75:         ajax.put("checkedKeys", menuService.selectMenuListByRoleId(roleId));\n 76:         ajax.put("menus", menuService.buildMenuTreeSelect(menus));\n 77:         return ajax;\n 78:     }\n 79: \n 80:     /**\n 81:      * 新增菜单\n 82:      */\n 83:     @PreAuthorize("@ss.hasPermi(\'system:menu:add\')")\n 84:     @Log(title = "菜单管理", businessType = BusinessType.INSERT)\n 85:     @PostMapping\n 86:     public AjaxResult add(@Validated @RequestBody SysMenu menu)\n 87:     {\n 88:         if (!menuService.checkMenuNameUnique(menu))\n 89:         {\n 90:             return error("新增菜单\'" + menu.getMenuName() + "\'失败，菜单名称已存在");\n 91:         }\n 92:         else if (UserConstants.YES_FRAME.equals(menu.getIsFrame()) && !StringUtils.ishttp(menu.getPath()))\n 93:         {\n 94:             return error("新增菜单\'" + menu.getMenuName() + "\'失败，地址必须以http(s)://开头");\n 95:         }\n 96:         menu.setCreateBy(getUsername());\n 97:         return toAjax(menuService.insertMenu(menu));\n 98:     }\n 99: \n100:     /**\n101:      * 修改菜单\n102:      */\n103:     @PreAuthorize("@ss.hasPermi(\'system:menu:edit\')")\n104:     @Log(title = "菜单管理", businessType = BusinessType.UPDATE)\n105:     @PutMapping\n106:     public AjaxResult edit(@Validated @RequestBody SysMenu menu)\n107:     {\n108:         if (!menuService.checkMenuNameUnique(menu))\n109:         {\n110:             return error("修改菜单\'" + menu.getMenuName() + "\'失败，菜单名称已存在");\n111:         }\n112:         else if (UserConstants.YES_FRAME.equals(menu.getIsFrame()) && !StringUtils.ishttp(menu.getPath()))\n113:         {\n114:             return error("修改菜单\'" + menu.getMenuName() + "\'失败，地址必须以http(s)://开头");\n115:         }\n116:         else if (menu.getMenuId().equals(menu.getParentId()))\n117:         {\n118:             return error("修改菜单\'" + menu.getMenuName() + "\'失败，上级菜单不能选择自己");\n119:         }\n120:         menu.setUpdateBy(getUsername());\n121:         return toAjax(menuService.updateMenu(menu));\n122:     }\n123: \n124:     /**\n125:      * 删除菜单\n126:      */\n127:     @PreAuthorize("@ss.hasPermi(\'system:menu:remove\')")\n128:     @Log(title = "菜单管理", businessType = BusinessType.DELETE)\n129:     @DeleteMapping("/{menuId}")\n130:     public AjaxResult remove(@PathVariable("menuId") Long menuId)\n131:     {\n132:         if (menuService.hasChildByMenuId(menuId))\n133:         {\n134:             return warn("存在子菜单,不允许删除");\n135:         }\n136:         if (menuService.checkMenuExistRole(menuId))\n137:         {\n138:             return warn("菜单已分配,不允许删除");\n139:         }\n140:         return toAjax(menuService.deleteMenuById(menuId));\n141:     }\n142: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java', name='SysNoticeController.java', source_code=' 1: package com.ruoyi.web.controller.system;\n 2: \n 3: import java.util.List;\n 4: import org.springframework.beans.factory.annotation.Autowired;\n 5: import org.springframework.security.access.prepost.PreAuthorize;\n 6: import org.springframework.validation.annotation.Validated;\n 7: import org.springframework.web.bind.annotation.DeleteMapping;\n 8: import org.springframework.web.bind.annotation.GetMapping;\n 9: import org.springframework.web.bind.annotation.PathVariable;\n10: import org.springframework.web.bind.annotation.PostMapping;\n11: import org.springframework.web.bind.annotation.PutMapping;\n12: import org.springframework.web.bind.annotation.RequestBody;\n13: import org.springframework.web.bind.annotation.RequestMapping;\n14: import org.springframework.web.bind.annotation.RestController;\n15: import com.ruoyi.common.annotation.Log;\n16: import com.ruoyi.common.core.controller.BaseController;\n17: import com.ruoyi.common.core.domain.AjaxResult;\n18: import com.ruoyi.common.core.page.TableDataInfo;\n19: import com.ruoyi.common.enums.BusinessType;\n20: import com.ruoyi.system.domain.SysNotice;\n21: import com.ruoyi.system.service.ISysNoticeService;\n22: \n23: /**\n24:  * 公告 信息操作处理\n25:  * \n26:  * @author ruoyi\n27:  */\n28: @RestController\n29: @RequestMapping("/system/notice")\n30: public class SysNoticeController extends BaseController\n31: {\n32:     @Autowired\n33:     private ISysNoticeService noticeService;\n34: \n35:     /**\n36:      * 获取通知公告列表\n37:      */\n38:     @PreAuthorize("@ss.hasPermi(\'system:notice:list\')")\n39:     @GetMapping("/list")\n40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);\n45:     }\n46: \n47:     /**\n48:      * 根据通知公告编号获取详细信息\n49:      */\n50:     @PreAuthorize("@ss.hasPermi(\'system:notice:query\')")\n51:     @GetMapping(value = "/{noticeId}")\n52:     public AjaxResult getInfo(@PathVariable Long noticeId)\n53:     {\n54:         return success(noticeService.selectNoticeById(noticeId));\n55:     }\n56: \n57:     /**\n58:      * 新增通知公告\n59:      */\n60:     @PreAuthorize("@ss.hasPermi(\'system:notice:add\')")\n61:     @Log(title = "通知公告", businessType = BusinessType.INSERT)\n62:     @PostMapping\n63:     public AjaxResult add(@Validated @RequestBody SysNotice notice)\n64:     {\n65:         notice.setCreateBy(getUsername());\n66:         return toAjax(noticeService.insertNotice(notice));\n67:     }\n68: \n69:     /**\n70:      * 修改通知公告\n71:      */\n72:     @PreAuthorize("@ss.hasPermi(\'system:notice:edit\')")\n73:     @Log(title = "通知公告", businessType = BusinessType.UPDATE)\n74:     @PutMapping\n75:     public AjaxResult edit(@Validated @RequestBody SysNotice notice)\n76:     {\n77:         notice.setUpdateBy(getUsername());\n78:         return toAjax(noticeService.updateNotice(notice));\n79:     }\n80: \n81:     /**\n82:      * 删除通知公告\n83:      */\n84:     @PreAuthorize("@ss.hasPermi(\'system:notice:remove\')")\n85:     @Log(title = "通知公告", businessType = BusinessType.DELETE)\n86:     @DeleteMapping("/{noticeIds}")\n87:     public AjaxResult remove(@PathVariable Long[] noticeIds)\n88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }\n91: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', name='SysPostController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.List;\n  4: import javax.servlet.http.HttpServletResponse;\n  5: import org.springframework.beans.factory.annotation.Autowired;\n  6: import org.springframework.security.access.prepost.PreAuthorize;\n  7: import org.springframework.validation.annotation.Validated;\n  8: import org.springframework.web.bind.annotation.DeleteMapping;\n  9: import org.springframework.web.bind.annotation.GetMapping;\n 10: import org.springframework.web.bind.annotation.PathVariable;\n 11: import org.springframework.web.bind.annotation.PostMapping;\n 12: import org.springframework.web.bind.annotation.PutMapping;\n 13: import org.springframework.web.bind.annotation.RequestBody;\n 14: import org.springframework.web.bind.annotation.RequestMapping;\n 15: import org.springframework.web.bind.annotation.RestController;\n 16: import com.ruoyi.common.annotation.Log;\n 17: import com.ruoyi.common.core.controller.BaseController;\n 18: import com.ruoyi.common.core.domain.AjaxResult;\n 19: import com.ruoyi.common.core.page.TableDataInfo;\n 20: import com.ruoyi.common.enums.BusinessType;\n 21: import com.ruoyi.common.utils.poi.ExcelUtil;\n 22: import com.ruoyi.system.domain.SysPost;\n 23: import com.ruoyi.system.service.ISysPostService;\n 24: \n 25: /**\n 26:  * 岗位信息操作处理\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/post")\n 32: public class SysPostController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysPostService postService;\n 36: \n 37:     /**\n 38:      * 获取岗位列表\n 39:      */\n 40:     @PreAuthorize("@ss.hasPermi(\'system:post:list\')")\n 41:     @GetMapping("/list")\n 42:     public TableDataInfo list(SysPost post)\n 43:     {\n 44:         startPage();\n 45:         List<SysPost> list = postService.selectPostList(post);\n 46:         return getDataTable(list);\n 47:     }\n 48:     \n 49:     @Log(title = "岗位管理", businessType = BusinessType.EXPORT)\n 50:     @PreAuthorize("@ss.hasPermi(\'system:post:export\')")\n 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysPost post)\n 53:     {\n 54:         List<SysPost> list = postService.selectPostList(post);\n 55:         ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);\n 56:         util.exportExcel(response, list, "岗位数据");\n 57:     }\n 58: \n 59:     /**\n 60:      * 根据岗位编号获取详细信息\n 61:      */\n 62:     @PreAuthorize("@ss.hasPermi(\'system:post:query\')")\n 63:     @GetMapping(value = "/{postId}")\n 64:     public AjaxResult getInfo(@PathVariable Long postId)\n 65:     {\n 66:         return success(postService.selectPostById(postId));\n 67:     }\n 68: \n 69:     /**\n 70:      * 新增岗位\n 71:      */\n 72:     @PreAuthorize("@ss.hasPermi(\'system:post:add\')")\n 73:     @Log(title = "岗位管理", businessType = BusinessType.INSERT)\n 74:     @PostMapping\n 75:     public AjaxResult add(@Validated @RequestBody SysPost post)\n 76:     {\n 77:         if (!postService.checkPostNameUnique(post))\n 78:         {\n 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n 80:         }\n 81:         else if (!postService.checkPostCodeUnique(post))\n 82:         {\n 83:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位编码已存在");\n 84:         }\n 85:         post.setCreateBy(getUsername());\n 86:         return toAjax(postService.insertPost(post));\n 87:     }\n 88: \n 89:     /**\n 90:      * 修改岗位\n 91:      */\n 92:     @PreAuthorize("@ss.hasPermi(\'system:post:edit\')")\n 93:     @Log(title = "岗位管理", businessType = BusinessType.UPDATE)\n 94:     @PutMapping\n 95:     public AjaxResult edit(@Validated @RequestBody SysPost post)\n 96:     {\n 97:         if (!postService.checkPostNameUnique(post))\n 98:         {\n 99:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n100:         }\n101:         else if (!postService.checkPostCodeUnique(post))\n102:         {\n103:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位编码已存在");\n104:         }\n105:         post.setUpdateBy(getUsername());\n106:         return toAjax(postService.updatePost(post));\n107:     }\n108: \n109:     /**\n110:      * 删除岗位\n111:      */\n112:     @PreAuthorize("@ss.hasPermi(\'system:post:remove\')")\n113:     @Log(title = "岗位管理", businessType = BusinessType.DELETE)\n114:     @DeleteMapping("/{postIds}")\n115:     public AjaxResult remove(@PathVariable Long[] postIds)\n116:     {\n117:         return toAjax(postService.deletePostByIds(postIds));\n118:     }\n119: \n120:     /**\n121:      * 获取岗位选择框列表\n122:      */\n123:     @GetMapping("/optionselect")\n124:     public AjaxResult optionselect()\n125:     {\n126:         List<SysPost> posts = postService.selectPostAll();\n127:         return success(posts);\n128:     }\n129: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', name='SysProfileController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.Map;\n  4: import org.springframework.beans.factory.annotation.Autowired;\n  5: import org.springframework.web.bind.annotation.GetMapping;\n  6: import org.springframework.web.bind.annotation.PostMapping;\n  7: import org.springframework.web.bind.annotation.PutMapping;\n  8: import org.springframework.web.bind.annotation.RequestBody;\n  9: import org.springframework.web.bind.annotation.RequestMapping;\n 10: import org.springframework.web.bind.annotation.RequestParam;\n 11: import org.springframework.web.bind.annotation.RestController;\n 12: import org.springframework.web.multipart.MultipartFile;\n 13: import com.ruoyi.common.annotation.Log;\n 14: import com.ruoyi.common.config.RuoYiConfig;\n 15: import com.ruoyi.common.core.controller.BaseController;\n 16: import com.ruoyi.common.core.domain.AjaxResult;\n 17: import com.ruoyi.common.core.domain.entity.SysUser;\n 18: import com.ruoyi.common.core.domain.model.LoginUser;\n 19: import com.ruoyi.common.enums.BusinessType;\n 20: import com.ruoyi.common.utils.SecurityUtils;\n 21: import com.ruoyi.common.utils.StringUtils;\n 22: import com.ruoyi.common.utils.file.FileUploadUtils;\n 23: import com.ruoyi.common.utils.file.MimeTypeUtils;\n 24: import com.ruoyi.framework.web.service.TokenService;\n 25: import com.ruoyi.system.service.ISysUserService;\n 26: \n 27: /**\n 28:  * 个人信息 业务处理\n 29:  * \n 30:  * @author ruoyi\n 31:  */\n 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java', name='SysRegisterController.java', source_code=' 1: package com.ruoyi.web.controller.system;\n 2: \n 3: import org.springframework.beans.factory.annotation.Autowired;\n 4: import org.springframework.web.bind.annotation.PostMapping;\n 5: import org.springframework.web.bind.annotation.RequestBody;\n 6: import org.springframework.web.bind.annotation.RestController;\n 7: import com.ruoyi.common.core.controller.BaseController;\n 8: import com.ruoyi.common.core.domain.AjaxResult;\n 9: import com.ruoyi.common.core.domain.model.RegisterBody;\n10: import com.ruoyi.common.utils.StringUtils;\n11: import com.ruoyi.framework.web.service.SysRegisterService;\n12: import com.ruoyi.system.service.ISysConfigService;\n13: \n14: /**\n15:  * 注册验证\n16:  * \n17:  * @author ruoyi\n18:  */\n19: @RestController\n20: public class SysRegisterController extends BaseController\n21: {\n22:     @Autowired\n23:     private SysRegisterService registerService;\n24: \n25:     @Autowired\n26:     private ISysConfigService configService;\n27: \n28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n37:     }\n38: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', name='SysRoleController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.List;\n  4: import javax.servlet.http.HttpServletResponse;\n  5: import org.springframework.beans.factory.annotation.Autowired;\n  6: import org.springframework.security.access.prepost.PreAuthorize;\n  7: import org.springframework.validation.annotation.Validated;\n  8: import org.springframework.web.bind.annotation.DeleteMapping;\n  9: import org.springframework.web.bind.annotation.GetMapping;\n 10: import org.springframework.web.bind.annotation.PathVariable;\n 11: import org.springframework.web.bind.annotation.PostMapping;\n 12: import org.springframework.web.bind.annotation.PutMapping;\n 13: import org.springframework.web.bind.annotation.RequestBody;\n 14: import org.springframework.web.bind.annotation.RequestMapping;\n 15: import org.springframework.web.bind.annotation.RestController;\n 16: import com.ruoyi.common.annotation.Log;\n 17: import com.ruoyi.common.core.controller.BaseController;\n 18: import com.ruoyi.common.core.domain.AjaxResult;\n 19: import com.ruoyi.common.core.domain.entity.SysDept;\n 20: import com.ruoyi.common.core.domain.entity.SysRole;\n 21: import com.ruoyi.common.core.domain.entity.SysUser;\n 22: import com.ruoyi.common.core.domain.model.LoginUser;\n 23: import com.ruoyi.common.core.page.TableDataInfo;\n 24: import com.ruoyi.common.enums.BusinessType;\n 25: import com.ruoyi.common.utils.StringUtils;\n 26: import com.ruoyi.common.utils.poi.ExcelUtil;\n 27: import com.ruoyi.framework.web.service.SysPermissionService;\n 28: import com.ruoyi.framework.web.service.TokenService;\n 29: import com.ruoyi.system.domain.SysUserRole;\n 30: import com.ruoyi.system.service.ISysDeptService;\n 31: import com.ruoyi.system.service.ISysRoleService;\n 32: import com.ruoyi.system.service.ISysUserService;\n 33: \n 34: /**\n 35:  * 角色信息\n 36:  * \n 37:  * @author ruoyi\n 38:  */\n 39: @RestController\n 40: @RequestMapping("/system/role")\n 41: public class SysRoleController extends BaseController\n 42: {\n 43:     @Autowired\n 44:     private ISysRoleService roleService;\n 45: \n 46:     @Autowired\n 47:     private TokenService tokenService;\n 48: \n 49:     @Autowired\n 50:     private SysPermissionService permissionService;\n 51: \n 52:     @Autowired\n 53:     private ISysUserService userService;\n 54: \n 55:     @Autowired\n 56:     private ISysDeptService deptService;\n 57: \n 58:     @PreAuthorize("@ss.hasPermi(\'system:role:list\')")\n 59:     @GetMapping("/list")\n 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);\n 65:     }\n 66: \n 67:     @Log(title = "角色管理", businessType = BusinessType.EXPORT)\n 68:     @PreAuthorize("@ss.hasPermi(\'system:role:export\')")\n 69:     @PostMapping("/export")\n 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");\n 75:     }\n 76: \n 77:     /**\n 78:      * 根据角色编号获取详细信息\n 79:      */\n 80:     @PreAuthorize("@ss.hasPermi(\'system:role:query\')")\n 81:     @GetMapping(value = "/{roleId}")\n 82:     public AjaxResult getInfo(@PathVariable Long roleId)\n 83:     {\n 84:         roleService.checkRoleDataScope(roleId);\n 85:         return success(roleService.selectRoleById(roleId));\n 86:     }\n 87: \n 88:     /**\n 89:      * 新增角色\n 90:      */\n 91:     @PreAuthorize("@ss.hasPermi(\'system:role:add\')")\n 92:     @Log(title = "角色管理", businessType = BusinessType.INSERT)\n 93:     @PostMapping\n 94:     public AjaxResult add(@Validated @RequestBody SysRole role)\n 95:     {\n 96:         if (!roleService.checkRoleNameUnique(role))\n 97:         {\n 98:             return error("新增角色\'" + role.getRoleName() + "\'失败，角色名称已存在");\n 99:         }\n100:         else if (!roleService.checkRoleKeyUnique(role))\n101:         {\n102:             return error("新增角色\'" + role.getRoleName() + "\'失败，角色权限已存在");\n103:         }\n104:         role.setCreateBy(getUsername());\n105:         return toAjax(roleService.insertRole(role));\n106: \n107:     }\n108: \n109:     /**\n110:      * 修改保存角色\n111:      */\n112:     @PreAuthorize("@ss.hasPermi(\'system:role:edit\')")\n113:     @Log(title = "角色管理", businessType = BusinessType.UPDATE)\n114:     @PutMapping\n115:     public AjaxResult edit(@Validated @RequestBody SysRole role)\n116:     {\n117:         roleService.checkRoleAllowed(role);\n118:         roleService.checkRoleDataScope(role.getRoleId());\n119:         if (!roleService.checkRoleNameUnique(role))\n120:         {\n121:             return error("修改角色\'" + role.getRoleName() + "\'失败，角色名称已存在");\n122:         }\n123:         else if (!roleService.checkRoleKeyUnique(role))\n124:         {\n125:             return error("修改角色\'" + role.getRoleName() + "\'失败，角色权限已存在");\n126:         }\n127:         role.setUpdateBy(getUsername());\n128:         \n129:         if (roleService.updateRole(role) > 0)\n130:         {\n131:             // 更新缓存用户权限\n132:             LoginUser loginUser = getLoginUser();\n133:             if (StringUtils.isNotNull(loginUser.getUser()) && !loginUser.getUser().isAdmin())\n134:             {\n135:                 loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));\n136:                 loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));\n137:                 tokenService.setLoginUser(loginUser);\n138:             }\n139:             return success();\n140:         }\n141:         return error("修改角色\'" + role.getRoleName() + "\'失败，请联系管理员");\n142:     }\n143: \n144:     /**\n145:      * 修改保存数据权限\n146:      */\n147:     @PreAuthorize("@ss.hasPermi(\'system:role:edit\')")\n148:     @Log(title = "角色管理", businessType = BusinessType.UPDATE)\n149:     @PutMapping("/dataScope")\n150:     public AjaxResult dataScope(@RequestBody SysRole role)\n151:     {\n152:         roleService.checkRoleAllowed(role);\n153:         roleService.checkRoleDataScope(role.getRoleId());\n154:         return toAjax(roleService.authDataScope(role));\n155:     }\n156: \n157:     /**\n158:      * 状态修改\n159:      */\n160:     @PreAuthorize("@ss.hasPermi(\'system:role:edit\')")\n161:     @Log(title = "角色管理", businessType = BusinessType.UPDATE)\n162:     @PutMapping("/changeStatus")\n163:     public AjaxResult changeStatus(@RequestBody SysRole role)\n164:     {\n165:         roleService.checkRoleAllowed(role);\n166:         roleService.checkRoleDataScope(role.getRoleId());\n167:         role.setUpdateBy(getUsername());\n168:         return toAjax(roleService.updateRoleStatus(role));\n169:     }\n170: \n171:     /**\n172:      * 删除角色\n173:      */\n174:     @PreAuthorize("@ss.hasPermi(\'system:role:remove\')")\n175:     @Log(title = "角色管理", businessType = BusinessType.DELETE)\n176:     @DeleteMapping("/{roleIds}")\n177:     public AjaxResult remove(@PathVariable Long[] roleIds)\n178:     {\n179:         return toAjax(roleService.deleteRoleByIds(roleIds));\n180:     }\n181: \n182:     /**\n183:      * 获取角色选择框列表\n184:      */\n185:     @PreAuthorize("@ss.hasPermi(\'system:role:query\')")\n186:     @GetMapping("/optionselect")\n187:     public AjaxResult optionselect()\n188:     {\n189:         return success(roleService.selectRoleAll());\n190:     }\n191: \n192:     /**\n193:      * 查询已分配用户角色列表\n194:      */\n195:     @PreAuthorize("@ss.hasPermi(\'system:role:list\')")\n196:     @GetMapping("/authUser/allocatedList")\n197:     public TableDataInfo allocatedList(SysUser user)\n198:     {\n199:         startPage();\n200:         List<SysUser> list = userService.selectAllocatedList(user);\n201:         return getDataTable(list);\n202:     }\n203: \n204:     /**\n205:      * 查询未分配用户角色列表\n206:      */\n207:     @PreAuthorize("@ss.hasPermi(\'system:role:list\')")\n208:     @GetMapping("/authUser/unallocatedList")\n209:     public TableDataInfo unallocatedList(SysUser user)\n210:     {\n211:         startPage();\n212:         List<SysUser> list = userService.selectUnallocatedList(user);\n213:         return getDataTable(list);\n214:     }\n215: \n216:     /**\n217:      * 取消授权用户\n218:      */\n219:     @PreAuthorize("@ss.hasPermi(\'system:role:edit\')")\n220:     @Log(title = "角色管理", businessType = BusinessType.GRANT)\n221:     @PutMapping("/authUser/cancel")\n222:     public AjaxResult cancelAuthUser(@RequestBody SysUserRole userRole)\n223:     {\n224:         return toAjax(roleService.deleteAuthUser(userRole));\n225:     }\n226: \n227:     /**\n228:      * 批量取消授权用户\n229:      */\n230:     @PreAuthorize("@ss.hasPermi(\'system:role:edit\')")\n231:     @Log(title = "角色管理", businessType = BusinessType.GRANT)\n232:     @PutMapping("/authUser/cancelAll")\n233:     public AjaxResult cancelAuthUserAll(Long roleId, Long[] userIds)\n234:     {\n235:         return toAjax(roleService.deleteAuthUsers(roleId, userIds));\n236:     }\n237: \n238:     /**\n239:      * 批量选择用户授权\n240:      */\n241:     @PreAuthorize("@ss.hasPermi(\'system:role:edit\')")\n242:     @Log(title = "角色管理", businessType = BusinessType.GRANT)\n243:     @PutMapping("/authUser/selectAll")\n244:     public AjaxResult selectAuthUserAll(Long roleId, Long[] userIds)\n245:     {\n246:         roleService.checkRoleDataScope(roleId);\n247:         return toAjax(roleService.insertAuthUsers(roleId, userIds));\n248:     }\n249: \n250:     /**\n251:      * 获取对应角色部门树列表\n252:      */\n253:     @PreAuthorize("@ss.hasPermi(\'system:role:query\')")\n254:     @GetMapping(value = "/deptTree/{roleId}")\n255:     public AjaxResult deptTree(@PathVariable("roleId") Long roleId)\n256:     {\n257:         AjaxResult ajax = AjaxResult.success();\n258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n260:         return ajax;\n261:     }\n262: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', name='SysUserController.java', source_code='  1: package com.ruoyi.web.controller.system;\n  2: \n  3: import java.util.List;\n  4: import java.util.stream.Collectors;\n  5: import javax.servlet.http.HttpServletResponse;\n  6: import org.apache.commons.lang3.ArrayUtils;\n  7: import org.springframework.beans.factory.annotation.Autowired;\n  8: import org.springframework.security.access.prepost.PreAuthorize;\n  9: import org.springframework.validation.annotation.Validated;\n 10: import org.springframework.web.bind.annotation.DeleteMapping;\n 11: import org.springframework.web.bind.annotation.GetMapping;\n 12: import org.springframework.web.bind.annotation.PathVariable;\n 13: import org.springframework.web.bind.annotation.PostMapping;\n 14: import org.springframework.web.bind.annotation.PutMapping;\n 15: import org.springframework.web.bind.annotation.RequestBody;\n 16: import org.springframework.web.bind.annotation.RequestMapping;\n 17: import org.springframework.web.bind.annotation.RestController;\n 18: import org.springframework.web.multipart.MultipartFile;\n 19: import com.ruoyi.common.annotation.Log;\n 20: import com.ruoyi.common.core.controller.BaseController;\n 21: import com.ruoyi.common.core.domain.AjaxResult;\n 22: import com.ruoyi.common.core.domain.entity.SysDept;\n 23: import com.ruoyi.common.core.domain.entity.SysRole;\n 24: import com.ruoyi.common.core.domain.entity.SysUser;\n 25: import com.ruoyi.common.core.page.TableDataInfo;\n 26: import com.ruoyi.common.enums.BusinessType;\n 27: import com.ruoyi.common.utils.SecurityUtils;\n 28: import com.ruoyi.common.utils.StringUtils;\n 29: import com.ruoyi.common.utils.poi.ExcelUtil;\n 30: import com.ruoyi.system.service.ISysDeptService;\n 31: import com.ruoyi.system.service.ISysPostService;\n 32: import com.ruoyi.system.service.ISysRoleService;\n 33: import com.ruoyi.system.service.ISysUserService;\n 34: \n 35: /**\n 36:  * 用户信息\n 37:  * \n 38:  * @author ruoyi\n 39:  */\n 40: @RestController\n 41: @RequestMapping("/system/user")\n 42: public class SysUserController extends BaseController\n 43: {\n 44:     @Autowired\n 45:     private ISysUserService userService;\n 46: \n 47:     @Autowired\n 48:     private ISysRoleService roleService;\n 49: \n 50:     @Autowired\n 51:     private ISysDeptService deptService;\n 52: \n 53:     @Autowired\n 54:     private ISysPostService postService;\n 55: \n 56:     /**\n 57:      * 获取用户列表\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:user:list\')")\n 60:     @GetMapping("/list")\n 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n 66:     }\n 67: \n 68:     @Log(title = "用户管理", businessType = BusinessType.EXPORT)\n 69:     @PreAuthorize("@ss.hasPermi(\'system:user:export\')")\n 70:     @PostMapping("/export")\n 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");\n 76:     }\n 77: \n 78:     @Log(title = "用户管理", businessType = BusinessType.IMPORT)\n 79:     @PreAuthorize("@ss.hasPermi(\'system:user:import\')")\n 80:     @PostMapping("/importData")\n 81:     public AjaxResult importData(MultipartFile file, boolean updateSupport) throws Exception\n 82:     {\n 83:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 84:         List<SysUser> userList = util.importExcel(file.getInputStream());\n 85:         String operName = getUsername();\n 86:         String message = userService.importUser(userList, updateSupport, operName);\n 87:         return success(message);\n 88:     }\n 89: \n 90:     @PostMapping("/importTemplate")\n 91:     public void importTemplate(HttpServletResponse response)\n 92:     {\n 93:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 94:         util.importTemplateExcel(response, "用户数据");\n 95:     }\n 96: \n 97:     /**\n 98:      * 根据用户编号获取详细信息\n 99:      */\n100:     @PreAuthorize("@ss.hasPermi(\'system:user:query\')")\n101:     @GetMapping(value = { "/", "/{userId}" })\n102:     public AjaxResult getInfo(@PathVariable(value = "userId", required = false) Long userId)\n103:     {\n104:         AjaxResult ajax = AjaxResult.success();\n105:         if (StringUtils.isNotNull(userId))\n106:         {\n107:             userService.checkUserDataScope(userId);\n108:             SysUser sysUser = userService.selectUserById(userId);\n109:             ajax.put(AjaxResult.DATA_TAG, sysUser);\n110:             ajax.put("postIds", postService.selectPostListByUserId(userId));\n111:             ajax.put("roleIds", sysUser.getRoles().stream().map(SysRole::getRoleId).collect(Collectors.toList()));\n112:         }\n113:         List<SysRole> roles = roleService.selectRoleAll();\n114:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));\n115:         ajax.put("posts", postService.selectPostAll());\n116:         return ajax;\n117:     }\n118: \n119:     /**\n120:      * 新增用户\n121:      */\n122:     @PreAuthorize("@ss.hasPermi(\'system:user:add\')")\n123:     @Log(title = "用户管理", businessType = BusinessType.INSERT)\n124:     @PostMapping\n125:     public AjaxResult add(@Validated @RequestBody SysUser user)\n126:     {\n127:         deptService.checkDeptDataScope(user.getDeptId());\n128:         roleService.checkRoleDataScope(user.getRoleIds());\n129:         if (!userService.checkUserNameUnique(user))\n130:         {\n131:             return error("新增用户\'" + user.getUserName() + "\'失败，登录账号已存在");\n132:         }\n133:         else if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(user))\n134:         {\n135:             return error("新增用户\'" + user.getUserName() + "\'失败，手机号码已存在");\n136:         }\n137:         else if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(user))\n138:         {\n139:             return error("新增用户\'" + user.getUserName() + "\'失败，邮箱账号已存在");\n140:         }\n141:         user.setCreateBy(getUsername());\n142:         user.setPassword(SecurityUtils.encryptPassword(user.getPassword()));\n143:         return toAjax(userService.insertUser(user));\n144:     }\n145: \n146:     /**\n147:      * 修改用户\n148:      */\n149:     @PreAuthorize("@ss.hasPermi(\'system:user:edit\')")\n150:     @Log(title = "用户管理", businessType = BusinessType.UPDATE)\n151:     @PutMapping\n152:     public AjaxResult edit(@Validated @RequestBody SysUser user)\n153:     {\n154:         userService.checkUserAllowed(user);\n155:         userService.checkUserDataScope(user.getUserId());\n156:         deptService.checkDeptDataScope(user.getDeptId());\n157:         roleService.checkRoleDataScope(user.getRoleIds());\n158:         if (!userService.checkUserNameUnique(user))\n159:         {\n160:             return error("修改用户\'" + user.getUserName() + "\'失败，登录账号已存在");\n161:         }\n162:         else if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(user))\n163:         {\n164:             return error("修改用户\'" + user.getUserName() + "\'失败，手机号码已存在");\n165:         }\n166:         else if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(user))\n167:         {\n168:             return error("修改用户\'" + user.getUserName() + "\'失败，邮箱账号已存在");\n169:         }\n170:         user.setUpdateBy(getUsername());\n171:         return toAjax(userService.updateUser(user));\n172:     }\n173: \n174:     /**\n175:      * 删除用户\n176:      */\n177:     @PreAuthorize("@ss.hasPermi(\'system:user:remove\')")\n178:     @Log(title = "用户管理", businessType = BusinessType.DELETE)\n179:     @DeleteMapping("/{userIds}")\n180:     public AjaxResult remove(@PathVariable Long[] userIds)\n181:     {\n182:         if (ArrayUtils.contains(userIds, getUserId()))\n183:         {\n184:             return error("当前用户不能删除");\n185:         }\n186:         return toAjax(userService.deleteUserByIds(userIds));\n187:     }\n188: \n189:     /**\n190:      * 重置密码\n191:      */\n192:     @PreAuthorize("@ss.hasPermi(\'system:user:resetPwd\')")\n193:     @Log(title = "用户管理", businessType = BusinessType.UPDATE)\n194:     @PutMapping("/resetPwd")\n195:     public AjaxResult resetPwd(@RequestBody SysUser user)\n196:     {\n197:         userService.checkUserAllowed(user);\n198:         userService.checkUserDataScope(user.getUserId());\n199:         user.setPassword(SecurityUtils.encryptPassword(user.getPassword()));\n200:         user.setUpdateBy(getUsername());\n201:         return toAjax(userService.resetPwd(user));\n202:     }\n203: \n204:     /**\n205:      * 状态修改\n206:      */\n207:     @PreAuthorize("@ss.hasPermi(\'system:user:edit\')")\n208:     @Log(title = "用户管理", businessType = BusinessType.UPDATE)\n209:     @PutMapping("/changeStatus")\n210:     public AjaxResult changeStatus(@RequestBody SysUser user)\n211:     {\n212:         userService.checkUserAllowed(user);\n213:         userService.checkUserDataScope(user.getUserId());\n214:         user.setUpdateBy(getUsername());\n215:         return toAjax(userService.updateUserStatus(user));\n216:     }\n217: \n218:     /**\n219:      * 根据用户编号获取授权角色\n220:      */\n221:     @PreAuthorize("@ss.hasPermi(\'system:user:query\')")\n222:     @GetMapping("/authRole/{userId}")\n223:     public AjaxResult authRole(@PathVariable("userId") Long userId)\n224:     {\n225:         AjaxResult ajax = AjaxResult.success();\n226:         SysUser user = userService.selectUserById(userId);\n227:         List<SysRole> roles = roleService.selectRolesByUserId(userId);\n228:         ajax.put("user", user);\n229:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));\n230:         return ajax;\n231:     }\n232: \n233:     /**\n234:      * 用户授权角色\n235:      */\n236:     @PreAuthorize("@ss.hasPermi(\'system:user:edit\')")\n237:     @Log(title = "用户管理", businessType = BusinessType.GRANT)\n238:     @PutMapping("/authRole")\n239:     public AjaxResult insertAuthRole(Long userId, Long[] roleIds)\n240:     {\n241:         userService.checkUserDataScope(userId);\n242:         roleService.checkRoleDataScope(roleIds);\n243:         userService.insertUserAuth(userId, roleIds);\n244:         return success();\n245:     }\n246: \n247:     /**\n248:      * 获取部门树列表\n249:      */\n250:     @PreAuthorize("@ss.hasPermi(\'system:user:list\')")\n251:     @GetMapping("/deptTree")\n252:     public AjaxResult deptTree(SysDept dept)\n253:     {\n254:         return success(deptService.selectDeptTreeList(dept));\n255:     }\n256: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', name='TestController.java', source_code='  1: package com.ruoyi.web.controller.tool;\n  2: \n  3: import java.util.ArrayList;\n  4: import java.util.LinkedHashMap;\n  5: import java.util.List;\n  6: import java.util.Map;\n  7: import org.springframework.web.bind.annotation.DeleteMapping;\n  8: import org.springframework.web.bind.annotation.GetMapping;\n  9: import org.springframework.web.bind.annotation.PathVariable;\n 10: import org.springframework.web.bind.annotation.PostMapping;\n 11: import org.springframework.web.bind.annotation.PutMapping;\n 12: import org.springframework.web.bind.annotation.RequestBody;\n 13: import org.springframework.web.bind.annotation.RequestMapping;\n 14: import org.springframework.web.bind.annotation.RestController;\n 15: import com.ruoyi.common.core.controller.BaseController;\n 16: import com.ruoyi.common.core.domain.R;\n 17: import com.ruoyi.common.utils.StringUtils;\n 18: import io.swagger.annotations.Api;\n 19: import io.swagger.annotations.ApiImplicitParam;\n 20: import io.swagger.annotations.ApiImplicitParams;\n 21: import io.swagger.annotations.ApiModel;\n 22: import io.swagger.annotations.ApiModelProperty;\n 23: import io.swagger.annotations.ApiOperation;\n 24: \n 25: /**\n 26:  * swagger 用户测试方法\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @Api("用户信息管理")\n 31: @RestController\n 32: @RequestMapping("/test/user")\n 33: public class TestController extends BaseController\n 34: {\n 35:     private final static Map<Integer, UserEntity> users = new LinkedHashMap<Integer, UserEntity>();\n 36:     {\n 37:         users.put(1, new UserEntity(1, "admin", "admin123", "15888888888"));\n 38:         users.put(2, new UserEntity(2, "ry", "admin123", "15666666666"));\n 39:     }\n 40: \n 41:     @ApiOperation("获取用户列表")\n 42:     @GetMapping("/list")\n 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);\n 47:     }\n 48: \n 49:     @ApiOperation("获取用户详细")\n 50:     @ApiImplicitParam(name = "userId", value = "用户ID", required = true, dataType = "int", paramType = "path", dataTypeClass = Integer.class)\n 51:     @GetMapping("/{userId}")\n 52:     public R<UserEntity> getUser(@PathVariable Integer userId)\n 53:     {\n 54:         if (!users.isEmpty() && users.containsKey(userId))\n 55:         {\n 56:             return R.ok(users.get(userId));\n 57:         }\n 58:         else\n 59:         {\n 60:             return R.fail("用户不存在");\n 61:         }\n 62:     }\n 63: \n 64:     @ApiOperation("新增用户")\n 65:     @ApiImplicitParams({\n 66:         @ApiImplicitParam(name = "userId", value = "用户id", dataType = "Integer", dataTypeClass = Integer.class),\n 67:         @ApiImplicitParam(name = "username", value = "用户名称", dataType = "String", dataTypeClass = String.class),\n 68:         @ApiImplicitParam(name = "password", value = "用户密码", dataType = "String", dataTypeClass = String.class),\n 69:         @ApiImplicitParam(name = "mobile", value = "用户手机", dataType = "String", dataTypeClass = String.class)\n 70:     })\n 71:     @PostMapping("/save")\n 72:     public R<String> save(UserEntity user)\n 73:     {\n 74:         if (StringUtils.isNull(user) || StringUtils.isNull(user.getUserId()))\n 75:         {\n 76:             return R.fail("用户ID不能为空");\n 77:         }\n 78:         users.put(user.getUserId(), user);\n 79:         return R.ok();\n 80:     }\n 81: \n 82:     @ApiOperation("更新用户")\n 83:     @PutMapping("/update")\n 84:     public R<String> update(@RequestBody UserEntity user)\n 85:     {\n 86:         if (StringUtils.isNull(user) || StringUtils.isNull(user.getUserId()))\n 87:         {\n 88:             return R.fail("用户ID不能为空");\n 89:         }\n 90:         if (users.isEmpty() || !users.containsKey(user.getUserId()))\n 91:         {\n 92:             return R.fail("用户不存在");\n 93:         }\n 94:         users.remove(user.getUserId());\n 95:         users.put(user.getUserId(), user);\n 96:         return R.ok();\n 97:     }\n 98: \n 99:     @ApiOperation("删除用户信息")\n100:     @ApiImplicitParam(name = "userId", value = "用户ID", required = true, dataType = "int", paramType = "path", dataTypeClass = Integer.class)\n101:     @DeleteMapping("/{userId}")\n102:     public R<String> delete(@PathVariable Integer userId)\n103:     {\n104:         if (!users.isEmpty() && users.containsKey(userId))\n105:         {\n106:             users.remove(userId);\n107:             return R.ok();\n108:         }\n109:         else\n110:         {\n111:             return R.fail("用户不存在");\n112:         }\n113:     }\n114: }\n115: \n116: @ApiModel(value = "UserEntity", description = "用户实体")\n117: class UserEntity\n118: {\n119:     @ApiModelProperty("用户ID")\n120:     private Integer userId;\n121: \n122:     @ApiModelProperty("用户名称")\n123:     private String username;\n124: \n125:     @ApiModelProperty("用户密码")\n126:     private String password;\n127: \n128:     @ApiModelProperty("用户手机")\n129:     private String mobile;\n130: \n131:     public UserEntity()\n132:     {\n133: \n134:     }\n135: \n136:     public UserEntity(Integer userId, String username, String password, String mobile)\n137:     {\n138:         this.userId = userId;\n139:         this.username = username;\n140:         this.password = password;\n141:         this.mobile = mobile;\n142:     }\n143: \n144:     public Integer getUserId()\n145:     {\n146:         return userId;\n147:     }\n148: \n149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }\n153: \n154:     public String getUsername()\n155:     {\n156:         return username;\n157:     }\n158: \n159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }\n163: \n164:     public String getPassword()\n165:     {\n166:         return password;\n167:     }\n168: \n169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }\n173: \n174:     public String getMobile()\n175:     {\n176:         return mobile;\n177:     }\n178: \n179:     public void setMobile(String mobile)\n180:     {\n181:         this.mobile = mobile;\n182:     }\n183: }', extension='.java'), SourceFile(path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', name='SwaggerConfig.java', source_code='  1: package com.ruoyi.web.core.config;\n  2: \n  3: import java.util.ArrayList;\n  4: import java.util.List;\n  5: import org.springframework.beans.factory.annotation.Autowired;\n  6: import org.springframework.beans.factory.annotation.Value;\n  7: import org.springframework.context.annotation.Bean;\n  8: import org.springframework.context.annotation.Configuration;\n  9: import com.ruoyi.common.config.RuoYiConfig;\n 10: import io.swagger.annotations.ApiOperation;\n 11: import io.swagger.models.auth.In;\n 12: import springfox.documentation.builders.ApiInfoBuilder;\n 13: import springfox.documentation.builders.PathSelectors;\n 14: import springfox.documentation.builders.RequestHandlerSelectors;\n 15: import springfox.documentation.service.ApiInfo;\n 16: import springfox.documentation.service.ApiKey;\n 17: import springfox.documentation.service.AuthorizationScope;\n 18: import springfox.documentation.service.Contact;\n 19: import springfox.documentation.service.SecurityReference;\n 20: import springfox.documentation.service.SecurityScheme;\n 21: import springfox.documentation.spi.DocumentationType;\n 22: import springfox.documentation.spi.service.contexts.SecurityContext;\n 23: import springfox.documentation.spring.web.plugins.Docket;\n 24: \n 25: /**\n 26:  * Swagger2的接口配置\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @Configuration\n 31: public class SwaggerConfig\n 32: {\n 33:     /** 系统基础配置 */\n 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;\n 36: \n 37:     /** 是否开启swagger */\n 38:     @Value("${swagger.enabled}")\n 39:     private boolean enabled;\n 40: \n 41:     /** 设置请求的统一前缀 */\n 42:     @Value("${swagger.pathMapping}")\n 43:     private String pathMapping;\n 44: \n 45:     /**\n 46:      * 创建API\n 47:      */\n 48:     @Bean\n 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n 69:     }\n 70: \n 71:     /**\n 72:      * 安全模式，这里指定token通过Authorization头请求头传递\n 73:      */\n 74:     private List<SecurityScheme> securitySchemes()\n 75:     {\n 76:         List<SecurityScheme> apiKeyList = new ArrayList<SecurityScheme>();\n 77:         apiKeyList.add(new ApiKey("Authorization", "Authorization", In.HEADER.toValue()));\n 78:         return apiKeyList;\n 79:     }\n 80: \n 81:     /**\n 82:      * 安全上下文\n 83:      */\n 84:     private List<SecurityContext> securityContexts()\n 85:     {\n 86:         List<SecurityContext> securityContexts = new ArrayList<>();\n 87:         securityContexts.add(\n 88:                 SecurityContext.builder()\n 89:                         .securityReferences(defaultAuth())\n 90:                         .operationSelector(o -> o.requestMappingPattern().matches("/.*"))\n 91:                         .build());\n 92:         return securityContexts;\n 93:     }\n 94: \n 95:     /**\n 96:      * 默认的安全上引用\n 97:      */\n 98:     private List<SecurityReference> defaultAuth()\n 99:     {\n100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n105:         return securityReferences;\n106:     }\n107: \n108:     /**\n109:      * 添加摘要信息\n110:      */\n111:     private ApiInfo apiInfo()\n112:     {\n113:         // 用ApiInfoBuilder进行定制\n114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n125: }', extension='.java')]
2025-02-01T14:41:23.337407+0800 | DEBUG | [CodeUnit(source_code=' 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>', start_code_line=6, end_code_line=9, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='ruoyi', source_desc='ruoyi-admin项目依赖于父级项目ruoyi'), CodeUnit(source_code='21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>', start_code_line=21, end_code_line=25, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='spring-boot-devtools', source_desc='ruoyi-admin项目依赖于spring-boot-devtools库'), CodeUnit(source_code='28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>', start_code_line=28, end_code_line=31, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='springfox-boot-starter', source_desc='ruoyi-admin项目依赖于swagger3库springfox-boot-starter'), CodeUnit(source_code='34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>', start_code_line=34, end_code_line=38, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='swagger-models', source_desc='ruoyi-admin项目依赖于swagger-models库，版本为1.6.2'), CodeUnit(source_code='41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>', start_code_line=41, end_code_line=44, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='mysql-connector-java', source_desc='ruoyi-admin项目依赖于Mysql驱动包'), CodeUnit(source_code='48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>', start_code_line=48, end_code_line=50, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='ruoyi-framework', source_desc='ruoyi-admin项目依赖于核心模块ruoyi-framework'), CodeUnit(source_code='54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>', start_code_line=54, end_code_line=56, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='ruoyi-quartz', source_desc='ruoyi-admin项目依赖于定时任务模块ruoyi-quartz'), CodeUnit(source_code='60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>', start_code_line=60, end_code_line=62, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='ruoyi-generator', source_desc='ruoyi-admin项目依赖于代码生成模块ruoyi-generator'), CodeUnit(source_code='68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n73:                     <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->\n74:                 </configuration>\n75:                 <executions>\n76:                     <execution>\n77:                         <goals>\n78:                             <goal>repackage</goal>\n79:                         </goals>\n80:                     </execution>\n81:                 </executions>\n82:             </plugin>', start_code_line=68, end_code_line=82, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='spring-boot-maven-plugin', source_desc='ruoyi-admin项目使用spring-boot-maven-plugin进行构建'), CodeUnit(source_code='83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   ', start_code_line=83, end_code_line=91, name='pom.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml', source_name='ruoyi-admin', target_name='maven-war-plugin', source_desc='ruoyi-admin项目使用maven-war-plugin进行构建')]
2025-02-01T14:41:23.338404+0800 | DEBUG | [CodeUnit(source_code=' 4: \t<property name="log.path" value="/home/ruoyi/logs" />', start_code_line=4, end_code_line=4, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='property', target_name='log.path', source_desc='定义日志存放路径'), CodeUnit(source_code=' 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />', start_code_line=6, end_code_line=6, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='property', target_name='log.pattern', source_desc='定义日志输出格式'), CodeUnit(source_code=' 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>', start_code_line=9, end_code_line=13, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='appender', target_name='console', source_desc='定义控制台输出'), CodeUnit(source_code='16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>', start_code_line=16, end_code_line=36, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='appender', target_name='file_info', source_desc='定义系统日志输出'), CodeUnit(source_code='38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>', start_code_line=38, end_code_line=58, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='appender', target_name='file_error', source_desc='定义系统错误日志输出'), CodeUnit(source_code='61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>', start_code_line=61, end_code_line=72, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='appender', target_name='sys-user', source_desc='定义用户访问日志输出'), CodeUnit(source_code='75: \t<logger name="com.ruoyi" level="info" />', start_code_line=75, end_code_line=75, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='logger', target_name='com.ruoyi', source_desc='控制com.ruoyi模块的日志级别为info'), CodeUnit(source_code='77: \t<logger name="org.springframework" level="warn" />', start_code_line=77, end_code_line=77, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='logger', target_name='org.springframework', source_desc='控制org.springframework模块的日志级别为warn'), CodeUnit(source_code='79: \t<root level="info">\n80: \t\t<appender-ref ref="console" />\n81: \t</root>', start_code_line=79, end_code_line=81, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='root', target_name='console', source_desc='设置根日志级别为info并引用控制台输出'), CodeUnit(source_code='84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />', start_code_line=84, end_code_line=86, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='root', target_name='file_info', source_desc='设置根日志级别为info并引用系统日志输出'), CodeUnit(source_code='90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>', start_code_line=90, end_code_line=92, name='logback.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml', source_name='logger', target_name='sys-user', source_desc='控制sys-user模块的日志级别为info并引用用户访问日志输出')]
2025-02-01T14:41:23.340904+0800 | DEBUG | [CodeUnit(source_code=' 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>', start_code_line=5, end_code_line=18, name='mybatis-config.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml', source_name='configuration', target_name='settings', source_desc='configuration提供全局参数设置'), CodeUnit(source_code=' 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />', start_code_line=7, end_code_line=15, name='mybatis-config.xml', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml', source_name='settings', target_name='setting', source_desc='settings中包含多个参数设置')]
2025-02-01T14:41:23.340904+0800 | DEBUG | [CodeUnit(source_code='15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);', start_code_line=15, end_code_line=18, name='RuoYiApplication.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java', source_name='RuoYiApplication', target_name='SpringApplication', source_desc='RuoYiApplication类的main方法调用SpringApplication.run方法以启动应用程序'), CodeUnit(source_code='15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);', start_code_line=15, end_code_line=18, name='RuoYiApplication.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java', source_name='RuoYiApplication', target_name='System', source_desc='RuoYiApplication类的main方法调用System.out.println输出启动成功信息')]
2025-02-01T14:41:23.341925+0800 | DEBUG | [CodeUnit(source_code='11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }', start_code_line=11, end_code_line=18, name='RuoYiServletInitializer.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java', source_name='RuoYiServletInitializer', target_name='SpringBootServletInitializer', source_desc='RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法'), CodeUnit(source_code='14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);', start_code_line=14, end_code_line=16, name='RuoYiServletInitializer.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java', source_name='configure', target_name='SpringApplicationBuilder', source_desc='configure方法接受SpringApplicationBuilder参数并调用sources方法')]
2025-02-01T14:41:23.341925+0800 | DEBUG | [CodeUnit(source_code='46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;', start_code_line=46, end_code_line=92, name='CaptchaController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java', source_name='CaptchaController', target_name='ISysConfigService', source_desc='CaptchaController类中的getCode方法调用configService的selectCaptchaEnabled方法来获取验证码是否启用'), CodeUnit(source_code='46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;', start_code_line=46, end_code_line=92, name='CaptchaController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java', source_name='CaptchaController', target_name='Producer', source_desc='CaptchaController类中的getCode方法根据验证码类型调用captchaProducer或captchaProducerMath生成验证码文本和图像'), CodeUnit(source_code='46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;', start_code_line=46, end_code_line=92, name='CaptchaController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java', source_name='CaptchaController', target_name='RedisCache', source_desc='CaptchaController类中的getCode方法将验证码存储到redis中，通过调用redisCache的setCacheObject方法'), CodeUnit(source_code='46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;', start_code_line=46, end_code_line=92, name='CaptchaController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java', source_name='CaptchaController', target_name='Base64', source_desc='CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串')]
2025-02-01T14:41:23.344920+0800 | DEBUG | [CodeUnit(source_code=' 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }', start_code_line=46, end_code_line=70, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='FileUtils', source_desc='CommonController中的fileDownload方法验证文件下载合法性并下载指定文件'), CodeUnit(source_code=' 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }', start_code_line=51, end_code_line=54, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='StringUtils', source_desc='CommonController中的fileDownload方法处理非法文件名称的异常抛出'), CodeUnit(source_code=' 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;', start_code_line=56, end_code_line=56, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='RuoYiConfig', source_desc='CommonController中的fileDownload方法获取下载路径'), CodeUnit(source_code=' 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());', start_code_line=59, end_code_line=60, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='FileUtils', source_desc='CommonController中的fileDownload方法设置响应头以便下载'), CodeUnit(source_code=' 63:                 FileUtils.deleteFile(filePath);', start_code_line=63, end_code_line=63, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='FileUtils', source_desc='CommonController中的fileDownload方法根据条件删除下载后文件'), CodeUnit(source_code=' 83:             String fileName = FileUploadUtils.upload(filePath, file);', start_code_line=83, end_code_line=83, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='FileUploadUtils', source_desc='CommonController中的uploadFile方法处理文件上传并返回新文件名称'), CodeUnit(source_code=' 84:             String url = serverConfig.getUrl() + fileName;', start_code_line=84, end_code_line=84, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='serverConfig', source_desc='CommonController中的uploadFile方法组合存储文件url'), CodeUnit(source_code=' 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;', start_code_line=85, end_code_line=90, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='AjaxResult', source_desc='CommonController中的uploadFile方法创建成功响应'), CodeUnit(source_code='107:             String filePath = RuoYiConfig.getUploadPath();', start_code_line=107, end_code_line=107, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='RuoYiConfig', source_desc='CommonController中的uploadFiles方法获取上传路径'), CodeUnit(source_code='115:                 String fileName = FileUploadUtils.upload(filePath, file);', start_code_line=115, end_code_line=115, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='FileUploadUtils', source_desc='CommonController中的uploadFiles方法处理多个文件的上传'), CodeUnit(source_code='123:             ajax.put("urls", StringUtils.join(urls, FILE_DELIMETER));', start_code_line=123, end_code_line=123, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='StringUtils', source_desc='CommonController中的uploadFiles方法连接生成的多个URL'), CodeUnit(source_code='122:             AjaxResult ajax = AjaxResult.success();\n123:             ajax.put("urls", StringUtils.join(urls, FILE_DELIMETER));\n124:             ajax.put("fileNames", StringUtils.join(fileNames, FILE_DELIMETER));\n125:             ajax.put("newFileNames", StringUtils.join(newFileNames, FILE_DELIMETER));\n126:             ajax.put("originalFilenames", StringUtils.join(originalFilenames, FILE_DELIMETER));\n127:             return ajax;', start_code_line=122, end_code_line=127, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='AjaxResult', source_desc='CommonController中的uploadFiles方法创建成功响应'), CodeUnit(source_code='144:             if (!FileUtils.checkAllowDownload(resource))\n145:             {\n146:                 throw new Exception(StringUtils.format("资源文件({})非法，不允许下载。 ", resource));', start_code_line=144, end_code_line=146, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='FileUtils', source_desc='CommonController中的resourceDownload方法验证资源下载合法性'), CodeUnit(source_code='149:             String localPath = RuoYiConfig.getProfile();', start_code_line=149, end_code_line=149, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='RuoYiConfig', source_desc='CommonController中的resourceDownload方法获取本地资源路径'), CodeUnit(source_code='151:             String downloadPath = localPath + StringUtils.substringAfter(resource, Constants.RESOURCE_PREFIX);', start_code_line=151, end_code_line=151, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='StringUtils', source_desc='CommonController中的resourceDownload方法处理资源地址'), CodeUnit(source_code='155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());', start_code_line=155, end_code_line=156, name='CommonController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java', source_name='CommonController', target_name='FileUtils', source_desc='CommonController中的resourceDownload方法设置响应头以便下载资源')]
2025-02-01T14:41:23.346913+0800 | DEBUG | [CodeUnit(source_code=' 48:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 49:     @GetMapping()\n 50:     public AjaxResult getInfo() throws Exception\n 51:     {\n 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n 55: \n 56:         Map<String, Object> result = new HashMap<>(3);\n 57:         result.put("info", info);\n 58:         result.put("dbSize", dbSize);\n 59: \n 60:         List<Map<String, String>> pieList = new ArrayList<>();\n 61:         commandStats.stringPropertyNames().forEach(key -> {\n 62:             Map<String, String> data = new HashMap<>(2);\n 63:             String property = commandStats.getProperty(key);\n 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n 66:             pieList.add(data);\n 67:         });\n 68:         result.put("commandStats", pieList);\n 69:         return AjaxResult.success(result);\n 70:     }', start_code_line=48, end_code_line=70, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='CacheController', target_name='AjaxResult', source_desc='CacheController类的getInfo方法返回缓存相关信息'), CodeUnit(source_code=' 72:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 73:     @GetMapping("/getNames")\n 74:     public AjaxResult cache()\n 75:     {\n 76:         return AjaxResult.success(caches);', start_code_line=72, end_code_line=76, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='CacheController', target_name='AjaxResult', source_desc='CacheController类的cache方法返回缓存名称列表'), CodeUnit(source_code=' 79:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 80:     @GetMapping("/getKeys/{cacheName}")\n 81:     public AjaxResult getCacheKeys(@PathVariable String cacheName)\n 82:     {\n 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n 84:         return AjaxResult.success(new TreeSet<>(cacheKeys));\n 85:     }', start_code_line=79, end_code_line=85, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='CacheController', target_name='AjaxResult', source_desc='CacheController类的getCacheKeys方法返回指定缓存名称的所有键'), CodeUnit(source_code=' 87:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 88:     @GetMapping("/getValue/{cacheName}/{cacheKey}")\n 89:     public AjaxResult getCacheValue(@PathVariable String cacheName, @PathVariable String cacheKey)\n 90:     {\n 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);\n 92:         SysCache sysCache = new SysCache(cacheName, cacheKey, cacheValue);\n 93:         return AjaxResult.success(sysCache);\n 94:     }', start_code_line=87, end_code_line=94, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='CacheController', target_name='AjaxResult', source_desc='CacheController类的getCacheValue方法返回指定缓存名称和键的值'), CodeUnit(source_code=' 96:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 97:     @DeleteMapping("/clearCacheName/{cacheName}")\n 98:     public AjaxResult clearCacheName(@PathVariable String cacheName)\n 99:     {\n100:         Collection<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n101:         redisTemplate.delete(cacheKeys);\n102:         return AjaxResult.success();', start_code_line=96, end_code_line=102, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='CacheController', target_name='AjaxResult', source_desc='CacheController类的clearCacheName方法清除指定缓存名称的所有值'), CodeUnit(source_code='106:     @DeleteMapping("/clearCacheKey/{cacheKey}")\n107:     public AjaxResult clearCacheKey(@PathVariable String cacheKey)\n108:     {\n109:         redisTemplate.delete(cacheKey);\n110:         return AjaxResult.success();\n111:     }', start_code_line=106, end_code_line=111, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='CacheController', target_name='AjaxResult', source_desc='CacheController类的clearCacheKey方法清除指定缓存键的值'), CodeUnit(source_code='113:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n114:     @DeleteMapping("/clearCacheAll")\n115:     public AjaxResult clearCacheAll()\n116:     {\n117:         Collection<String> cacheKeys = redisTemplate.keys("*");\n118:         redisTemplate.delete(cacheKeys);\n119:         return AjaxResult.success();\n120:     }', start_code_line=113, end_code_line=120, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='CacheController', target_name='AjaxResult', source_desc='CacheController类的clearCacheAll方法清除所有缓存'), CodeUnit(source_code=' 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());', start_code_line=52, end_code_line=52, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='connection.info', source_desc='redisTemplate调用connection的info方法获取Redis信息'), CodeUnit(source_code=' 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));', start_code_line=53, end_code_line=53, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='connection.info', source_desc='redisTemplate调用connection的info方法获取Redis命令统计信息'), CodeUnit(source_code=' 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());', start_code_line=54, end_code_line=54, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='connection.dbSize', source_desc='redisTemplate调用connection的dbSize方法获取数据库大小'), CodeUnit(source_code=' 61:         commandStats.stringPropertyNames().forEach(key -> {', start_code_line=61, end_code_line=61, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='commandStats', target_name='stringPropertyNames', source_desc='commandStats调用stringPropertyNames获取所有属性名称'), CodeUnit(source_code=' 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));', start_code_line=64, end_code_line=64, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='StringUtils', target_name='removeStart', source_desc='StringUtils的removeStart方法去除字符串开头的特定前缀'), CodeUnit(source_code=' 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));', start_code_line=65, end_code_line=65, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='StringUtils', target_name='substringBetween', source_desc='StringUtils的substringBetween方法获取字符串之间的子串'), CodeUnit(source_code=' 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");', start_code_line=83, end_code_line=83, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='keys', source_desc='redisTemplate调用keys方法获取匹配特定模式的缓存键'), CodeUnit(source_code=' 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);', start_code_line=91, end_code_line=91, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='opsForValue', source_desc='redisTemplate调用opsForValue方法获取Value相关操作接口'), CodeUnit(source_code='101:         redisTemplate.delete(cacheKeys);', start_code_line=101, end_code_line=101, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='delete', source_desc='redisTemplate调用delete方法删除指定的缓存键'), CodeUnit(source_code='109:         redisTemplate.delete(cacheKey);', start_code_line=109, end_code_line=109, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='delete', source_desc='redisTemplate调用delete方法删除指定的缓存键'), CodeUnit(source_code='118:         redisTemplate.delete(cacheKeys);', start_code_line=118, end_code_line=118, name='CacheController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java', source_name='redisTemplate', target_name='delete', source_desc='redisTemplate调用delete方法删除匹配的所有缓存键')]
2025-02-01T14:41:23.348906+0800 | DEBUG | [CodeUnit(source_code='21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);', start_code_line=21, end_code_line=25, name='ServerController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java', source_name='ServerController', target_name='AjaxResult', source_desc='ServerController类的getInfo方法调用AjaxResult的success方法返回服务器信息'), CodeUnit(source_code='23:         Server server = new Server();\n24:         server.copyTo();', start_code_line=23, end_code_line=24, name='ServerController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java', source_name='ServerController', target_name='Server', source_desc='ServerController类的getInfo方法创建Server对象并调用其copyTo方法')]
2025-02-01T14:41:23.348906+0800 | DEBUG | [CodeUnit(source_code='40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);', start_code_line=40, end_code_line=44, name='SysLogininforController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java', source_name='SysLogininforController', target_name='ISysLogininforService', source_desc='SysLogininforController类通过logininforService调用selectLogininforList方法获取登录信息列表'), CodeUnit(source_code='50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");', start_code_line=50, end_code_line=54, name='SysLogininforController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java', source_name='SysLogininforController', target_name='ExcelUtil', source_desc='SysLogininforController类通过ExcelUtil导出登录日志到Excel文件'), CodeUnit(source_code='60:     public AjaxResult remove(@PathVariable Long[] infoIds)\n61:     {\n62:         return toAjax(logininforService.deleteLogininforByIds(infoIds));', start_code_line=60, end_code_line=62, name='SysLogininforController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java', source_name='SysLogininforController', target_name='ISysLogininforService', source_desc='SysLogininforController类调用logininforService的deleteLogininforByIds方法删除指定的登录信息'), CodeUnit(source_code='70:         logininforService.cleanLogininfor();\n71:         return success();', start_code_line=70, end_code_line=71, name='SysLogininforController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java', source_name='SysLogininforController', target_name='ISysLogininforService', source_desc='SysLogininforController类调用logininforService清空登录信息'), CodeUnit(source_code='79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();', start_code_line=79, end_code_line=80, name='SysLogininforController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java', source_name='SysLogininforController', target_name='SysPasswordService', source_desc='SysLogininforController类调用passwordService清除指定用户的登录记录缓存')]
2025-02-01T14:41:29.759672+0800 | DEBUG | [CodeUnit(source_code='36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);', start_code_line=36, end_code_line=40, name='SysOperlogController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java', source_name='SysOperlogController', target_name='operLogService', source_desc='SysOperlogController类调用operLogService的selectOperLogList方法以获取操作日志列表'), CodeUnit(source_code='46:     public void export(HttpServletResponse response, SysOperLog operLog)\n47:     {\n48:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n49:         ExcelUtil<SysOperLog> util = new ExcelUtil<SysOperLog>(SysOperLog.class);\n50:         util.exportExcel(response, list, "操作日志");', start_code_line=46, end_code_line=50, name='SysOperlogController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java', source_name='SysOperlogController', target_name='ExcelUtil', source_desc='SysOperlogController类调用ExcelUtil的exportExcel方法将操作日志导出为Excel文件'), CodeUnit(source_code='56:     public AjaxResult remove(@PathVariable Long[] operIds)\n57:     {\n58:         return toAjax(operLogService.deleteOperLogByIds(operIds));', start_code_line=56, end_code_line=58, name='SysOperlogController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java', source_name='SysOperlogController', target_name='operLogService', source_desc='SysOperlogController类调用operLogService的deleteOperLogByIds方法以删除指定ID的操作日志'), CodeUnit(source_code='64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();', start_code_line=64, end_code_line=66, name='SysOperlogController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java', source_name='SysOperlogController', target_name='operLogService', source_desc='SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志')]
2025-02-01T14:41:29.760669+0800 | DEBUG | [CodeUnit(source_code='45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");', start_code_line=45, end_code_line=45, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='redisCache', source_desc='SysUserOnlineController类使用redisCache提供的keys方法获取匹配的登录TOKEN键'), CodeUnit(source_code='52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));', start_code_line=52, end_code_line=52, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='userOnlineService', source_desc='SysUserOnlineController类调用userOnlineService的selectOnlineByInfo方法获取在线用户信息'), CodeUnit(source_code='56:                 userOnlineList.add(userOnlineService.selectOnlineByIpaddr(ipaddr, user));', start_code_line=56, end_code_line=56, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='userOnlineService', source_desc='SysUserOnlineController类调用userOnlineService的selectOnlineByIpaddr方法根据IP地址获取在线用户信息'), CodeUnit(source_code='60:                 userOnlineList.add(userOnlineService.selectOnlineByUserName(userName, user));', start_code_line=60, end_code_line=60, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='userOnlineService', source_desc='SysUserOnlineController类调用userOnlineService的selectOnlineByUserName方法根据用户名获取在线用户信息'), CodeUnit(source_code='64:                 userOnlineList.add(userOnlineService.loginUserToUserOnline(user));', start_code_line=64, end_code_line=64, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='userOnlineService', source_desc='SysUserOnlineController类调用userOnlineService的loginUserToUserOnline方法将登录用户转换为在线用户信息'), CodeUnit(source_code='49:             LoginUser user = redisCache.getCacheObject(key);', start_code_line=49, end_code_line=49, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='redisCache', source_desc='SysUserOnlineController类使用redisCache提供的getCacheObject方法获取指定键的缓存对象'), CodeUnit(source_code='69:         return getDataTable(userOnlineList);', start_code_line=69, end_code_line=69, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='getDataTable', source_desc='SysUserOnlineController类调用getDataTable方法返回用户列表的表格数据'), CodeUnit(source_code='80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);', start_code_line=80, end_code_line=80, name='SysUserOnlineController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java', source_name='SysUserOnlineController', target_name='redisCache', source_desc='SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象')]
2025-02-01T14:41:29.761950+0800 | DEBUG | [CodeUnit(source_code=' 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);', start_code_line=42, end_code_line=46, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='configService', source_desc='SysConfigController类获取参数配置列表通过configService调用selectConfigList函数'), CodeUnit(source_code=' 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysConfig config)\n 53:     {\n 54:         List<SysConfig> list = configService.selectConfigList(config);\n 55:         ExcelUtil<SysConfig> util = new ExcelUtil<SysConfig>(SysConfig.class);\n 56:         util.exportExcel(response, list, "参数数据");', start_code_line=51, end_code_line=56, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='ExcelUtil', source_desc='SysConfigController类导出参数数据通过ExcelUtil调用exportExcel函数'), CodeUnit(source_code=' 64:     public AjaxResult getInfo(@PathVariable Long configId)\n 65:     {\n 66:         return success(configService.selectConfigById(configId));', start_code_line=64, end_code_line=66, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='configService', source_desc='SysConfigController类获取详细信息通过configService调用selectConfigById函数'), CodeUnit(source_code=' 75:         return success(configService.selectConfigByKey(configKey));', start_code_line=75, end_code_line=75, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='configService', source_desc='SysConfigController类根据参数键名查询参数值通过configService调用selectConfigByKey函数'), CodeUnit(source_code=' 91:         return toAjax(configService.insertConfig(config));', start_code_line=91, end_code_line=91, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='configService', source_desc='SysConfigController类新增参数配置通过configService调用insertConfig函数'), CodeUnit(source_code='107:         return toAjax(configService.updateConfig(config));', start_code_line=107, end_code_line=107, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='configService', source_desc='SysConfigController类修改参数配置通过configService调用updateConfig函数'), CodeUnit(source_code='118:         configService.deleteConfigByIds(configIds);', start_code_line=118, end_code_line=118, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='configService', source_desc='SysConfigController类删除参数配置通过configService调用deleteConfigByIds函数'), CodeUnit(source_code='130:         configService.resetConfigCache();', start_code_line=130, end_code_line=130, name='SysConfigController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java', source_name='SysConfigController', target_name='configService', source_desc='SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数')]
2025-02-01T14:41:29.763016+0800 | DEBUG | [CodeUnit(source_code=' 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n 45:         return success(depts);', start_code_line=42, end_code_line=45, name='SysDeptController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java', source_name='SysDeptController', target_name='ISysDeptService', source_desc='SysDeptController类通过deptService调用ISysDeptService接口实现获取部门列表功能'), CodeUnit(source_code=' 53:     public AjaxResult excludeChild(@PathVariable(value = "deptId", required = false) Long deptId)\n 54:     {\n 55:         List<SysDept> depts = deptService.selectDeptList(new SysDept());\n 56:         depts.removeIf(d -> d.getDeptId().intValue() == deptId || ArrayUtils.contains(StringUtils.split(d.getAncestors(), ","), deptId + ""));\n 57:         return success(depts);', start_code_line=53, end_code_line=57, name='SysDeptController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java', source_name='SysDeptController', target_name='ISysDeptService', source_desc='SysDeptController类通过deptService调用ISysDeptService接口实现查询部门列表（排除节点）功能'), CodeUnit(source_code=' 65:     public AjaxResult getInfo(@PathVariable Long deptId)\n 66:     {\n 67:         deptService.checkDeptDataScope(deptId);\n 68:         return success(deptService.selectDeptById(deptId));', start_code_line=65, end_code_line=68, name='SysDeptController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java', source_name='SysDeptController', target_name='ISysDeptService', source_desc='SysDeptController类通过deptService调用ISysDeptService接口实现根据部门编号获取详细信息功能'), CodeUnit(source_code=' 77:     public AjaxResult add(@Validated @RequestBody SysDept dept)\n 78:     {\n 79:         if (!deptService.checkDeptNameUnique(dept))\n 80:         {\n 81:             return error("新增部门\'" + dept.getDeptName() + "\'失败，部门名称已存在");\n 82:         }\n 83:         dept.setCreateBy(getUsername());\n 84:         return toAjax(deptService.insertDept(dept));', start_code_line=77, end_code_line=84, name='SysDeptController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java', source_name='SysDeptController', target_name='ISysDeptService', source_desc='SysDeptController类通过deptService调用ISysDeptService接口实现新增部门功能'), CodeUnit(source_code=' 93:     public AjaxResult edit(@Validated @RequestBody SysDept dept)\n 94:     {\n 95:         Long deptId = dept.getDeptId();\n 96:         deptService.checkDeptDataScope(deptId);\n 97:         if (!deptService.checkDeptNameUnique(dept))\n 98:         {\n 99:             return error("修改部门\'" + dept.getDeptName() + "\'失败，部门名称已存在");\n100:         }\n101:         else if (dept.getParentId().equals(deptId))\n102:         {\n103:             return error("修改部门\'" + dept.getDeptName() + "\'失败，上级部门不能是自己");\n104:         }\n105:         else if (StringUtils.equals(UserConstants.DEPT_DISABLE, dept.getStatus()) && deptService.selectNormalChildrenDeptById(deptId) > 0)\n106:         {\n107:             return error("该部门包含未停用的子部门！");\n108:         }\n109:         dept.setUpdateBy(getUsername());\n110:         return toAjax(deptService.updateDept(dept));', start_code_line=93, end_code_line=110, name='SysDeptController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java', source_name='SysDeptController', target_name='ISysDeptService', source_desc='SysDeptController类通过deptService调用ISysDeptService接口实现修改部门功能'), CodeUnit(source_code='119:     public AjaxResult remove(@PathVariable Long deptId)\n120:     {\n121:         if (deptService.hasChildByDeptId(deptId))\n122:         {\n123:             return warn("存在下级部门,不允许删除");\n124:         }\n125:         if (deptService.checkDeptExistUser(deptId))\n126:         {\n127:             return warn("部门存在用户,不允许删除");\n128:         }\n129:         deptService.checkDeptDataScope(deptId);\n130:         return toAjax(deptService.deleteDeptById(deptId));', start_code_line=119, end_code_line=130, name='SysDeptController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java', source_name='SysDeptController', target_name='ISysDeptService', source_desc='SysDeptController类通过deptService调用ISysDeptService接口实现删除部门功能')]
2025-02-01T14:41:29.765024+0800 | DEBUG | [CodeUnit(source_code=' 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);', start_code_line=45, end_code_line=49, name='SysDictDataController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', source_name='SysDictDataController', target_name='dictDataService', source_desc='SysDictDataController类调用dictDataService服务获取字典数据列表'), CodeUnit(source_code=' 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }', start_code_line=55, end_code_line=60, name='SysDictDataController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', source_name='SysDictDataController', target_name='ExcelUtil', source_desc='SysDictDataController类调用ExcelUtil导出字典数据'), CodeUnit(source_code=' 67:     public AjaxResult getInfo(@PathVariable Long dictCode)\n 68:     {\n 69:         return success(dictDataService.selectDictDataById(dictCode));', start_code_line=67, end_code_line=69, name='SysDictDataController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', source_name='SysDictDataController', target_name='dictDataService', source_desc='SysDictDataController类调用dictDataService根据id获取字典数据'), CodeUnit(source_code=' 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);', start_code_line=76, end_code_line=83, name='SysDictDataController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', source_name='SysDictDataController', target_name='dictTypeService', source_desc='SysDictDataController类调用dictTypeService获取指定类型的字典数据'), CodeUnit(source_code=' 93:     {\n 94:         dict.setCreateBy(getUsername());\n 95:         return toAjax(dictDataService.insertDictData(dict));', start_code_line=93, end_code_line=95, name='SysDictDataController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', source_name='SysDictDataController', target_name='dictDataService', source_desc='SysDictDataController类调用dictDataService插入新的字典数据'), CodeUnit(source_code='105:     {\n106:         dict.setUpdateBy(getUsername());\n107:         return toAjax(dictDataService.updateDictData(dict));', start_code_line=105, end_code_line=107, name='SysDictDataController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', source_name='SysDictDataController', target_name='dictDataService', source_desc='SysDictDataController类调用dictDataService更新字典数据'), CodeUnit(source_code='117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();', start_code_line=117, end_code_line=119, name='SysDictDataController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java', source_name='SysDictDataController', target_name='dictDataService', source_desc='SysDictDataController类调用dictDataService删除字典数据')]
2025-02-01T14:41:29.766938+0800 | DEBUG | [CodeUnit(source_code=' 25: /**\n 26:  * 数据字典信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dict/type")\n 32: public class SysDictTypeController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n 36: \n 37:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n 45: \n 46:     @Log(title = "字典类型", businessType = BusinessType.EXPORT)\n 47:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");\n 54:     }\n 55: \n 56:     /**\n 57:      * 查询字典类型详细\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n 65: \n 66:     /**\n 67:      * 新增字典类型\n 68:      */\n 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n 81: \n 82:     /**\n 83:      * 修改字典类型\n 84:      */\n 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 删除字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n108:     }\n109: \n110:     /**\n111:      * 刷新字典缓存\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 获取字典选择框列表\n124:      */\n125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n131: }', start_code_line=25, end_code_line=131, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='dictTypeService', source_desc='SysDictTypeController类通过dictTypeService引用字典类型相关服务'), CodeUnit(source_code=' 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }', start_code_line=38, end_code_line=44, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='selectDictTypeList', source_desc='SysDictTypeController类调用dictTypeService查询字典类型列表'), CodeUnit(source_code=' 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");', start_code_line=48, end_code_line=53, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='selectDictTypeList', source_desc='SysDictTypeController类调用dictTypeService进行导出操作时获取字典类型列表'), CodeUnit(source_code=' 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }', start_code_line=60, end_code_line=64, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='selectDictTypeById', source_desc='SysDictTypeController类通过dictTypeService查询特定字典类型的详细信息'), CodeUnit(source_code=' 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());', start_code_line=72, end_code_line=78, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='checkDictTypeUnique', source_desc='SysDictTypeController类在新增操作中调用dictTypeService检查字典类型唯一性'), CodeUnit(source_code=' 79:         return toAjax(dictTypeService.insertDictType(dict));', start_code_line=79, end_code_line=79, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='insertDictType', source_desc='SysDictTypeController类通过dictTypeService新增字典类型'), CodeUnit(source_code=' 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");', start_code_line=88, end_code_line=92, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='checkDictTypeUnique', source_desc='SysDictTypeController类在编辑操作中调用dictTypeService检查字典类型唯一性'), CodeUnit(source_code=' 95:         return toAjax(dictTypeService.updateDictType(dict));', start_code_line=95, end_code_line=95, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='updateDictType', source_desc='SysDictTypeController类通过dictTypeService更新字典类型'), CodeUnit(source_code='106:         dictTypeService.deleteDictTypeByIds(dictIds);', start_code_line=106, end_code_line=106, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='deleteDictTypeByIds', source_desc='SysDictTypeController类通过dictTypeService删除字典类型'), CodeUnit(source_code='118:         dictTypeService.resetDictCache();', start_code_line=118, end_code_line=118, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='resetDictCache', source_desc='SysDictTypeController类调用dictTypeService刷新字典缓存'), CodeUnit(source_code='128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }', start_code_line=128, end_code_line=130, name='SysDictTypeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java', source_name='SysDictTypeController', target_name='selectDictTypeAll', source_desc='SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表')]
2025-02-01T14:41:29.768031+0800 | DEBUG | [CodeUnit(source_code='25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());', start_code_line=25, end_code_line=27, name='SysIndexController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java', source_name='SysIndexController', target_name='StringUtils', source_desc='SysIndexController类访问index方法，使用StringUtils格式化字符串'), CodeUnit(source_code='19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());', start_code_line=19, end_code_line=27, name='SysIndexController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java', source_name='SysIndexController', target_name='RuoYiConfig', source_desc='SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法')]
2025-02-01T14:41:29.768031+0800 | DEBUG | [CodeUnit(source_code='48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;', start_code_line=48, end_code_line=56, name='SysLoginController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java', source_name='SysLoginController', target_name='SysLoginService', source_desc='SysLoginController的login方法通过调用loginService的login方法进行用户登录验证'), CodeUnit(source_code='64:     @GetMapping("getInfo")\n65:     public AjaxResult getInfo()\n66:     {\n67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n68:         SysUser user = loginUser.getUser();', start_code_line=64, end_code_line=68, name='SysLoginController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java', source_name='SysLoginController', target_name='SecurityUtils', source_desc='SysLoginController的getInfo方法通过调用SecurityUtils获取当前登录用户信息'), CodeUnit(source_code='70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);', start_code_line=70, end_code_line=72, name='SysLoginController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java', source_name='SysLoginController', target_name='SysPermissionService', source_desc='SysLoginController的getInfo方法调用permissionService获取用户角色和权限集合'), CodeUnit(source_code='76:             tokenService.refreshToken(loginUser);', start_code_line=76, end_code_line=76, name='SysLoginController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java', source_name='SysLoginController', target_name='TokenService', source_desc='SysLoginController的getInfo方法调用tokenService刷新令牌'), CodeUnit(source_code='90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));', start_code_line=90, end_code_line=95, name='SysLoginController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java', source_name='SysLoginController', target_name='ISysMenuService', source_desc='SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表')]
2025-02-01T14:41:29.769931+0800 | DEBUG | [CodeUnit(source_code=' 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);', start_code_line=43, end_code_line=44, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用selectMenuList方法获取菜单列表'), CodeUnit(source_code=' 54:         return success(menuService.selectMenuById(menuId));', start_code_line=54, end_code_line=54, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用selectMenuById方法获取菜单详细信息'), CodeUnit(source_code=' 63:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 64:         return success(menuService.buildMenuTreeSelect(menus));', start_code_line=63, end_code_line=64, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用selectMenuList方法获取菜单列表'), CodeUnit(source_code=' 73:         List<SysMenu> menus = menuService.selectMenuList(getUserId());\n 74:         AjaxResult ajax = AjaxResult.success();\n 75:         ajax.put("checkedKeys", menuService.selectMenuListByRoleId(roleId));', start_code_line=73, end_code_line=75, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用selectMenuList方法根据用户ID获取菜单列表'), CodeUnit(source_code=' 88:         if (!menuService.checkMenuNameUnique(menu))', start_code_line=88, end_code_line=88, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用checkMenuNameUnique检查菜单名称唯一性'), CodeUnit(source_code=' 97:         return toAjax(menuService.insertMenu(menu));', start_code_line=97, end_code_line=97, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用insertMenu方法新增菜单'), CodeUnit(source_code='121:         return toAjax(menuService.updateMenu(menu));', start_code_line=121, end_code_line=121, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用updateMenu方法修改菜单'), CodeUnit(source_code='132:         if (menuService.hasChildByMenuId(menuId))', start_code_line=132, end_code_line=132, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用hasChildByMenuId检查菜单是否有子菜单'), CodeUnit(source_code='136:         if (menuService.checkMenuExistRole(menuId))', start_code_line=136, end_code_line=136, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用checkMenuExistRole检查菜单是否已分配'), CodeUnit(source_code='140:         return toAjax(menuService.deleteMenuById(menuId));', start_code_line=140, end_code_line=140, name='SysMenuController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java', source_name='SysMenuController', target_name='menuService', source_desc='SysMenuController类通过menuService调用deleteMenuById删除菜单')]
2025-02-01T14:41:29.771429+0800 | DEBUG | [CodeUnit(source_code='40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);', start_code_line=40, end_code_line=44, name='SysNoticeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java', source_name='SysNoticeController', target_name='ISysNoticeService', source_desc='SysNoticeController类通过noticeService调用selectNoticeList方法获取通知公告列表'), CodeUnit(source_code='52:     public AjaxResult getInfo(@PathVariable Long noticeId)\n53:     {\n54:         return success(noticeService.selectNoticeById(noticeId));', start_code_line=52, end_code_line=54, name='SysNoticeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java', source_name='SysNoticeController', target_name='ISysNoticeService', source_desc='SysNoticeController类通过noticeService调用selectNoticeById方法获取通知公告详细信息'), CodeUnit(source_code='63:     public AjaxResult add(@Validated @RequestBody SysNotice notice)\n64:     {\n65:         notice.setCreateBy(getUsername());\n66:         return toAjax(noticeService.insertNotice(notice));', start_code_line=63, end_code_line=66, name='SysNoticeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java', source_name='SysNoticeController', target_name='ISysNoticeService', source_desc='SysNoticeController类通过noticeService调用insertNotice方法新增通知公告'), CodeUnit(source_code='75:     public AjaxResult edit(@Validated @RequestBody SysNotice notice)\n76:     {\n77:         notice.setUpdateBy(getUsername());\n78:         return toAjax(noticeService.updateNotice(notice));', start_code_line=75, end_code_line=78, name='SysNoticeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java', source_name='SysNoticeController', target_name='ISysNoticeService', source_desc='SysNoticeController类通过noticeService调用updateNotice方法修改通知公告'), CodeUnit(source_code='88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }', start_code_line=88, end_code_line=90, name='SysNoticeController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java', source_name='SysNoticeController', target_name='ISysNoticeService', source_desc='SysNoticeController类通过noticeService调用deleteNoticeByIds方法删除通知公告')]
2025-02-01T14:41:41.953040+0800 | DEBUG | [CodeUnit(source_code=' 35:     private ISysPostService postService;', start_code_line=35, end_code_line=35, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService', source_desc='SysPostController类中postService属性用于调用ISysPostService接口的方法'), CodeUnit(source_code=' 44:         startPage();', start_code_line=44, end_code_line=44, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='startPage', source_desc='SysPostController类中的list方法调用startPage用于分页处理'), CodeUnit(source_code=' 45:         List<SysPost> list = postService.selectPostList(post);', start_code_line=45, end_code_line=45, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.selectPostList', source_desc='SysPostController类中的list方法调用postService的selectPostList获取岗位列表'), CodeUnit(source_code=' 46:         return getDataTable(list);', start_code_line=46, end_code_line=46, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='getDataTable', source_desc='SysPostController类中的list方法调用getDataTable将列表数据封装成TableDataInfo'), CodeUnit(source_code=' 54:         List<SysPost> list = postService.selectPostList(post);', start_code_line=54, end_code_line=54, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.selectPostList', source_desc='SysPostController类中的export方法调用postService的selectPostList获取岗位列表以导出'), CodeUnit(source_code=' 55:         ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);', start_code_line=55, end_code_line=55, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='new ExcelUtil', source_desc='SysPostController类中的export方法创建ExcelUtil对象以处理Excel导出'), CodeUnit(source_code=' 56:         util.exportExcel(response, list, "岗位数据");', start_code_line=56, end_code_line=56, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='ExcelUtil', target_name='exportExcel', source_desc='ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel'), CodeUnit(source_code=' 66:         return success(postService.selectPostById(postId));', start_code_line=66, end_code_line=66, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.selectPostById', source_desc='SysPostController类中的getInfo方法调用postService的selectPostById获取岗位详细信息'), CodeUnit(source_code=' 66:         return success(postService.selectPostById(postId));', start_code_line=66, end_code_line=66, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='success', source_desc='SysPostController类中的getInfo方法调用success返回获取岗位信息的成功结果'), CodeUnit(source_code=' 77:         if (!postService.checkPostNameUnique(post))', start_code_line=77, end_code_line=77, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.checkPostNameUnique', source_desc='SysPostController类中的add方法调用postService的checkPostNameUnique检查岗位名称唯一性'), CodeUnit(source_code=' 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");', start_code_line=79, end_code_line=79, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='error', source_desc='SysPostController类中的add方法调用error返回岗位名称已存在的错误信息'), CodeUnit(source_code=' 81:         else if (!postService.checkPostCodeUnique(post))', start_code_line=81, end_code_line=81, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.checkPostCodeUnique', source_desc='SysPostController类中的add方法调用postService的checkPostCodeUnique检查岗位编码唯一性'), CodeUnit(source_code=' 85:         post.setCreateBy(getUsername());', start_code_line=85, end_code_line=85, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='post.setCreateBy', source_desc='SysPostController类中的add方法设置岗位创建者'), CodeUnit(source_code=' 86:         return toAjax(postService.insertPost(post));', start_code_line=86, end_code_line=86, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.insertPost', source_desc='SysPostController类中的add方法调用postService的insertPost插入新岗位'), CodeUnit(source_code=' 97:         if (!postService.checkPostNameUnique(post))', start_code_line=97, end_code_line=97, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.checkPostNameUnique', source_desc='SysPostController类中的edit方法调用postService的checkPostNameUnique检查岗位名称唯一性'), CodeUnit(source_code=' 99:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");', start_code_line=99, end_code_line=99, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='Error', source_desc='SysPostController类中的edit方法调用error返回修改岗位名称已存在的错误信息'), CodeUnit(source_code='101:         else if (!postService.checkPostCodeUnique(post))', start_code_line=101, end_code_line=101, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.checkPostCodeUnique', source_desc='SysPostController类中的edit方法调用postService的checkPostCodeUnique检查岗位编码唯一性'), CodeUnit(source_code='105:         post.setUpdateBy(getUsername());', start_code_line=105, end_code_line=105, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='post.setUpdateBy', source_desc='SysPostController类中的edit方法设置岗位更新者'), CodeUnit(source_code='106:         return toAjax(postService.updatePost(post));', start_code_line=106, end_code_line=106, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.updatePost', source_desc='SysPostController类中的edit方法调用postService的updatePost更新岗位信息'), CodeUnit(source_code='117:         return toAjax(postService.deletePostByIds(postIds));', start_code_line=117, end_code_line=117, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.deletePostByIds', source_desc='SysPostController类中的remove方法调用postService的deletePostByIds删除岗位'), CodeUnit(source_code='117:         return toAjax(postService.deletePostByIds(postIds));', start_code_line=117, end_code_line=117, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='toAjax', source_desc='SysPostController类中的remove方法调用toAjax返回删除结果'), CodeUnit(source_code='126:         List<SysPost> posts = postService.selectPostAll();', start_code_line=126, end_code_line=126, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='postService.selectPostAll', source_desc='SysPostController类中的optionselect方法调用postService的selectPostAll获取所有岗位'), CodeUnit(source_code='127:         return success(posts);', start_code_line=127, end_code_line=127, name='SysPostController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java', source_name='SysPostController', target_name='success', source_desc='SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果')]
2025-02-01T14:41:41.955560+0800 | DEBUG | [CodeUnit(source_code=' 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }', start_code_line=32, end_code_line=140, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='SysProfileController', target_name='AjaxResult', source_desc='SysProfileController类提供个人信息的获取和更新功能'), CodeUnit(source_code=' 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }', start_code_line=32, end_code_line=140, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='SysProfileController', target_name='ISysUserService', source_desc='SysProfileController类中用于获取用户角色和岗位信息'), CodeUnit(source_code=' 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }', start_code_line=32, end_code_line=140, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='SysProfileController', target_name='TokenService', source_desc='SysProfileController类中用于更新用户的登录信息缓存'), CodeUnit(source_code=' 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;', start_code_line=46, end_code_line=135, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='SysProfileController', target_name='LoginUser', source_desc='用于获取当前登录用户信息'), CodeUnit(source_code=' 49:         SysUser user = loginUser.getUser();', start_code_line=49, end_code_line=49, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='LoginUser', target_name='SysUser', source_desc='LoginUser类获取用户信息'), CodeUnit(source_code=' 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))', start_code_line=69, end_code_line=73, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='SysUser', target_name='StringUtils', source_desc='用于手机号和邮箱唯一性检查'), CodeUnit(source_code=' 77:         if (userService.updateUserProfile(currentUser) > 0)', start_code_line=77, end_code_line=77, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='SysUser', target_name='ISysUserService', source_desc='用于更新用户信息和检查用户唯一性'), CodeUnit(source_code=' 80:             tokenService.setLoginUser(loginUser);', start_code_line=80, end_code_line=80, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='TokenService', target_name='LoginUser', source_desc='TokenService类更新用户的登录缓存'), CodeUnit(source_code=' 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);', start_code_line=98, end_code_line=106, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='SecurityUtils', target_name='String', source_desc='用于密码的匹配和加密功能'), CodeUnit(source_code='127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);', start_code_line=127, end_code_line=127, name='SysProfileController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java', source_name='FileUploadUtils', target_name='String', source_desc='用于处理用户头像的上传')]
2025-02-01T14:41:41.961647+0800 | DEBUG | [CodeUnit(source_code='28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);', start_code_line=28, end_code_line=36, name='SysRegisterController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java', source_name='SysRegisterController', target_name='configService', source_desc='SysRegisterController类的register方法通过调用configService的selectConfigByKey方法检查注册功能是否开启'), CodeUnit(source_code='35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);', start_code_line=35, end_code_line=36, name='SysRegisterController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java', source_name='SysRegisterController', target_name='registerService', source_desc='SysRegisterController类的register方法通过调用registerService的register方法进行用户注册'), CodeUnit(source_code='36:         return StringUtils.isEmpty(msg) ? success() : error(msg);', start_code_line=36, end_code_line=36, name='SysRegisterController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java', source_name='SysRegisterController', target_name='StringUtils', source_desc='SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空')]
2025-02-01T14:41:41.961647+0800 | DEBUG | [CodeUnit(source_code=' 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);', start_code_line=60, end_code_line=64, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用selectRoleList方法获取角色列表'), CodeUnit(source_code=' 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");', start_code_line=70, end_code_line=74, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='ExcelUtil', source_desc='SysRoleController类通过ExcelUtil导出角色数据到Excel文件'), CodeUnit(source_code=' 84:         roleService.checkRoleDataScope(roleId);\n 85:         return success(roleService.selectRoleById(roleId));', start_code_line=84, end_code_line=85, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用checkRoleDataScope方法验证角色数据范围'), CodeUnit(source_code=' 96:         if (!roleService.checkRoleNameUnique(role))\n 97:         {\n 98:             return error("新增角色\'" + role.getRoleName() + "\'失败，角色名称已存在");\n 99:         }\n100:         else if (!roleService.checkRoleKeyUnique(role))', start_code_line=96, end_code_line=100, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用checkRoleNameUnique方法检查角色名称唯一性'), CodeUnit(source_code='105:         return toAjax(roleService.insertRole(role));', start_code_line=105, end_code_line=105, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用insertRole方法插入新角色'), CodeUnit(source_code='117:         roleService.checkRoleAllowed(role);', start_code_line=117, end_code_line=117, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用checkRoleAllowed方法检查角色是否允许修改'), CodeUnit(source_code='129:         if (roleService.updateRole(role) > 0)', start_code_line=129, end_code_line=129, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用updateRole方法更新角色信息'), CodeUnit(source_code='135:                 loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));', start_code_line=135, end_code_line=135, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='userService', source_desc='SysRoleController类通过userService调用selectUserByUserName方法获取用户信息'), CodeUnit(source_code='136:                 loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));', start_code_line=136, end_code_line=136, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='permissionService', source_desc='SysRoleController类通过permissionService获取用户权限'), CodeUnit(source_code='137:                 tokenService.setLoginUser(loginUser);', start_code_line=137, end_code_line=137, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='tokenService', source_desc='SysRoleController类通过tokenService设置登录用户信息'), CodeUnit(source_code='154:         return toAjax(roleService.authDataScope(role));', start_code_line=154, end_code_line=154, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用authDataScope方法授权角色的数据权限'), CodeUnit(source_code='179:         return toAjax(roleService.deleteRoleByIds(roleIds));', start_code_line=179, end_code_line=179, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用deleteRoleByIds方法删除角色'), CodeUnit(source_code='200:         List<SysUser> list = userService.selectAllocatedList(user);\n201:         return getDataTable(list);', start_code_line=200, end_code_line=201, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='userService', source_desc='SysRoleController类通过userService调用selectAllocatedList方法查询已分配的用户角色列表'), CodeUnit(source_code='212:         List<SysUser> list = userService.selectUnallocatedList(user);\n213:         return getDataTable(list);', start_code_line=212, end_code_line=213, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='userService', source_desc='SysRoleController类通过userService调用selectUnallocatedList方法查询未分配的用户角色列表'), CodeUnit(source_code='224:         return toAjax(roleService.deleteAuthUser(userRole));', start_code_line=224, end_code_line=224, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用deleteAuthUser方法取消授权用户'), CodeUnit(source_code='235:         return toAjax(roleService.deleteAuthUsers(roleId, userIds));', start_code_line=235, end_code_line=235, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用deleteAuthUsers方法批量取消授权用户'), CodeUnit(source_code='247:         return toAjax(roleService.insertAuthUsers(roleId, userIds));', start_code_line=247, end_code_line=247, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='roleService', source_desc='SysRoleController类通过roleService调用insertAuthUsers方法批量选择用户授权'), CodeUnit(source_code='258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));', start_code_line=258, end_code_line=258, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='deptService', source_desc='SysRoleController类通过deptService调用selectDeptListByRoleId方法获取部门列表'), CodeUnit(source_code='259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));', start_code_line=259, end_code_line=259, name='SysRoleController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java', source_name='SysRoleController', target_name='deptService', source_desc='SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表')]
2025-02-01T14:41:41.962858+0800 | DEBUG | [CodeUnit(source_code=' 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n 66:     }', start_code_line=61, end_code_line=66, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='userService', source_desc='SysUserController类中的list方法获取用户列表，调用userService的selectUserList方法'), CodeUnit(source_code=' 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");', start_code_line=71, end_code_line=75, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='ExcelUtil', source_desc='SysUserController类中的export方法导出用户列表到Excel，调用ExcelUtil的exportExcel方法'), CodeUnit(source_code=' 86:         String message = userService.importUser(userList, updateSupport, operName);\n 87:         return success(message);', start_code_line=86, end_code_line=87, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='userService', source_desc='SysUserController类中的importData方法导入用户数据，调用userService的importUser方法'), CodeUnit(source_code=' 94:         util.importTemplateExcel(response, "用户数据");\n 95:     }', start_code_line=94, end_code_line=95, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='ExcelUtil', source_desc='SysUserController类中的importTemplate方法导出用户模板，调用ExcelUtil的importTemplateExcel方法'), CodeUnit(source_code='107:             userService.checkUserDataScope(userId);\n108:             SysUser sysUser = userService.selectUserById(userId);', start_code_line=107, end_code_line=108, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='userService', source_desc='SysUserController类中的getInfo方法获取用户详细信息，调用userService的checkUserDataScope和selectUserById方法'), CodeUnit(source_code='113:         List<SysRole> roles = roleService.selectRoleAll();\n114:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));', start_code_line=113, end_code_line=114, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='roleService', source_desc='SysUserController类中的getInfo方法获取用户角色信息，调用roleService的selectRoleAll方法'), CodeUnit(source_code='143:         return toAjax(userService.insertUser(user));', start_code_line=143, end_code_line=143, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='userService', source_desc='SysUserController类中的add方法新增用户，调用userService的insertUser方法'), CodeUnit(source_code='127:         deptService.checkDeptDataScope(user.getDeptId());', start_code_line=127, end_code_line=127, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='deptService', source_desc='SysUserController类中的add方法检查部门数据权限，调用deptService的checkDeptDataScope方法'), CodeUnit(source_code='128:         roleService.checkRoleDataScope(user.getRoleIds());', start_code_line=128, end_code_line=128, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='roleService', source_desc='SysUserController类中的add方法检查角色数据权限，调用roleService的checkRoleDataScope方法'), CodeUnit(source_code='171:         return toAjax(userService.updateUser(user));', start_code_line=171, end_code_line=171, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='userService', source_desc='SysUserController类中的edit方法修改用户，调用userService的updateUser方法'), CodeUnit(source_code='186:         return toAjax(userService.deleteUserByIds(userIds));', start_code_line=186, end_code_line=186, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='userService', source_desc='SysUserController类中的remove方法删除用户，调用userService的deleteUserByIds方法'), CodeUnit(source_code='227:         List<SysRole> roles = roleService.selectRolesByUserId(userId);', start_code_line=227, end_code_line=227, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='roleService', source_desc='SysUserController类中的authRole方法获取用户授权角色，调用roleService的selectRolesByUserId方法'), CodeUnit(source_code='243:         userService.insertUserAuth(userId, roleIds);', start_code_line=243, end_code_line=243, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='userService', source_desc='SysUserController类中的insertAuthRole方法用户授权角色，调用userService的insertUserAuth方法'), CodeUnit(source_code='254:         return success(deptService.selectDeptTreeList(dept));', start_code_line=254, end_code_line=254, name='SysUserController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java', source_name='SysUserController', target_name='deptService', source_desc='SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法')]
2025-02-01T14:41:41.964869+0800 | DEBUG | [CodeUnit(source_code=' 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);', start_code_line=43, end_code_line=46, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.ok', source_desc='TestController类的userList方法获取用户列表并返回R对象'), CodeUnit(source_code=' 52:     public R<UserEntity> getUser(@PathVariable Integer userId)\n 53:     {\n 54:         if (!users.isEmpty() && users.containsKey(userId))\n 55:         {\n 56:             return R.ok(users.get(userId));', start_code_line=52, end_code_line=56, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.ok', source_desc='TestController类的getUser方法根据用户ID获取用户详细信息并返回R对象'), CodeUnit(source_code=' 58:         else\n 59:         {\n 60:             return R.fail("用户不存在");\n 61:         }', start_code_line=58, end_code_line=61, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.fail', source_desc='TestController类的getUser方法在用户不存在时返回失败信息'), CodeUnit(source_code=' 72:     public R<String> save(UserEntity user)\n 73:     {\n 74:         if (StringUtils.isNull(user) || StringUtils.isNull(user.getUserId()))\n 75:         {\n 76:             return R.fail("用户ID不能为空");\n 77:         }\n 78:         users.put(user.getUserId(), user);\n 79:         return R.ok();', start_code_line=72, end_code_line=79, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.ok', source_desc='TestController类的save方法新增用户并返回成功信息'), CodeUnit(source_code=' 74:         if (StringUtils.isNull(user) || StringUtils.isNull(user.getUserId()))\n 75:         {\n 76:             return R.fail("用户ID不能为空");', start_code_line=74, end_code_line=76, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.fail', source_desc='TestController类的save方法在用户ID不能为空时返回失败信息'), CodeUnit(source_code=' 84:     public R<String> update(@RequestBody UserEntity user)\n 85:     {\n 86:         if (StringUtils.isNull(user) || StringUtils.isNull(user.getUserId()))\n 87:         {\n 88:             return R.fail("用户ID不能为空");\n 89:         }\n 90:         if (users.isEmpty() || !users.containsKey(user.getUserId()))\n 91:         {\n 92:             return R.fail("用户不存在");\n 93:         }\n 94:         users.remove(user.getUserId());\n 95:         users.put(user.getUserId(), user);\n 96:         return R.ok();', start_code_line=84, end_code_line=96, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.ok', source_desc='TestController类的update方法更新用户信息并返回成功信息'), CodeUnit(source_code=' 90:         if (users.isEmpty() || !users.containsKey(user.getUserId()))\n 91:         {\n 92:             return R.fail("用户不存在");', start_code_line=90, end_code_line=92, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.fail', source_desc='TestController类的update方法在用户不存在时返回失败信息'), CodeUnit(source_code='102:     public R<String> delete(@PathVariable Integer userId)\n103:     {\n104:         if (!users.isEmpty() && users.containsKey(userId))\n105:         {\n106:             users.remove(userId);\n107:             return R.ok();', start_code_line=102, end_code_line=107, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.ok', source_desc='TestController类的delete方法根据用户ID删除用户并返回成功信息'), CodeUnit(source_code='109:         else\n110:         {\n111:             return R.fail("用户不存在");', start_code_line=109, end_code_line=111, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='TestController', target_name='R.fail', source_desc='TestController类的delete方法在用户不存在时返回失败信息'), CodeUnit(source_code='136:     public UserEntity(Integer userId, String username, String password, String mobile)\n137:     {\n138:         this.userId = userId;\n139:         this.username = username;\n140:         this.password = password;\n141:         this.mobile = mobile;', start_code_line=136, end_code_line=141, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='StringUtils.isNull', source_desc='UserEntity类构造方法用于初始化用户对象的各个属性'), CodeUnit(source_code='144:     public Integer getUserId()\n145:     {\n146:         return userId;', start_code_line=144, end_code_line=146, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='Integer getUserId', source_desc='UserEntity类的getUserId方法获取用户ID'), CodeUnit(source_code='149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }', start_code_line=149, end_code_line=152, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='void setUserId', source_desc='UserEntity类的setUserId方法设置用户ID'), CodeUnit(source_code='154:     public String getUsername()\n155:     {\n156:         return username;', start_code_line=154, end_code_line=156, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='String getUsername', source_desc='UserEntity类的getUsername方法获取用户名'), CodeUnit(source_code='159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }', start_code_line=159, end_code_line=162, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='void setUsername', source_desc='UserEntity类的setUsername方法设置用户名'), CodeUnit(source_code='164:     public String getPassword()\n165:     {\n166:         return password;', start_code_line=164, end_code_line=166, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='String getPassword', source_desc='UserEntity类的getPassword方法获取用户密码'), CodeUnit(source_code='169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }', start_code_line=169, end_code_line=172, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='void setPassword', source_desc='UserEntity类的setPassword方法设置用户密码'), CodeUnit(source_code='175:     {\n176:         return mobile;\n177:     }', start_code_line=175, end_code_line=177, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='String getMobile', source_desc='UserEntity类的getMobile方法获取用户手机'), CodeUnit(source_code='180:     {\n181:         this.mobile = mobile;\n182:     }', start_code_line=180, end_code_line=182, name='TestController.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java', source_name='UserEntity', target_name='void setMobile', source_desc='UserEntity类的setMobile方法设置用户手机')]
2025-02-01T14:41:41.966847+0800 | DEBUG | [CodeUnit(source_code=' 31: public class SwaggerConfig\n 32: {\n 33:     /** 系统基础配置 */\n 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;', start_code_line=31, end_code_line=35, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='SwaggerConfig', target_name='RuoYiConfig', source_desc='SwaggerConfig类用于配置Swagger2的接口文档，依赖RuoYiConfig作为系统基础配置'), CodeUnit(source_code=' 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);', start_code_line=49, end_code_line=68, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='SwaggerConfig', target_name='Docket', source_desc='SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档'), CodeUnit(source_code=' 55:                 .apiInfo(apiInfo())', start_code_line=55, end_code_line=55, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='Docket', target_name='ApiInfo', source_desc='Docket对象调用apiInfo方法以获取API的基本信息'), CodeUnit(source_code=' 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))', start_code_line=59, end_code_line=59, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='Docket', target_name='RequestHandlerSelectors', source_desc='Docket对象使用RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)获取带有@ApiOperation注解的方法'), CodeUnit(source_code=' 63:                 .paths(PathSelectors.any())', start_code_line=63, end_code_line=63, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='Docket', target_name='PathSelectors', source_desc='Docket对象调用PathSelectors.any()来设置请求路径的选择器'), CodeUnit(source_code=' 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);', start_code_line=66, end_code_line=68, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='Docket', target_name='securitySchemes', source_desc='Docket对象调用securitySchemes()方法配置安全模式的Scheme'), CodeUnit(source_code=' 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);', start_code_line=67, end_code_line=68, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='Docket', target_name='securityContexts', source_desc='Docket对象调用securityContexts()方法配置安全上下文'), CodeUnit(source_code='114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }', start_code_line=114, end_code_line=124, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='ApiInfo', target_name='ApiInfoBuilder', source_desc='apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息'), CodeUnit(source_code=' 89:                         .securityReferences(defaultAuth())', start_code_line=89, end_code_line=89, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='SecurityContext', target_name='defaultAuth', source_desc='securityContexts方法调用defaultAuth()以定义默认的安全引用'), CodeUnit(source_code='100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));', start_code_line=100, end_code_line=104, name='SwaggerConfig.java', path='C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java', source_name='SecurityReference', target_name='AuthorizationScope', source_desc='defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围')]
2025-02-01T14:41:42.019237+0800 | INFO | Agent_1计算完毕，输出文件:././output/ccbd72ea49cd2e4f9a756a65bfba1dd6.graphml
2025-02-01T14:41:42.020742+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:41:42.028738+0800 | INFO | 当前batch_size:10
2025-02-01T14:41:42.028738+0800 | INFO | 数据大小:138
2025-02-01T14:41:42.028738+0800 | DEBUG | ['<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi\n        当前代码源码: 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>\n        源码摘要描述:ruoyi-admin项目依赖于父级项目ruoyi\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-devtools\n        当前代码源码:21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于spring-boot-devtools库\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:springfox-boot-starter\n        当前代码源码:28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger3库springfox-boot-starter\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:swagger-models\n        当前代码源码:34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger-models库，版本为1.6.2\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:mysql-connector-java\n        当前代码源码:41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于Mysql驱动包\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-framework\n        当前代码源码:48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于核心模块ruoyi-framework\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-quartz\n        当前代码源码:54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于定时任务模块ruoyi-quartz\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-generator\n        当前代码源码:60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于代码生成模块ruoyi-generator\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-maven-plugin\n        当前代码源码:68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n73:                     <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->\n74:                 </configuration>\n75:                 <executions>\n76:                     <execution>\n77:                         <goals>\n78:                             <goal>repackage</goal>\n79:                         </goals>\n80:                     </execution>\n81:                 </executions>\n82:             </plugin>\n        源码摘要描述:ruoyi-admin项目使用spring-boot-maven-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.path\n        当前代码源码: 4: \t<property name="log.path" value="/home/ruoyi/logs" />\n        源码摘要描述:定义日志存放路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_error\n        当前代码源码:38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>\n        源码摘要描述:定义系统错误日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:com.ruoyi\n        当前代码源码:75: \t<logger name="com.ruoyi" level="info" />\n        源码摘要描述:控制com.ruoyi模块的日志级别为info\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:org.springframework\n        当前代码源码:77: \t<logger name="org.springframework" level="warn" />\n        源码摘要描述:控制org.springframework模块的日志级别为warn\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:configuration\n        被调用代码单元名称:settings\n        当前代码源码: 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:configuration提供全局参数设置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:SpringApplication\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用SpringApplication.run方法以启动应用程序\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ISysConfigService\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法调用configService的selectCaptchaEnabled方法来获取验证码是否启用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Producer\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法根据验证码类型调用captchaProducer或captchaProducerMath生成验证码文本和图像\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:RedisCache\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将验证码存储到redis中，通过调用redisCache的setCacheObject方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController中的fileDownload方法验证文件下载合法性并下载指定文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:StringUtils\n        当前代码源码: 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n        源码摘要描述:CommonController中的fileDownload方法处理非法文件名称的异常抛出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n        源码摘要描述:CommonController中的fileDownload方法获取下载路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUploadUtils\n        当前代码源码: 83:             String fileName = FileUploadUtils.upload(filePath, file);\n        源码摘要描述:CommonController中的uploadFile方法处理文件上传并返回新文件名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:serverConfig\n        当前代码源码: 84:             String url = serverConfig.getUrl() + fileName;\n        源码摘要描述:CommonController中的uploadFile方法组合存储文件url\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController中的uploadFile方法创建成功响应\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:113:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n114:     @DeleteMapping("/clearCacheAll")\n115:     public AjaxResult clearCacheAll()\n116:     {\n117:         Collection<String> cacheKeys = redisTemplate.keys("*");\n118:         redisTemplate.delete(cacheKeys);\n119:         return AjaxResult.success();\n120:     }\n        源码摘要描述:CacheController类的clearCacheAll方法清除所有缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 48:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 49:     @GetMapping()\n 50:     public AjaxResult getInfo() throws Exception\n 51:     {\n 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n 55: \n 56:         Map<String, Object> result = new HashMap<>(3);\n 57:         result.put("info", info);\n 58:         result.put("dbSize", dbSize);\n 59: \n 60:         List<Map<String, String>> pieList = new ArrayList<>();\n 61:         commandStats.stringPropertyNames().forEach(key -> {\n 62:             Map<String, String> data = new HashMap<>(2);\n 63:             String property = commandStats.getProperty(key);\n 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n 66:             pieList.add(data);\n 67:         });\n 68:         result.put("commandStats", pieList);\n 69:         return AjaxResult.success(result);\n 70:     }\n        源码摘要描述:CacheController类的getInfo方法返回缓存相关信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.info\n        当前代码源码: 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n        源码摘要描述:redisTemplate调用connection的info方法获取Redis信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.dbSize\n        当前代码源码: 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n        源码摘要描述:redisTemplate调用connection的dbSize方法获取数据库大小\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:keys\n        当前代码源码: 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n        源码摘要描述:redisTemplate调用keys方法获取匹配特定模式的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:opsForValue\n        当前代码源码: 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);\n        源码摘要描述:redisTemplate调用opsForValue方法获取Value相关操作接口\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:101:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除指定的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:removeStart\n        当前代码源码: 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n        源码摘要描述:StringUtils的removeStart方法去除字符串开头的特定前缀\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类的getInfo方法调用AjaxResult的success方法返回服务器信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ISysLogininforService\n        当前代码源码:40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);\n        源码摘要描述:SysLogininforController类通过logininforService调用selectLogininforList方法获取登录信息列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");\n        源码摘要描述:SysLogininforController类通过ExcelUtil导出登录日志到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);\n        源码摘要描述:SysOperlogController类调用operLogService的selectOperLogList方法以获取操作日志列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:46:     public void export(HttpServletResponse response, SysOperLog operLog)\n47:     {\n48:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n49:         ExcelUtil<SysOperLog> util = new ExcelUtil<SysOperLog>(SysOperLog.class);\n50:         util.exportExcel(response, list, "操作日志");\n        源码摘要描述:SysOperlogController类调用ExcelUtil的exportExcel方法将操作日志导出为Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的keys方法获取匹配的登录TOKEN键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:userOnlineService\n        当前代码源码:52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n        源码摘要描述:SysUserOnlineController类调用userOnlineService的selectOnlineByInfo方法获取在线用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:getDataTable\n        当前代码源码:69:         return getDataTable(userOnlineList);\n        源码摘要描述:SysUserOnlineController类调用getDataTable方法返回用户列表的表格数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码: 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);\n        源码摘要描述:SysConfigController类获取参数配置列表通过configService调用selectConfigList函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysConfig config)\n 53:     {\n 54:         List<SysConfig> list = configService.selectConfigList(config);\n 55:         ExcelUtil<SysConfig> util = new ExcelUtil<SysConfig>(SysConfig.class);\n 56:         util.exportExcel(response, list, "参数数据");\n        源码摘要描述:SysConfigController类导出参数数据通过ExcelUtil调用exportExcel函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:119:     public AjaxResult remove(@PathVariable Long deptId)\n120:     {\n121:         if (deptService.hasChildByDeptId(deptId))\n122:         {\n123:             return warn("存在下级部门,不允许删除");\n124:         }\n125:         if (deptService.checkDeptExistUser(deptId))\n126:         {\n127:             return warn("部门存在用户,不允许删除");\n128:         }\n129:         deptService.checkDeptDataScope(deptId);\n130:         return toAjax(deptService.deleteDeptById(deptId));\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现删除部门功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码: 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n 45:         return success(depts);\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现获取部门列表功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n        源码摘要描述:SysDictDataController类调用dictDataService服务获取字典数据列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n        源码摘要描述:SysDictDataController类调用ExcelUtil导出字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n        源码摘要描述:SysDictDataController类调用dictTypeService获取指定类型的字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 25: /**\n 26:  * 数据字典信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dict/type")\n 32: public class SysDictTypeController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n 36: \n 37:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n 45: \n 46:     @Log(title = "字典类型", businessType = BusinessType.EXPORT)\n 47:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");\n 54:     }\n 55: \n 56:     /**\n 57:      * 查询字典类型详细\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n 65: \n 66:     /**\n 67:      * 新增字典类型\n 68:      */\n 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n 81: \n 82:     /**\n 83:      * 修改字典类型\n 84:      */\n 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 删除字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n108:     }\n109: \n110:     /**\n111:      * 刷新字典缓存\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 获取字典选择框列表\n124:      */\n125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n131: }\n        源码摘要描述:SysDictTypeController类通过dictTypeService引用字典类型相关服务\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeList\n        当前代码源码: 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n        源码摘要描述:SysDictTypeController类调用dictTypeService查询字典类型列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeById\n        当前代码源码: 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService查询特定字典类型的详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:checkDictTypeUnique\n        当前代码源码: 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n        源码摘要描述:SysDictTypeController类在新增操作中调用dictTypeService检查字典类型唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:insertDictType\n        当前代码源码: 79:         return toAjax(dictTypeService.insertDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService新增字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:updateDictType\n        当前代码源码: 95:         return toAjax(dictTypeService.updateDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService更新字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:deleteDictTypeByIds\n        当前代码源码:106:         dictTypeService.deleteDictTypeByIds(dictIds);\n        源码摘要描述:SysDictTypeController类通过dictTypeService删除字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:resetDictCache\n        当前代码源码:118:         dictTypeService.resetDictCache();\n        源码摘要描述:SysDictTypeController类调用dictTypeService刷新字典缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:StringUtils\n        当前代码源码:25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类访问index方法，使用StringUtils格式化字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysLoginService\n        当前代码源码:48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;\n        源码摘要描述:SysLoginController的login方法通过调用loginService的login方法进行用户登录验证\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SecurityUtils\n        当前代码源码:64:     @GetMapping("getInfo")\n65:     public AjaxResult getInfo()\n66:     {\n67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n68:         SysUser user = loginUser.getUser();\n        源码摘要描述:SysLoginController的getInfo方法通过调用SecurityUtils获取当前登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysPermissionService\n        当前代码源码:70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);\n        源码摘要描述:SysLoginController的getInfo方法调用permissionService获取用户角色和权限集合\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:TokenService\n        当前代码源码:76:             tokenService.refreshToken(loginUser);\n        源码摘要描述:SysLoginController的getInfo方法调用tokenService刷新令牌\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码:140:         return toAjax(menuService.deleteMenuById(menuId));\n        源码摘要描述:SysMenuController类通过menuService调用deleteMenuById删除菜单\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码: 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);\n        源码摘要描述:SysMenuController类通过menuService调用selectMenuList方法获取菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }\n        源码摘要描述:SysNoticeController类通过noticeService调用deleteNoticeByIds方法删除通知公告\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);\n        源码摘要描述:SysNoticeController类通过noticeService调用selectNoticeList方法获取通知公告列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService\n        当前代码源码: 35:     private ISysPostService postService;\n        源码摘要描述:SysPostController类中postService属性用于调用ISysPostService接口的方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:startPage\n        当前代码源码: 44:         startPage();\n        源码摘要描述:SysPostController类中的list方法调用startPage用于分页处理\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostList\n        当前代码源码: 45:         List<SysPost> list = postService.selectPostList(post);\n        源码摘要描述:SysPostController类中的list方法调用postService的selectPostList获取岗位列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:getDataTable\n        当前代码源码: 46:         return getDataTable(list);\n        源码摘要描述:SysPostController类中的list方法调用getDataTable将列表数据封装成TableDataInfo\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:new ExcelUtil\n        当前代码源码: 55:         ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);\n        源码摘要描述:SysPostController类中的export方法创建ExcelUtil对象以处理Excel导出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostById\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用postService的selectPostById获取岗位详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用success返回获取岗位信息的成功结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostNameUnique\n        当前代码源码: 77:         if (!postService.checkPostNameUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostNameUnique检查岗位名称唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:error\n        当前代码源码: 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的add方法调用error返回岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostCodeUnique\n        当前代码源码: 81:         else if (!postService.checkPostCodeUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostCodeUnique检查岗位编码唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setCreateBy\n        当前代码源码: 85:         post.setCreateBy(getUsername());\n        源码摘要描述:SysPostController类中的add方法设置岗位创建者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.insertPost\n        当前代码源码: 86:         return toAjax(postService.insertPost(post));\n        源码摘要描述:SysPostController类中的add方法调用postService的insertPost插入新岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:Error\n        当前代码源码: 99:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的edit方法调用error返回修改岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setUpdateBy\n        当前代码源码:105:         post.setUpdateBy(getUsername());\n        源码摘要描述:SysPostController类中的edit方法设置岗位更新者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.updatePost\n        当前代码源码:106:         return toAjax(postService.updatePost(post));\n        源码摘要描述:SysPostController类中的edit方法调用postService的updatePost更新岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.deletePostByIds\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用postService的deletePostByIds删除岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:toAjax\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用toAjax返回删除结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostAll\n        当前代码源码:126:         List<SysPost> posts = postService.selectPostAll();\n        源码摘要描述:SysPostController类中的optionselect方法调用postService的selectPostAll获取所有岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类提供个人信息的获取和更新功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:FileUploadUtils\n        被调用代码单元名称:String\n        当前代码源码:127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n        源码摘要描述:用于处理用户头像的上传\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:configService\n        当前代码源码:28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用configService的selectConfigByKey方法检查注册功能是否开启\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用registerService的register方法进行用户注册\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:roleService\n        当前代码源码: 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);\n        源码摘要描述:SysRoleController类通过roleService调用selectRoleList方法获取角色列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");\n        源码摘要描述:SysRoleController类通过ExcelUtil导出角色数据到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:userService\n        当前代码源码:135:                 loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));\n        源码摘要描述:SysRoleController类通过userService调用selectUserByUserName方法获取用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:permissionService\n        当前代码源码:136:                 loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));\n        源码摘要描述:SysRoleController类通过permissionService获取用户权限\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:tokenService\n        当前代码源码:137:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysRoleController类通过tokenService设置登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptListByRoleId方法获取部门列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:userService\n        当前代码源码: 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n 66:     }\n        源码摘要描述:SysUserController类中的list方法获取用户列表，调用userService的selectUserList方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");\n        源码摘要描述:SysUserController类中的export方法导出用户列表到Excel，调用ExcelUtil的exportExcel方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:roleService\n        当前代码源码:113:         List<SysRole> roles = roleService.selectRoleAll();\n114:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));\n        源码摘要描述:SysUserController类中的getInfo方法获取用户角色信息，调用roleService的selectRoleAll方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:127:         deptService.checkDeptDataScope(user.getDeptId());\n        源码摘要描述:SysUserController类中的add方法检查部门数据权限，调用deptService的checkDeptDataScope方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.ok\n        当前代码源码: 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);\n        源码摘要描述:TestController类的userList方法获取用户列表并返回R对象\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码: 58:         else\n 59:         {\n 60:             return R.fail("用户不存在");\n 61:         }\n        源码摘要描述:TestController类的getUser方法在用户不存在时返回失败信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:StringUtils.isNull\n        当前代码源码:136:     public UserEntity(Integer userId, String username, String password, String mobile)\n137:     {\n138:         this.userId = userId;\n139:         this.username = username;\n140:         this.password = password;\n141:         this.mobile = mobile;\n        源码摘要描述:UserEntity类构造方法用于初始化用户对象的各个属性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:Integer getUserId\n        当前代码源码:144:     public Integer getUserId()\n145:     {\n146:         return userId;\n        源码摘要描述:UserEntity类的getUserId方法获取用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUserId\n        当前代码源码:149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }\n        源码摘要描述:UserEntity类的setUserId方法设置用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getUsername\n        当前代码源码:154:     public String getUsername()\n155:     {\n156:         return username;\n        源码摘要描述:UserEntity类的getUsername方法获取用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUsername\n        当前代码源码:159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }\n        源码摘要描述:UserEntity类的setUsername方法设置用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getPassword\n        当前代码源码:164:     public String getPassword()\n165:     {\n166:         return password;\n        源码摘要描述:UserEntity类的getPassword方法获取用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setPassword\n        当前代码源码:169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }\n        源码摘要描述:UserEntity类的setPassword方法设置用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getMobile\n        当前代码源码:175:     {\n176:         return mobile;\n177:     }\n        源码摘要描述:UserEntity类的getMobile方法获取用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 31: public class SwaggerConfig\n 32: {\n 33:     /** 系统基础配置 */\n 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SwaggerConfig类用于配置Swagger2的接口文档，依赖RuoYiConfig作为系统基础配置\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:RequestHandlerSelectors\n        当前代码源码: 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n        源码摘要描述:Docket对象使用RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)获取带有@ApiOperation注解的方法\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:PathSelectors\n        当前代码源码: 63:                 .paths(PathSelectors.any())\n        源码摘要描述:Docket对象调用PathSelectors.any()来设置请求路径的选择器\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securitySchemes\n        当前代码源码: 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securitySchemes()方法配置安全模式的Scheme\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_1>']
2025-02-01T14:41:47.538600+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：已知漏洞版本（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin 3.1.0版本已知存在多个漏洞，可能允许恶意构造的WAR文件执行代码。
  ▶ 修复建议：升级到最新版本的maven-war-plugin以消除已知漏洞风险。

■ 漏洞类型：不安全的parent依赖（低危）
  ▶ 位置：L6-L8
  ▶ 代码特征：
    <artifactId>ruoyi</artifactId>
    <groupId>com.ruoyi</groupId>
    <version>3.8.9</version>
  ▶ 攻击向量：如果父项目ruoyi存在安全漏洞，可能影响所有依赖子模块。
  ▶ 修复建议：定期检查和更新依赖库版本，确保使用的父项目无已知漏洞。

</审计报告>
2025-02-01T14:41:47.538600+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：开发依赖泄露（中危）
  ▶ 位置：L23-L24
  ▶ 代码特征：
    <artifactId>spring-boot-devtools</artifactId>
    <optional>true</optional>
  ▶ 攻击向量：在生产环境中不慎引入devtools，可能导致执行不应有的开发功能，并影响安全性
  ▶ 修复建议：确保在生产环境中完全排除开发依赖，或者使用构建工具的配置限制其影响范围

■ 漏洞类型：构建配置缺陷（低危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：此设置可能允许攻击者上传不受监管的web资源
  ▶ 修复建议：在安全要求允许的情况下，启用此选项以确保必要的web.xml文件存在。
</审计报告>
2025-02-01T14:41:47.538600+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未知（需进一步分析）
  ▶ 位置：L84-L90
  ▶ 代码特征：
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
            <warName>${project.artifactId}</warName>
        </configuration>
    </plugin>
  ▶ 潜在影响：未验证web.xml缺失的情况下继续构建war包可能导致部署时出现意外行为
  ▶ 修复建议：若项目需要web.xml，建议设置<failOnMissingWebXml>true</failOnMissingWebXml>以避免潜在配置问题

■ 漏洞类型：依赖库漏洞（信息）
  ▶ 位置：L28-L31
  ▶ 代码特征：
    <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-boot-starter</artifactId>
    </dependency>
  ▶ 潜在影响：使用的springfox-boot-starter版本可能包含已知安全漏洞，建议更新至最新稳定版本
  ▶ 修复建议：检查依赖库的版本并更新至最新版本以修复潜在安全问题
</审计报告>
2025-02-01T14:41:47.539606+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用过时的依赖（中危）
  ▶ 位置：L36
  ▶ 代码特征：
    <artifactId>swagger-models</artifactId>
    <version>1.6.2</version>
  ▶ 攻击向量：攻击者可利用swagger-models 1.6.2的已知漏洞进行攻击
  ▶ 修复建议：升级至最新版本的swagger-models库以修复已知漏洞

■ 漏洞类型：Maven插件潜在风险（中危）
  ▶ 位置：L84-L90
  ▶ 代码特征：
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
    </plugin>
  ▶ 攻击向量：设置failOnMissingWebXml为false可能导致Web应用程序未正确验证，影响安全性
  ▶ 修复建议：考虑将failOnMissingWebXml设置为true以确保Web应用的安全性
</审计报告>
2025-02-01T14:41:47.539606+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：XML注入（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：攻击者可以通过修改配置文件的XML结构，潜在地改变构建过程的参数，导致不安全的构建或影响后续的应用部署。
  ▶ 修复建议：对配置文件进行严格的输入验证和访问控制。

■ 漏洞类型：未满足依赖项（信息）
  ▶ 位置：L43
  ▶ 代码特征：
    <artifactId>mysql-connector-java</artifactId>
  ▶ 潜在影响：如果未能在项目中包含适当的mysql-connector-java库，可能导致数据库连接失败，从而影响应用功能。
  ▶ 修复建议：确保引入正确版本的mysql-connector-java，并进行版本管理。
</审计报告>
2025-02-01T14:41:47.539606+0800 | DEBUG | <审计报告>
// 文件路径1
<审计通过>
</审计报告>
2025-02-01T14:41:47.539606+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无
  ▶ 位置：无
  ▶ 代码特征：无
  ▶ 修复建议：无

// 文件路径2
■ 漏洞类型：无
  ▶ 位置：无
  ▶ 代码特征：无
  ▶ 修复建议：无
</审计报告>
2025-02-01T14:41:47.539606+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：通用问题（配置不当）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：配置为false可能导致未验证的web.xml文件被接受，进而造成安全配置缺失
  ▶ 修复建议：将failOnMissingWebXml设置为true以确保web.xml文件的必要性和正确配置
</审计报告>
2025-02-01T14:41:47.539606+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：依赖版本过时（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用已知漏洞的旧版本（如maven-war-plugin 3.1.0）可能导致系统被攻击者利用老版本存在的安全缺陷
  ▶ 修复建议：更新maven-war-plugin至最新稳定版本

■ 漏洞类型：依赖版本过时（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    <version>2.5.15</version>
  ▶ 攻击向量：使用已知漏洞的旧版本（如spring-boot-maven-plugin 2.5.15）可能导致系统被攻击者利用老版本存在的安全缺陷
  ▶ 修复建议：更新spring-boot-maven-plugin至最新稳定版本
</审计报告>
2025-02-01T14:41:47.539606+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用了过时的插件（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>  // 使用了已经有安全漏洞的版本
  ▶ 攻击向量：已知漏洞可能被利用，造成潜在的安全风险
  ▶ 修复建议：升级maven-war-plugin到最新版本

<审计通过>
2025-02-01T14:42:51.009761+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:42:51.012752+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:42:51.012752+0800 | INFO | 当前命令行模式:True
2025-02-01T14:42:51.013256+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:42:51.013256+0800 | INFO | 当前输出文件:./output
2025-02-01T14:42:51.021509+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:42:51.021509+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:42:51.022516+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:42:51.030528+0800 | INFO | 当前batch_size:10
2025-02-01T14:42:51.031587+0800 | INFO | 数据大小:138
2025-02-01T14:42:51.031587+0800 | DEBUG | ['<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi\n        当前代码源码: 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>\n        源码摘要描述:ruoyi-admin项目依赖于父级项目ruoyi\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-devtools\n        当前代码源码:21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于spring-boot-devtools库\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:springfox-boot-starter\n        当前代码源码:28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger3库springfox-boot-starter\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:swagger-models\n        当前代码源码:34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger-models库，版本为1.6.2\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:mysql-connector-java\n        当前代码源码:41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于Mysql驱动包\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-framework\n        当前代码源码:48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于核心模块ruoyi-framework\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-quartz\n        当前代码源码:54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于定时任务模块ruoyi-quartz\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-generator\n        当前代码源码:60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于代码生成模块ruoyi-generator\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-maven-plugin\n        当前代码源码:68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n73:                     <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->\n74:                 </configuration>\n75:                 <executions>\n76:                     <execution>\n77:                         <goals>\n78:                             <goal>repackage</goal>\n79:                         </goals>\n80:                     </execution>\n81:                 </executions>\n82:             </plugin>\n        源码摘要描述:ruoyi-admin项目使用spring-boot-maven-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.path\n        当前代码源码: 4: \t<property name="log.path" value="/home/ruoyi/logs" />\n        源码摘要描述:定义日志存放路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_error\n        当前代码源码:38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>\n        源码摘要描述:定义系统错误日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:com.ruoyi\n        当前代码源码:75: \t<logger name="com.ruoyi" level="info" />\n        源码摘要描述:控制com.ruoyi模块的日志级别为info\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:org.springframework\n        当前代码源码:77: \t<logger name="org.springframework" level="warn" />\n        源码摘要描述:控制org.springframework模块的日志级别为warn\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:configuration\n        被调用代码单元名称:settings\n        当前代码源码: 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:configuration提供全局参数设置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:SpringApplication\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用SpringApplication.run方法以启动应用程序\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ISysConfigService\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法调用configService的selectCaptchaEnabled方法来获取验证码是否启用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Producer\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法根据验证码类型调用captchaProducer或captchaProducerMath生成验证码文本和图像\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:RedisCache\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将验证码存储到redis中，通过调用redisCache的setCacheObject方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController中的fileDownload方法验证文件下载合法性并下载指定文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:StringUtils\n        当前代码源码: 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n        源码摘要描述:CommonController中的fileDownload方法处理非法文件名称的异常抛出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n        源码摘要描述:CommonController中的fileDownload方法获取下载路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUploadUtils\n        当前代码源码: 83:             String fileName = FileUploadUtils.upload(filePath, file);\n        源码摘要描述:CommonController中的uploadFile方法处理文件上传并返回新文件名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:serverConfig\n        当前代码源码: 84:             String url = serverConfig.getUrl() + fileName;\n        源码摘要描述:CommonController中的uploadFile方法组合存储文件url\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController中的uploadFile方法创建成功响应\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:113:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n114:     @DeleteMapping("/clearCacheAll")\n115:     public AjaxResult clearCacheAll()\n116:     {\n117:         Collection<String> cacheKeys = redisTemplate.keys("*");\n118:         redisTemplate.delete(cacheKeys);\n119:         return AjaxResult.success();\n120:     }\n        源码摘要描述:CacheController类的clearCacheAll方法清除所有缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 48:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 49:     @GetMapping()\n 50:     public AjaxResult getInfo() throws Exception\n 51:     {\n 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n 55: \n 56:         Map<String, Object> result = new HashMap<>(3);\n 57:         result.put("info", info);\n 58:         result.put("dbSize", dbSize);\n 59: \n 60:         List<Map<String, String>> pieList = new ArrayList<>();\n 61:         commandStats.stringPropertyNames().forEach(key -> {\n 62:             Map<String, String> data = new HashMap<>(2);\n 63:             String property = commandStats.getProperty(key);\n 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n 66:             pieList.add(data);\n 67:         });\n 68:         result.put("commandStats", pieList);\n 69:         return AjaxResult.success(result);\n 70:     }\n        源码摘要描述:CacheController类的getInfo方法返回缓存相关信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.info\n        当前代码源码: 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n        源码摘要描述:redisTemplate调用connection的info方法获取Redis信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.dbSize\n        当前代码源码: 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n        源码摘要描述:redisTemplate调用connection的dbSize方法获取数据库大小\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:keys\n        当前代码源码: 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n        源码摘要描述:redisTemplate调用keys方法获取匹配特定模式的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:opsForValue\n        当前代码源码: 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);\n        源码摘要描述:redisTemplate调用opsForValue方法获取Value相关操作接口\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:101:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除指定的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:removeStart\n        当前代码源码: 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n        源码摘要描述:StringUtils的removeStart方法去除字符串开头的特定前缀\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类的getInfo方法调用AjaxResult的success方法返回服务器信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ISysLogininforService\n        当前代码源码:40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);\n        源码摘要描述:SysLogininforController类通过logininforService调用selectLogininforList方法获取登录信息列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");\n        源码摘要描述:SysLogininforController类通过ExcelUtil导出登录日志到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);\n        源码摘要描述:SysOperlogController类调用operLogService的selectOperLogList方法以获取操作日志列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:46:     public void export(HttpServletResponse response, SysOperLog operLog)\n47:     {\n48:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n49:         ExcelUtil<SysOperLog> util = new ExcelUtil<SysOperLog>(SysOperLog.class);\n50:         util.exportExcel(response, list, "操作日志");\n        源码摘要描述:SysOperlogController类调用ExcelUtil的exportExcel方法将操作日志导出为Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的keys方法获取匹配的登录TOKEN键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:userOnlineService\n        当前代码源码:52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n        源码摘要描述:SysUserOnlineController类调用userOnlineService的selectOnlineByInfo方法获取在线用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:getDataTable\n        当前代码源码:69:         return getDataTable(userOnlineList);\n        源码摘要描述:SysUserOnlineController类调用getDataTable方法返回用户列表的表格数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码: 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);\n        源码摘要描述:SysConfigController类获取参数配置列表通过configService调用selectConfigList函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysConfig config)\n 53:     {\n 54:         List<SysConfig> list = configService.selectConfigList(config);\n 55:         ExcelUtil<SysConfig> util = new ExcelUtil<SysConfig>(SysConfig.class);\n 56:         util.exportExcel(response, list, "参数数据");\n        源码摘要描述:SysConfigController类导出参数数据通过ExcelUtil调用exportExcel函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:119:     public AjaxResult remove(@PathVariable Long deptId)\n120:     {\n121:         if (deptService.hasChildByDeptId(deptId))\n122:         {\n123:             return warn("存在下级部门,不允许删除");\n124:         }\n125:         if (deptService.checkDeptExistUser(deptId))\n126:         {\n127:             return warn("部门存在用户,不允许删除");\n128:         }\n129:         deptService.checkDeptDataScope(deptId);\n130:         return toAjax(deptService.deleteDeptById(deptId));\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现删除部门功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码: 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n 45:         return success(depts);\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现获取部门列表功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n        源码摘要描述:SysDictDataController类调用dictDataService服务获取字典数据列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n        源码摘要描述:SysDictDataController类调用ExcelUtil导出字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n        源码摘要描述:SysDictDataController类调用dictTypeService获取指定类型的字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 25: /**\n 26:  * 数据字典信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dict/type")\n 32: public class SysDictTypeController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n 36: \n 37:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n 45: \n 46:     @Log(title = "字典类型", businessType = BusinessType.EXPORT)\n 47:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");\n 54:     }\n 55: \n 56:     /**\n 57:      * 查询字典类型详细\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n 65: \n 66:     /**\n 67:      * 新增字典类型\n 68:      */\n 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n 81: \n 82:     /**\n 83:      * 修改字典类型\n 84:      */\n 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 删除字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n108:     }\n109: \n110:     /**\n111:      * 刷新字典缓存\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 获取字典选择框列表\n124:      */\n125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n131: }\n        源码摘要描述:SysDictTypeController类通过dictTypeService引用字典类型相关服务\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeList\n        当前代码源码: 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n        源码摘要描述:SysDictTypeController类调用dictTypeService查询字典类型列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeById\n        当前代码源码: 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService查询特定字典类型的详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:checkDictTypeUnique\n        当前代码源码: 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n        源码摘要描述:SysDictTypeController类在新增操作中调用dictTypeService检查字典类型唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:insertDictType\n        当前代码源码: 79:         return toAjax(dictTypeService.insertDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService新增字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:updateDictType\n        当前代码源码: 95:         return toAjax(dictTypeService.updateDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService更新字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:deleteDictTypeByIds\n        当前代码源码:106:         dictTypeService.deleteDictTypeByIds(dictIds);\n        源码摘要描述:SysDictTypeController类通过dictTypeService删除字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:resetDictCache\n        当前代码源码:118:         dictTypeService.resetDictCache();\n        源码摘要描述:SysDictTypeController类调用dictTypeService刷新字典缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:StringUtils\n        当前代码源码:25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类访问index方法，使用StringUtils格式化字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysLoginService\n        当前代码源码:48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;\n        源码摘要描述:SysLoginController的login方法通过调用loginService的login方法进行用户登录验证\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SecurityUtils\n        当前代码源码:64:     @GetMapping("getInfo")\n65:     public AjaxResult getInfo()\n66:     {\n67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n68:         SysUser user = loginUser.getUser();\n        源码摘要描述:SysLoginController的getInfo方法通过调用SecurityUtils获取当前登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysPermissionService\n        当前代码源码:70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);\n        源码摘要描述:SysLoginController的getInfo方法调用permissionService获取用户角色和权限集合\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:TokenService\n        当前代码源码:76:             tokenService.refreshToken(loginUser);\n        源码摘要描述:SysLoginController的getInfo方法调用tokenService刷新令牌\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码:140:         return toAjax(menuService.deleteMenuById(menuId));\n        源码摘要描述:SysMenuController类通过menuService调用deleteMenuById删除菜单\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码: 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);\n        源码摘要描述:SysMenuController类通过menuService调用selectMenuList方法获取菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }\n        源码摘要描述:SysNoticeController类通过noticeService调用deleteNoticeByIds方法删除通知公告\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);\n        源码摘要描述:SysNoticeController类通过noticeService调用selectNoticeList方法获取通知公告列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService\n        当前代码源码: 35:     private ISysPostService postService;\n        源码摘要描述:SysPostController类中postService属性用于调用ISysPostService接口的方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:startPage\n        当前代码源码: 44:         startPage();\n        源码摘要描述:SysPostController类中的list方法调用startPage用于分页处理\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostList\n        当前代码源码: 45:         List<SysPost> list = postService.selectPostList(post);\n        源码摘要描述:SysPostController类中的list方法调用postService的selectPostList获取岗位列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:getDataTable\n        当前代码源码: 46:         return getDataTable(list);\n        源码摘要描述:SysPostController类中的list方法调用getDataTable将列表数据封装成TableDataInfo\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:new ExcelUtil\n        当前代码源码: 55:         ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);\n        源码摘要描述:SysPostController类中的export方法创建ExcelUtil对象以处理Excel导出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostById\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用postService的selectPostById获取岗位详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用success返回获取岗位信息的成功结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostNameUnique\n        当前代码源码: 77:         if (!postService.checkPostNameUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostNameUnique检查岗位名称唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:error\n        当前代码源码: 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的add方法调用error返回岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostCodeUnique\n        当前代码源码: 81:         else if (!postService.checkPostCodeUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostCodeUnique检查岗位编码唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setCreateBy\n        当前代码源码: 85:         post.setCreateBy(getUsername());\n        源码摘要描述:SysPostController类中的add方法设置岗位创建者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.insertPost\n        当前代码源码: 86:         return toAjax(postService.insertPost(post));\n        源码摘要描述:SysPostController类中的add方法调用postService的insertPost插入新岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:Error\n        当前代码源码: 99:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的edit方法调用error返回修改岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setUpdateBy\n        当前代码源码:105:         post.setUpdateBy(getUsername());\n        源码摘要描述:SysPostController类中的edit方法设置岗位更新者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.updatePost\n        当前代码源码:106:         return toAjax(postService.updatePost(post));\n        源码摘要描述:SysPostController类中的edit方法调用postService的updatePost更新岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.deletePostByIds\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用postService的deletePostByIds删除岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:toAjax\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用toAjax返回删除结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostAll\n        当前代码源码:126:         List<SysPost> posts = postService.selectPostAll();\n        源码摘要描述:SysPostController类中的optionselect方法调用postService的selectPostAll获取所有岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类提供个人信息的获取和更新功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:FileUploadUtils\n        被调用代码单元名称:String\n        当前代码源码:127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n        源码摘要描述:用于处理用户头像的上传\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:configService\n        当前代码源码:28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用configService的selectConfigByKey方法检查注册功能是否开启\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用registerService的register方法进行用户注册\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:roleService\n        当前代码源码: 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);\n        源码摘要描述:SysRoleController类通过roleService调用selectRoleList方法获取角色列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");\n        源码摘要描述:SysRoleController类通过ExcelUtil导出角色数据到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:userService\n        当前代码源码:135:                 loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));\n        源码摘要描述:SysRoleController类通过userService调用selectUserByUserName方法获取用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:permissionService\n        当前代码源码:136:                 loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));\n        源码摘要描述:SysRoleController类通过permissionService获取用户权限\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:tokenService\n        当前代码源码:137:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysRoleController类通过tokenService设置登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptListByRoleId方法获取部门列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:userService\n        当前代码源码: 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n 66:     }\n        源码摘要描述:SysUserController类中的list方法获取用户列表，调用userService的selectUserList方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");\n        源码摘要描述:SysUserController类中的export方法导出用户列表到Excel，调用ExcelUtil的exportExcel方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:roleService\n        当前代码源码:113:         List<SysRole> roles = roleService.selectRoleAll();\n114:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));\n        源码摘要描述:SysUserController类中的getInfo方法获取用户角色信息，调用roleService的selectRoleAll方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:127:         deptService.checkDeptDataScope(user.getDeptId());\n        源码摘要描述:SysUserController类中的add方法检查部门数据权限，调用deptService的checkDeptDataScope方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.ok\n        当前代码源码: 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);\n        源码摘要描述:TestController类的userList方法获取用户列表并返回R对象\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码: 58:         else\n 59:         {\n 60:             return R.fail("用户不存在");\n 61:         }\n        源码摘要描述:TestController类的getUser方法在用户不存在时返回失败信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:StringUtils.isNull\n        当前代码源码:136:     public UserEntity(Integer userId, String username, String password, String mobile)\n137:     {\n138:         this.userId = userId;\n139:         this.username = username;\n140:         this.password = password;\n141:         this.mobile = mobile;\n        源码摘要描述:UserEntity类构造方法用于初始化用户对象的各个属性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:Integer getUserId\n        当前代码源码:144:     public Integer getUserId()\n145:     {\n146:         return userId;\n        源码摘要描述:UserEntity类的getUserId方法获取用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUserId\n        当前代码源码:149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }\n        源码摘要描述:UserEntity类的setUserId方法设置用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getUsername\n        当前代码源码:154:     public String getUsername()\n155:     {\n156:         return username;\n        源码摘要描述:UserEntity类的getUsername方法获取用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUsername\n        当前代码源码:159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }\n        源码摘要描述:UserEntity类的setUsername方法设置用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getPassword\n        当前代码源码:164:     public String getPassword()\n165:     {\n166:         return password;\n        源码摘要描述:UserEntity类的getPassword方法获取用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setPassword\n        当前代码源码:169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }\n        源码摘要描述:UserEntity类的setPassword方法设置用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getMobile\n        当前代码源码:175:     {\n176:         return mobile;\n177:     }\n        源码摘要描述:UserEntity类的getMobile方法获取用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 31: public class SwaggerConfig\n 32: {\n 33:     /** 系统基础配置 */\n 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SwaggerConfig类用于配置Swagger2的接口文档，依赖RuoYiConfig作为系统基础配置\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:RequestHandlerSelectors\n        当前代码源码: 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n        源码摘要描述:Docket对象使用RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)获取带有@ApiOperation注解的方法\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:PathSelectors\n        当前代码源码: 63:                 .paths(PathSelectors.any())\n        源码摘要描述:Docket对象调用PathSelectors.any()来设置请求路径的选择器\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securitySchemes\n        当前代码源码: 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securitySchemes()方法配置安全模式的Scheme\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_1>']
2025-02-01T14:42:55.216570+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：高版本依赖（信息）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用的maven-war-plugin版本可能包含已知的漏洞
  ▶ 修复建议：检查最新版本并进行更新，当前最新版本为3.3.1

■ 漏洞类型：未使用较新依赖（信息）
  ▶ 位置：L8
  ▶ 代码特征：
    <version>3.8.9</version>
  ▶ 攻击向量：父级项目ruoyi使用的版本可能存在已知漏洞
  ▶ 修复建议：检查并升级到ruoyi的最新版本以避免潜在风险
</审计报告>
2025-02-01T14:42:55.217566+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的依赖（中危）
  ▶ 位置：L23-L24
  ▶ 代码特征：
    <artifactId>spring-boot-devtools</artifactId>
    <optional>true</optional> <!-- 表示依赖不会传递 -->
  ▶ 攻击向量：spring-boot-devtools库在生产环境中可能导致敏感信息泄露
  ▶ 修复建议：在生产环境中移除该依赖，或使用仅生产所需的安全依赖

<审计通过>
</审计报告>
2025-02-01T14:42:55.217566+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不当配置（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：未启用web.xml的缺失验证，可能导致不完整的web应用部署
  ▶ 修复建议：将failOnMissingWebXml设置为true

// 文件路径2
■ 漏洞类型：过时的依赖（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用过时的maven-war-plugin版本可能存在已知安全漏洞
  ▶ 修复建议：升级到最新稳定版本的maven-war-plugin

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L30
  ▶ 代码特征：
    <artifactId>springfox-boot-starter</artifactId>
  ▶ 攻击向量：使用swagger UI可能泄露API信息，若未做好保护措施
  ▶ 修复建议：限制swagger UI的访问或在生产环境中禁用

</审计报告>
2025-02-01T14:42:55.217566+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：依赖项过时（中危）
  ▶ 位置：L36
  ▶ 代码特征：
    <artifactId>swagger-models</artifactId>
    <version>1.6.2</version>
  ▶ 攻击向量：使用有已知漏洞的库版本，可能被攻击者利用进行代码注入或执行恶意行为
  ▶ 修复建议：更新swagger-models到最新安全版本

// 文件路径2
■ 漏洞类型：不当配置（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：未进行web.xml的必要验证，可能导致不安全的默认配置被使用
  ▶ 修复建议：设置<failOnMissingWebXml>true</failOnMissingWebXml>，确保web.xml存在并得到妥善处理
</审计报告>
2025-02-01T14:42:55.217566+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未明确依赖版本（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    <artifactId>mysql-connector-java</artifactId>
  ▶ 攻击向量：可能存在已知漏洞的旧版本未被充分防护
  ▶ 修复建议：指定mysql-connector-java依赖的具体版本号以确保安全性

<审计通过>
</审计报告>
2025-02-01T14:42:55.217566+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未使用最新版本依赖（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用较旧版本可能存在已知安全漏洞，如远程代码执行
  ▶ 修复建议：更新maven-war-plugin版本至最新稳定版本

■ 漏洞类型：未验证依赖来源（中危）
  ▶ 位置：L48-L50
  ▶ 代码特征：
    <groupId>com.ruoyi</groupId>
    <artifactId>ruoyi-framework</artifactId>
  ▶ 攻击向量：使用不可信的依赖可能引入恶意代码
  ▶ 修复建议：确保依赖来源是可信的并检查其完整性
</审计报告>
2025-02-01T14:42:55.220565+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无安全漏洞
  ▶ 位置：无
  ▶ 修复建议：无
  
// 文件路径2
■ 漏洞类型：无安全漏洞
  ▶ 位置：无
  ▶ 修复建议：无
</审计报告>
2025-02-01T14:42:55.220565+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：未指定依赖版本（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin的旧版本可能存在已知漏洞，使攻击者能够利用构建过程注入恶意代码
  ▶ 修复建议：定期检查并更新依赖版本，使用最新稳定版本

■ 漏洞类型：不安全的依赖（中危）
  ▶ 位置：L61
  ▶ 代码特征：
    <artifactId>ruoyi-generator</artifactId>
  ▶ 攻击向量：ruoyi-generator模块可能存在未公开的漏洞，攻击者可通过构建项目利用该模块进行攻击
  ▶ 修复建议：对依赖进行安全审计，确保所有使用的依赖库是安全的且没有已知漏洞
</审计报告>
2025-02-01T14:42:55.220565+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的依赖版本（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    <version>2.5.15</version>
  ▶ 攻击向量：使用存在漏洞的版本，可能导致远程代码执行或信息泄露
  ▶ 修复建议：升级至最新版本的spring-boot-maven-plugin

■ 漏洞类型：不安全的依赖版本（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用存在漏洞的版本，可能导致构建过程中的问题或安全隐患
  ▶ 修复建议：升级至最新版本的maven-war-plugin
</审计报告>
2025-02-01T14:42:55.220565+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：不安全的插件版本（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用旧版本的maven-war-plugin可能存在未修复的安全漏洞，攻击者可以利用这些漏洞进行代码注入或其他攻击
  ▶ 修复建议：更新maven-war-plugin至最新版本以获取最新的安全修复

</审计报告>
2025-02-01T14:42:59.531618+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径泄露（中危）
  ▶ 位置：L4
  ▶ 代码特征：
    <property name="log.path" value="/home/ruoyi/logs" />
  ▶ 攻击向量：攻击者可以通过获取日志路径，进行日志文件的访问和分析，可能泄露敏感信息。
  ▶ 修复建议：使用动态路径生成机制，并确保日志存放路径不可预测。

■ 漏洞类型：信息暴露（中危）
  ▶ 位置：L6
  ▶ 代码特征：
    <property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />
  ▶ 攻击向量：通过日志模式中暴露的调用信息，攻击者能够推测系统的行为和结构，进行针对性攻击。
  ▶ 修复建议：减少日志输出中的敏感信息，与业务需求保持一致。

</审计报告>
2025-02-01T14:42:59.531618+0800 | DEBUG | <审计通过>
2025-02-01T14:42:59.531618+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志信息泄露（中危）
  ▶ 位置：L61-L71
  ▶ 代码特征：
    <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">
  ▶ 攻击向量：日志文件在未进行适当的访问控制下，可能被未授权用户访问，泄露敏感信息。
  ▶ 修复建议：对日志文件进行权限控制，确保只有授权用户可以访问。

■ 漏洞类型：缺乏数据过滤（低危）
  ▶ 位置：L9-L12
  ▶ 代码特征：
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
  ▶ 攻击向量：控制台输出的日志可能包含敏感用户信息，如个人身份信息（PII），若在开发环境中可导致信息泄露。
  ▶ 修复建议：使用日志过滤机制，确保输出的日志不包含敏感信息。
</审计报告>
2025-02-01T14:42:59.532614+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：攻击者可通过访问系统文件路径获取日志文件，可能泄露敏感信息
  ▶ 修复建议：使用更安全的路径定义，限制对日志文件的访问权限

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：攻击者可通过访问系统文件路径获取日志文件，可能泄露敏感用户信息
  ▶ 修复建议：使用更安全的路径定义，限制对日志文件的访问权限
</审计报告>
2025-02-01T14:42:59.532614+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径暴露（中危）
  ▶ 位置：L62, L39
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
    <file>${log.path}/sys-error.log</file>
  ▶ 攻击向量：攻击者可通过构造请求，获得实际的日志文件路径，结合其他信息进行进一步渗透
  ▶ 修复建议：采用安全的日志路径管理，避免直接将文件路径暴露在配置文件中

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L70, L48
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：若${log.pattern}包含敏感信息，则通过日志文件攻击者可以获取到潜在的用户操作信息
  ▶ 修复建议：确保日志格式不暴露敏感信息，必要时启用日志脱敏
</审计报告>
2025-02-01T14:42:59.537115+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:42:59.538113+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L90-L92
  ▶ 代码特征：
    <logger name="sys-user" level="info">
    <appender-ref ref="sys-user"/>
  ▶ 攻击向量：系统模块的日志信息可能包含敏感用户信息，攻击者可通过访问日志获得敏感数据
  ▶ 修复建议：确保日志中不记录敏感用户信息，并调整日志级别

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    <logger name="com.ruoyi" level="info" />
  ▶ 攻击向量：一般日志级别为info，可能导致不必要的信息暴露，增加攻击面
  ▶ 修复建议：调整日志级别，仅记录必要信息
</审计报告>
2025-02-01T14:42:59.538113+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:42:59.539110+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：攻击者可以通过访问/sys-user.log文件获取敏感的用户访问日志信息
  ▶ 修复建议：考虑使用日志过滤或限制日志文件的可访问性

// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>
  ▶ 攻击向量：如果log.path被暴露，攻击者能够访问到任意日期的用户日志
  ▶ 修复建议：确保log.path指向安全位置并加以保护
</审计报告>
2025-02-01T14:42:59.540106+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:43:02.910783+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志配置泄露（中危）
  ▶ 位置：L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：如果${log.path}未正确设定，可能泄露系统文件路径或日志内容
  ▶ 修复建议：确保环境变量${log.path}仅在安全、受控的环境中设置，并考虑设定访问控制

■ 漏洞类型：敏感信息直接写入日志（中危）
  ▶ 位置：L26
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：如果${log.pattern}包含敏感信息输出格式，可能导致敏感信息被记录并暴露
  ▶ 修复建议：避免记录敏感信息，或对敏感信息进行脱敏处理以防泄露
</审计报告>
2025-02-01T14:43:02.912285+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\mybatis\mybatis-config.xml
■ 漏洞类型：配置弱点（中危）
  ▶ 位置：L9
  ▶ 代码特征：
    <setting name="cacheEnabled" value="true" />
  ▶ 攻击向量：开启全局缓存可能导致缓存穿透攻击，攻击者可能利用此漏洞读取敏感数据或影响系统性能。
  ▶ 修复建议：根据业务需求谨慎使用全局缓存，考虑对缓存的访问进行限制。

■ 漏洞类型：默认执行器设置（信息）
  ▶ 位置：L13
  ▶ 代码特征：
    <setting name="defaultExecutorType" value="SIMPLE" />
  ▶ 攻击向量：使用默认执行器类型可能导致性能不足或不安全，攻击者可通过多次请求导致频繁创建语句。
  ▶ 修复建议：根据业务负载情况选择适当的执行器类型，推荐使用REUSE或BATCH执行器以提升性能和安全性。
</审计报告>
2025-02-01T14:43:02.912285+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\RuoYiApplication.java
<审计通过>
</审计报告>
2025-02-01T14:43:02.912285+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:43:02.912285+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:43:02.912285+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\RuoYiServletInitializer.java
<审计通过>
2025-02-01T14:43:02.912285+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L87
  ▶ 代码特征：
    return AjaxResult.error(e.getMessage());
  ▶ 攻击向量：异常信息直接返回给客户端，可能泄露内部实现细节
  ▶ 修复建议：返回通用错误消息而非具体异常信息

■ 漏洞类型：未验证输入数据（中危）
  ▶ 位置：L78
  ▶ 代码特征：
    redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);
  ▶ 攻击向量：未验证的验证码存储，可能导致恶意用户持久化攻击，使用已知的uuid和code进行身份验证
  ▶ 修复建议：确保uuid和code的生成是足够随机且难以预测的，增加验证码的复杂性
</审计报告>
2025-02-01T14:43:02.913297+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的图像生成（中危）
  ▶ 位置：L70-L75
  ▶ 代码特征：
    image = captchaProducerMath.createImage(capStr); 
    image = captchaProducer.createImage(capStr);
  ▶ 攻击向量：攻击者可以通过传入特定的capStr值构造恶意图像，比如使用恶意代码，这可能导致XXE (XML External Entity injection)或代码执行。
  ▶ 修复建议：在生成图像之前，对capStr进行严格的输入验证，确保仅允许可接受的字符集。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：通过请求验证码，可以获取Base64编码的图像数据，如果其中包含敏感信息，可能导致信息泄露。
  ▶ 修复建议：确保验证码图像不会含有任何敏感数据，并在必要时使用图像处理屏蔽敏感信息。
</审计报告>
2025-02-01T14:43:02.913297+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：潜在的XSS（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：Base64编码的图像可能被利用进行XSS攻击，若攻击者能够控制输入生成的验证码，则可能导致恶意脚本被执行。
  ▶ 修复建议：对生成的验证码进行严格的输入验证和过滤，确保其不包含恶意代码。

■ 漏洞类型：未经验证的用户输入（高危）
  ▶ 位置：L50
  ▶ 代码特征：
    boolean captchaEnabled = configService.selectCaptchaEnabled();
  ▶ 攻击向量：若未充分验证生成的验证码类型（数学或字符），攻击者可以通过构造特定请求触发后端逻辑，破坏验证码的有效性。
  ▶ 修复建议：对验证码类型进行严格检查和过滤，确保只接受预期的且经过验证的类型。

</审计报告>
2025-02-01T14:43:02.913297+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：通过调用getCode方法可以直接获取验证码图像的Base64字符串，可能被攻击者利用进行验证码识别。
  ▶ 潜在影响：攻击者可以通过分析流量和获取验证码来进行破解，影响验证码的有效性和安全性。
  ▶ 修复建议：限制对getCode方法的访问权限，并对生成的验证码进行有效时间的限制，或考虑使用更复杂的验证码技术（如结合文本和图形）。

</审计报告>
2025-02-01T14:43:06.581152+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L51-L53
  ▶ 代码特征：
    if (!FileUtils.checkAllowDownload(fileName))
  ▶ 攻击向量：构造fileName="../etc/passwd"可访问服务器上的敏感文件
  ▶ 潜在影响：攻击者可以下载服务器上的任意文件，导致数据泄露
  ▶ 修复建议：确保FileUtils.checkAllowDownload方法能够正确过滤和校验文件名，避免路径遍历漏洞

■ 漏洞类型：资源未释放（中危）
  ▶ 位置：L60
  ▶ 代码特征：
    FileUtils.writeBytes(filePath, response.getOutputStream());
  ▶ 攻击向量：下载过程中可能因异常未能清理流资源
  ▶ 潜在影响：可能导致文件描述符泄露，降低系统性能
  ▶ 修复建议：使用try-with-resources语句确保OutputStream在使用后得到释放
</审计报告>
2025-02-01T14:43:06.581152+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：未验证的下载路径（中危）
  ▶ 位置：L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：构造downloadPath为恶意路径，可能导致任意文件下载
  ▶ 潜在影响：攻击者可下载服务器上任意文件，泄露敏感信息
  ▶ 修复建议：验证downloadPath是否在允许的安全目录内

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L53
  ▶ 代码特征：
    throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));
  ▶ 攻击向量：通过文件名的异常信息信息泄露
  ▶ 潜在影响：攻击者能够通过非法文件名获得服务端文件名称的信息
  ▶ 修复建议：避免在异常消息中泄露具体的文件名信息，使用通用的错误提示
</审计报告>
2025-02-01T14:43:06.581152+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L56
  ▶ 代码特征：
    String filePath = RuoYiConfig.getDownloadPath() + fileName;
  ▶ 攻击向量：构造fileName="../etc/passwd"可访问系统敏感文件
  ▶ 修复建议：对fileName进行严格的白名单校验或使用安全的文件路径解析方法

■ 漏洞类型：未验证的响应头（中危）
  ▶ 位置：L155
  ▶ 代码特征：
    FileUtils.setAttachmentResponseHeader(response, downloadName);
  ▶ 攻击向量：若downloadName未经过滤，攻击者可构造恶意下载链接
  ▶ 修复建议：对downloadName进行过滤或编码以防止XSS攻击

</审计报告>
2025-02-01T14:43:06.581152+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证文件下载（高危）
  ▶ 位置：L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：如果downloadPath可以被用户控制，攻击者可构造路径，进行任意文件下载（如：downloadPath="../../../../etc/passwd"）
  ▶ 潜在影响：敏感文件泄露，可能导致系统信息泄露、权限提升等
  ▶ 修复建议：在写入文件之前，验证downloadPath是否为允许的路径，确保不允许穿越访问。

■ 漏洞类型：未验证文件上传（高危）
  ▶ 位置：L83
  ▶ 代码特征：
    String fileName = FileUploadUtils.upload(filePath, file);
  ▶ 攻击向量：未验证上传文件类型或内容，攻击者可上传恶意文件，例如：PHP Web Shell
  ▶ 潜在影响：服务器被控制、远程代码执行、数据泄露
  ▶ 修复建议：对上传的文件进行严格的类型验证和内容检查，仅允许特定类型文件上传，并检查文件内容是否符合预期。
</审计报告>
2025-02-01T14:43:06.584225+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：如果downloadPath未经过严格验证，可构造路径如'../../../../../etc/passwd'读取任意文件
  ▶ 修复建议：在使用下载路径之前应用路径验证和规范化处理

■ 漏洞类型：不安全的URL拼接（中危）
  ▶ 位置：L84
  ▶ 代码特征：
    String url = serverConfig.getUrl() + fileName;
  ▶ 攻击向量：fileName未进行过滤，攻击者可构造fileName包含恶意字符，如'&lt;script&gt;'注入
  ▶ 修复建议：对fileName进行过滤和验证，确保其安全性
</审计报告>
2025-02-01T14:43:06.584225+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：文件下载路径穿越（高危）
  ▶ 位置：L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：构造downloadPath为'../../../../../etc/passwd'以便下载敏感文件
  ▶ 修复建议：对downloadPath进行严格的路径校验，确保其在预设的安全路径范围内

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    ajax.put("newFileName", FileUtils.getName(fileName));
  ▶ 攻击向量：如果fileName包含敏感信息（如机密文件名），可能会在响应中泄露
  ▶ 修复建议：避免将原文件名直接发送给客户端，使用安全的文件名策略
</审计报告>
2025-02-01T14:43:06.584225+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：潜在的命令注入（中危）
  ▶ 位置：L52-L54
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
    Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));
  ▶ 攻击向量：如果redisTemplate被恶意配置，可能导致执行未授权的Redis命令，通过构造恶意的redisTemplate对象。
  ▶ 修复建议：确保redisTemplate的配置是安全和受信任的，并对执行的命令增加验证。

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L113
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('monitor:cache:list')")
  ▶ 攻击向量：如果不存在严格的权限管理，攻击者可能利用此接口清除缓存。
  ▶ 修复建议：审查角色和权限管理，确保只有授权用户可以调用该接口。

</审计报告>
2025-02-01T14:43:06.584225+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：未验证删除操作（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys来自用户输入而未经过任何验证或限制，恶意用户可以构造cacheKeys为特定值来删除关键缓存数据。
  ▶ 修复建议：在执行删除操作前，确保对cacheKeys进行有效性检查和权限验证。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
  ▶ 攻击向量：暴露Redis的敏感信息，可能导致服务的安全性下降。如果攻击者可以访问此信息，可能会获取Redis实例的配置和状态。
  ▶ 修复建议：限制该信息的访问，确保只有授权用户可获取这些信息，必要时隐藏敏感信息。
</审计报告>
2025-02-01T14:43:06.585308+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L54
  ▶ 代码特征：
    Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());
  ▶ 攻击向量：如果Redis服务不可用，可能导致程序崩溃或未处理的异常
  ▶ 修复建议：添加异常处理逻辑以捕获和处理Redis连接异常

■ 漏洞类型：未验证输入（信息）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys的内容未经过验证，可能导致无效或恶意的缓存删除请求
  ▶ 修复建议：在调用delete前对cacheKeys进行合法性验证
</审计报告>
2025-02-01T14:43:06.585308+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：任意缓存键删除（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys来源于用户输入，攻击者可能构造恶意输入以删除任意缓存。
  ▶ 修复建议：严格验证cacheKeys来源，并确保不接受用户直接输入的值。

■ 漏洞类型：任意键获取（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");
  ▶ 攻击向量：攻击者可控制cacheName，进而获取不该访问的缓存键。
  ▶ 修复建议：对cacheName进行严格验证，不允许接受用户输入的值或加入白名单机制。
</审计报告>
2025-02-01T14:43:09.745752+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：任意键删除（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys来自用户输入，攻击者可以构造包含敏感键名的cacheKeys，从而删除任意缓存。
  ▶ 修复建议：确保cacheKeys来自可信来源并对其进行严格验证。

■ 漏洞类型：潜在的空值读取（信息）
  ▶ 位置：L91
  ▶ 代码特征：
    String cacheValue = redisTemplate.opsForValue().get(cacheKey);
  ▶ 攻击向量：如果cacheKey未经过验证或清理，可能导致空值或错误值的返回，但不直接构成严重风险。
  ▶ 修复建议：增加对cacheKey的验证，确保其有效性和安全性。
</审计报告>
2025-02-01T14:43:09.746749+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：命令执行风险（中危）
  ▶ 位置：L101-L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys是来自未经过滤的用户输入，可以构造cacheKeys为恶意值，可能导致不当删除关键缓存。
  ▶ 修复建议：在调用delete方法前对cacheKeys进行严格验证和过滤，确保不接受恶意输入。

</审计报告>
2025-02-01T14:43:09.746749+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L61
  ▶ 代码特征：
    commandStats.stringPropertyNames().forEach(key -> {
  ▶ 攻击向量：恶意用户能够通过遍历所有属性名称，获取系统内部状态或敏感数据
  ▶ 潜在影响：可能导致敏感信息披露和后续的针对性攻击
  ▶ 修复建议：限制对stringPropertyNames的访问和输出，增加访问控制机制
</审计报告>
2025-02-01T14:43:09.746749+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：潜在XSS（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));
  ▶ 攻击向量：如果property未经过适当的过滤或转义，攻击者可以注入恶意脚本，例如'calls=<script>alert(1)</script>,usec'，导致XSS攻击。
  ▶ 修复建议：对property进行严格的输入验证和过滤，或使用HTML转义处理最终输出。

<审计通过>
</审计报告>
2025-02-01T14:43:09.747745+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));
  ▶ 攻击向量：若property参数来源于用户输入，攻击者可构造特定输入，导致敏感信息泄露。
  ▶ 修复建议：对property进行严格验证或清洗，避免直接使用用户输入。

</审计报告>
2025-02-01T14:43:09.764744+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\ServerController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L25
  ▶ 代码特征：
    return AjaxResult.success(server);
  ▶ 攻击向量：攻击者可能通过反向工程提取服务器的敏感信息
  ▶ 修复建议：限制返回的信息，避免泄露敏感数据
</审计报告>
2025-02-01T14:43:09.765740+0800 | DEBUG | <审计报告>
// 文件路径1
<审计通过>
</审计报告>
2025-02-01T14:43:09.766737+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：潜在SQL注入（高危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
  ▶ 攻击向量：如果logininfor对象未经过充分验证和过滤，可能使得恶意用户构造含有恶意SQL代码的输入，进而在selectLogininforList方法中执行注入攻击。
  ▶ 修复建议：确保对logininfor对象中的字段进行严格验证，确保没有SQL注入风险，或使用参数化查询避免直接拼接SQL。

<审计通过>
2025-02-01T14:43:09.766737+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L50-L54
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
    util.exportExcel(response, list, "登录日志");
  ▶ 攻击向量：若logininfor参数未经过滤，攻击者可能构造恶意请求获取用户的登录日志信息
  ▶ 修复建议：在selectLogininforList方法中对logininfor进行严格校验，确保用户合法性和参数合法性，避免未授权访问。

■ 漏洞类型：内存泄漏（低危）
  ▶ 位置：L79-L80
  ▶ 代码特征：
    passwordService.clearLoginRecordCache(userName);
    return success();
  ▶ 攻击向量：如果userName未经过验证，可能引发大量无效缓存记录的清理请求，造成内存消耗增加
  ▶ 修复建议：对userName进行有效性检查，确保其合法性后再调用清理操作。
</审计报告>
2025-02-01T14:43:09.767734+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    passwordService.clearLoginRecordCache(userName);
  ▶ 攻击向量：如果未对userName进行适当的验证，攻击者可以通过构造请求清除其他用户的登录记录。
  ▶ 修复建议：添加权限验证，确保只有授权用户可以清除指定用户的登录记录。

<审计通过>
</审计报告>
2025-02-01T14:43:21.671314+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏权限控制（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    operLogService.cleanOperLog();
  ▶ 攻击向量：未经身份验证的用户调用clean()方法清除操作日志
  ▶ 潜在影响：攻击者可以无障碍删除日志记录，掩盖其恶意活动
  ▶ 修复建议：在方法前添加权限认证，确保只有具备相应权限的用户可以调用
  
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L39
  ▶ 代码特征：
    List<SysOperLog> list = operLogService.selectOperLogList(operLog);
  ▶ 攻击向量：传入恶意构造的SysOperLog对象，可能导致逻辑漏洞或信息泄露
  ▶ 潜在影响：不受限的输入可能让攻击者依据系统逻辑进行恶意操作，获取敏感日志信息
  ▶ 修复建议：对SysOperLog对象的输入进行严格验证与过滤
</审计报告>
2025-02-01T14:43:21.671314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysOperlogController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L64-L66
  ▶ 代码特征：
    operLogService.cleanOperLog();
  ▶ 攻击向量：若未对调用者进行身份验证，则恶意用户可以调用清除操作日志的接口
  ▶ 修复建议：在调用该方法之前进行权限验证

■ 漏洞类型：XSS（中危）
  ▶ 位置：L46-L50
  ▶ 代码特征：
    util.exportExcel(response, list, "操作日志");
  ▶ 攻击向量：若operLog列表中的数据未经过严格的过滤或转义，可能导致导出Excel时产生跨站脚本漏洞
  ▶ 修复建议：对operLog数据进行严格的过滤，防止恶意脚本注入
</审计报告>
2025-02-01T14:43:21.671314+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在的命令注入（中危）
  ▶ 位置：L45-L80
  ▶ 代码特征：
    Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：攻击者可以构造特定的tokenId，例如"'; DROP TABLE users; --"，可能导致意外删除或者影响系统稳定性。
  ▶ 修复建议：在使用tokenId前进行严格的校验或清理，确保没有特殊字符通过用户输入进行注入。

</审计报告>
2025-02-01T14:43:21.671314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysUserOnlineController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));
  ▶ 攻击向量：如果未对ipaddr、userName和user进行充分的验证，攻击者可构造恶意输入获取其他用户的在线信息。
  ▶ 修复建议：对输入参数进行严格验证并进行日志记录。

■ 漏洞类型：无效的token管理（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：若tokenId未经过验证，攻击者可能利用此功能删除任意用户会话。
  ▶ 修复建议：在删除token前，验证token的有效性及授权。

</审计报告>
2025-02-01T14:43:21.671314+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysUserOnlineController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：攻击者通过猜测tokenId，可能导致缓存中重要数据被不当删除或访问
  ▶ 修复建议：确保tokenId的安全性，适当限制token的有效范围和权限

■ 漏洞类型：未验证的返回数据（中危）
  ▶ 位置：L69
  ▶ 代码特征：
    return getDataTable(userOnlineList);
  ▶ 攻击向量：如果userOnlineList中的数据未经过合理验证，则可能引入恶意数据或未授权用户数据
  ▶ 修复建议：对返回的数据进行严格的验证和过滤，确保用户的权限和有效性
</审计报告>
2025-02-01T14:43:21.673466+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L42-L46
  ▶ 代码特征：
    List<SysConfig> list = configService.selectConfigList(config);
  ▶ 攻击向量：无权限检查的情况下，攻击者可调用该接口获取所有配置参数，可能导致敏感信息泄露
  ▶ 修复建议：在调用selectConfigList之前增加权限验证，确保只有授权用户才能访问该列表

■ 漏洞类型：绕过缓存刷新（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：若用户未经过身份认证，仍可调用该接口导致全局配置被恶意刷新
  ▶ 修复建议：在调用resetConfigCache之前添加身份验证和权限确认
</审计报告>
2025-02-01T14:43:21.673466+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：潜在XSS（中危）
  ▶ 位置：L54
  ▶ 代码特征：
    List<SysConfig> list = configService.selectConfigList(config);
  ▶ 攻击向量：如果SysConfig对象的某些字段未经过过滤，攻击者可以通过修改config对象输入恶意脚本，导致XSS漏洞。
  ▶ 修复建议：在输出前对SysConfig中的字符串字段进行HTML转义。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L52-L56
  ▶ 代码特征：
    public void export(HttpServletResponse response, SysConfig config)
  ▶ 攻击向量：如果SysConfig中的某些敏感配置信息（如API密钥）未加密或处理不当，可能导致敏感数据泄露。
  ▶ 修复建议：确保导出的配置数据不包含敏感信息，或对敏感字段进行脱敏处理。
</审计报告>
2025-02-01T14:43:21.673466+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏参数验证（中危）
  ▶ 位置：L119-L130
  ▶ 代码特征：
    public AjaxResult remove(@PathVariable Long deptId)
  ▶ 攻击向量：deptId参数未进行验证，可能引发权限绕过或非法删除。
  ▶ 修复建议：在删除操作前应添加deptId的有效性和权限检查。

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L42-L45
  ▶ 代码特征：
    List<SysDept> depts = deptService.selectDeptList(dept);
  ▶ 攻击向量：SysDept对象dept未经任何验证，可能导致不必要的数据泄露。
  ▶ 修复建议：对SysDept参数进行严格验证，确保其有效性。
</审计报告>
2025-02-01T14:43:21.673466+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：如果dictCodes未经过适当校验，可以构造包含恶意SQL代码的字符串，例如"1,2; DROP TABLE users;"，从而可能导致数据损失或破坏
  ▶ 修复建议：确保dictCodes经过严格的格式验证并使用参数化查询或预编译语句

■ 漏洞类型：潜在的数据泄露（中危）
  ▶ 位置：L48
  ▶ 代码特征：
    List<SysDictData> list = dictDataService.selectDictDataList(dictData);
  ▶ 攻击向量：如果dictData对象未经过适当的过滤和处理，恶意用户可能构造请求以获取敏感数据列表
  ▶ 修复建议：在输入dictData前进行严格校验并限制可查询的数据范围
</审计报告>
2025-02-01T14:43:21.673466+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：未检验输入（高危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：构造dictCodes='1,2; DROP TABLE users; --'进行SQL注入
  ▶ 修复建议：对输入进行严格验证和清洗，确保dictCodes只包含预期格式的数据

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L59
  ▶ 代码特征：
    util.exportExcel(response, list, "字典数据");
  ▶ 攻击向量：在导出过程中出现异常时未返回有效信息，可能导致系统状态未知
  ▶ 修复建议：添加异常处理机制，确保异常情况能够被捕捉并反馈给用户
</审计报告>
2025-02-01T14:43:30.695731+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：构造dictCodes为恶意输入，例如包含恶意SQL代码，可能导致执行未授权的删除操作。
  ▶ 修复建议：在调用deleteDictDataByIds前，对dictCodes进行验证和清洗。

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L78
  ▶ 代码特征：
    List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);
  ▶ 攻击向量：构造dictType为恶意输入，可能导致SQL注入或获取不应公开的数据。
  ▶ 修复建议：在调用selectDictDataByType前，对dictType进行验证和清洗。
</审计报告>
2025-02-01T14:43:30.696728+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L63
  ▶ 代码特征：
    return success(dictTypeService.selectDictTypeById(dictId));
  ▶ 攻击向量：调用selectDictTypeById方法时可能抛出异常，导致信息泄露或服务中断
  ▶ 修复建议：添加异常处理逻辑，确保不会泄露内部错误信息

■ 漏洞类型：API暴露敏感信息（中危）
  ▶ 位置：L28
  ▶ 代码特征：
    * @author ruoyi
  ▶ 攻击向量：源代码注释中包含开发者信息，可能被恶意用户利用
  ▶ 修复建议：移除敏感信息的注释，或使用更安全的描述

■ 漏洞类型：缺乏输入校验（高危）
  ▶ 位置：L74-L75
  ▶ 代码特征：
    if (!dictTypeService.checkDictTypeUnique(dict))
  ▶ 攻击向量：用户可以通过发送恶意数据来干扰字典类型的唯一性检查，导致数据重复
  ▶ 修复建议：加强对输入信息的校验，并在数据库层面确保唯一性约束
</审计报告>
2025-02-01T14:43:30.696728+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的输入（高危）
  ▶ 位置：L42
  ▶ 代码特征：
    List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);
  ▶ 攻击向量：若dictType的某个字段未经过滤，攻击者可能构造恶意数据用于注入，如dictType.name="'; DROP TABLE users; --"
  ▶ 修复建议：对dictType进行输入数据验证和过滤，确保安全性。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L39
  ▶ 代码特征：
    public TableDataInfo list(SysDictType dictType)
  ▶ 攻击向量：调用接口时未做权限验证，攻击者可能访问敏感字典数据。
  ▶ 修复建议：添加权限验证逻辑，确保只有授权用户才能获得字典数据。

</审计报告>
2025-02-01T14:43:30.696728+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：IDOR（不当对象引用，低危）
  ▶ 位置：L61
  ▶ 代码特征：
    public AjaxResult getInfo(@PathVariable Long dictId)
  ▶ 攻击向量：用户可修改URL中dictId参数进行访问各个字典类型信息，如dictId=1001
  ▶ 潜在影响：未验证用户权限时，攻击者可获取未授权的信息
  ▶ 修复建议：添加权限验证，确保用户只能访问授权的字典类型信息
</审计报告>
2025-02-01T14:43:30.696728+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L76
  ▶ 代码特征：
    return error("新增字典'" + dict.getDictName() + "'失败，字典类型已存在");
  ▶ 攻击向量：攻击者可通过尝试不同的字典名称，获得关于系统字典类型的存在性反馈，从而识别有效的字典类型。
  ▶ 修复建议：在返回错误信息时，不应泄露系统的内部结构或状态信息，可以使用通用错误消息。

<审计通过>
<审计通过>
</审计报告>
2025-02-01T14:43:30.700706+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：潜在的SQL注入（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果dictTypeService.selectDictTypeAll()方法中的查询字符串未做好防护，可能导致查询操控
  ▶ 修复建议：在dictTypeService.selectDictTypeAll()内部实现时使用参数化查询，确保输入经过验证

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    return toAjax(dictTypeService.insertDictType(dict));
  ▶ 攻击向量：如果dict参数未经过验证，可能导致恶意数据插入
  ▶ 修复建议：添加对dict参数的验证，确保其合法性
</审计报告>
2025-02-01T14:43:30.700706+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：潜在的SQL注入（高危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果selectDictTypeAll方法未对输入进行适当的验证和过滤，攻击者可能传入恶意输入来执行SQL注入。
  ▶ 潜在影响：可能导致未授权的数据访问或数据泄露。
  ▶ 修复建议：确保在selectDictTypeAll内部对所有输入进行验证和清理，使用参数化查询。

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L95
  ▶ 代码特征：
    return toAjax(dictTypeService.updateDictType(dict));
  ▶ 攻击向量：如果updateDictType方法抛出未捕获的异常，可能导致系统崩溃或返回不明确的错误信息，攻击者可利用此信息进行针对性攻击。
  ▶ 潜在影响：可能导致服务拒绝或敏感信息泄露。
  ▶ 修复建议：在调用updateDictType前后添加适当的异常处理机制，确保系统在遇到问题时能够给出友好的提示，并记录详细日志。
</审计报告>
2025-02-01T14:43:30.700706+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：权限控制不足（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    dictTypeService.deleteDictTypeByIds(dictIds);
  ▶ 攻击向量：恶意用户可以构造请求删除字典类型而不经过验证
  ▶ 修复建议：在删除操作前进行用户权限验证，确保当前用户有删除权限

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L128-L130
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
    return success(dictTypes);
  ▶ 攻击向量：当dictTypeService抛出异常时，系统将未捕获的异常返回，可能导致信息泄露
  ▶ 修复建议：为服务调用添加异常处理逻辑，确保返回友好的错误信息而非系统错误

</审计报告>
2025-02-01T14:43:30.700706+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：未实现访问控制可能导致未授权用户读取字典类型信息。
  ▶ 修复建议：在此操作前实施用户权限验证。

■ 漏洞类型：未授权缓存清除（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictTypeService.resetDictCache();
  ▶ 攻击向量：未实现权限校验可能允许恶意用户清除字典缓存。
  ▶ 修复建议：在调用resetDictCache()前检查用户权限。
</审计报告>
2025-02-01T14:43:30.702226+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：潜在的SQL注入（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果`selectDictTypeAll`方法内部未妥善处理输入，可能导致恶意用户构造SQL注入攻击。
  ▶ 潜在影响：攻击者可能会访问、操纵存储在数据库中的敏感数据。
  ▶ 修复建议：确保`selectDictTypeAll`方法中所有的用户输入都经过严格验证和清理，并使用参数化查询。

</审计报告>
2025-02-01T14:43:36.783351+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：未经验证的ruoyiConfig.getName()和ruoyiConfig.getVersion()可能被恶意用户利用，导致敏感信息泄露
  ▶ 修复建议：确保ruoyiConfig的返回值经过适当的过虑和验证，避免直接在响应中展示敏感信息

<审计通过>
</审计报告>
2025-02-01T14:43:36.783351+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysIndexController.java
■ 漏洞类型：敏感信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：通过访问首页接口，攻击者可获取后台管理框架的名称和版本信息
  ▶ 潜在影响：攻击者可利用信息进行版本特定的攻击
  ▶ 修复建议：控制敏感信息的输出或对信息进行模糊化处理
</审计报告>
2025-02-01T14:43:36.783351+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：未验证的用户输入（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：如果SecurityUtils.getUserId()未正确验证用户身份，可能导致未授权访问用户的菜单列表。
  ▶ 修复建议：确认SecurityUtils.getUserId()具备充分的用户验证逻辑。

■ 漏洞类型：明文密码传输（高危）
  ▶ 位置：L53
  ▶ 代码特征：
    String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(), loginBody.getUuid());
  ▶ 攻击向量：若密码未加密传输，则可能被中间人攻击（MITM）窃取。
  ▶ 修复建议：确保使用HTTPS，并对密码进行加密传输。

<审计通过>
</审计报告>
2025-02-01T14:43:36.783351+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L67-L68
  ▶ 代码特征：
    LoginUser loginUser = SecurityUtils.getLoginUser();
    SysUser user = loginUser.getUser();
  ▶ 攻击向量：如果未对getLoginUser()进行权限控制，可能导致未授权用户获取敏感用户信息
  ▶ 修复建议：在调用前进行权限校验，确保未授权用户无法访问该方法

■ 漏洞类型：潜在的权限控制漏洞（中危）
  ▶ 位置：L93-L94
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果未对userId进行有效的身份验证，可能导致恶意用户构造请求以获取他人菜单数据
  ▶ 修复建议：确保userId只来源于经过身份验证的用户，并加入验证机制
</审计报告>
2025-02-01T14:43:36.783351+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：身份验证绕过（高危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：如果SecurityUtils.getUserId()未进行有效的身份验证，攻击者可直接构造请求以获取其他用户的菜单信息
  ▶ 修复建议：确保getUserId()方法源自经过身份验证的用户会话

■ 漏洞类型：资源未授权访问（中危）
  ▶ 位置：L94-L95
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：恶意用户可能尝试使用被篡改的userId来访问不属于他们的菜单
  ▶ 修复建议：在selectMenuTreeByUserId方法中增加权限校验，确保用户只能访问其有权访问的资源
</审计报告>
2025-02-01T14:43:36.785656+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：如果SecurityUtils.getUserId()未正确验证用户身份，攻击者可能窃取用户ID进行未授权访问
  ▶ 修复建议：确保userId的获取前有适当的用户身份验证机制

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L94-L95
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：攻击者可以试图利用已知的userId（从泄露渠道）去访问菜单列表
  ▶ 修复建议：在调用menuService之前增加权限验证，确保调用者有权访问所请求的菜单

</审计报告>
2025-02-01T14:43:36.785656+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L90-L95
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：未对userId的合法性进行验证，可能被攻击者利用伪造的userId进行信息泄露
  ▶ 修复建议：在调用menuService方法前对userId进行验证，并确保当前用户具有访问该资源的权限

<审计通过>
2025-02-01T14:43:36.785656+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysMenuController.java
■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L43-L44
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());
  ▶ 攻击向量：未验证用户权限，攻击者可以构造请求获取所有菜单数据 
  ▶ 潜在影响：可能导致敏感菜单信息泄露
  ▶ 修复建议：在调用selectMenuList前，添加用户身份和权限验证

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L140
  ▶ 代码特征：
    return toAjax(menuService.deleteMenuById(menuId));
  ▶ 攻击向量：当menuId无效时，可能抛出异常，导致服务崩溃 
  ▶ 潜在影响：影响用户体验并可能导致服务可用性问题
  ▶ 修复建议：捕获异常并返回相应错误信息
</审计报告>
2025-02-01T14:43:36.785656+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L40-L43
  ▶ 代码特征：
    List<SysNotice> list = noticeService.selectNoticeList(notice);
  ▶ 攻击向量：如果SysNotice类的notice属性未进行适当验证与过滤，攻击者可构造恶意对象注入，导致数据库中的信息泄露或修改。
  ▶ 修复建议：在接收notice参数之前增加输入验证逻辑，确保数据有效性与安全性。

■ 漏洞类型：未处理的异常（中危）
  ▶ 位置：L88-L90
  ▶ 代码特征：
    return toAjax(noticeService.deleteNoticeByIds(noticeIds));
  ▶ 攻击向量：如果deleteNoticeByIds方法中抛出异常，可能导致返回给前端的信息泄露，或引发未处理的服务器错误。
  ▶ 修复建议：对deleteNoticeByIds调用做错误处理，确保异常记录并合理返回给前端。
</审计报告>
2025-02-01T14:43:36.785656+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：无漏洞
  ▶ 备注：SysPostController类中的方法调用success返回结果正常，未发现安全漏洞。

■ 漏洞类型：无漏洞
  ▶ 备注：postService属性的声明和使用未涉及敏感数据或安全问题，未发现安全漏洞。
</审计报告>
2025-02-01T14:43:41.882233+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts对象是由用户输入或不可信来源直接构造的，可能引入未验证的数据，导致信息泄露或不当访问。
  ▶ 修复建议：在返回posts之前，增加对其内容的验证和清理，确保不包含恶意或敏感信息。

■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L44
  ▶ 代码特征：
    startPage();
  ▶ 攻击向量：startPage方法可能依赖于外部输入进行分页操作，如果没有验证设定，攻击者可以构造请求导致分页错误或信息泄露。
  ▶ 修复建议：检查和验证输入参数，确保它们在合理范围内。
</审计报告>
2025-02-01T14:43:41.882233+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的反序列化（中危）
  ▶ 位置：L45
  ▶ 代码特征：
    List<SysPost> list = postService.selectPostList(post);
  ▶ 攻击向量：如果post参数未经过适当验证，攻击者可构造恶意的数据对象从而执行任意代码
  ▶ 修复建议：对post参数进行严格的验证和清洗，确保不携带恶意数据

<审计通过>
</审计报告>
2025-02-01T14:43:41.883250+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：无漏洞
  ▶ 说明：当前代码逻辑清晰，调用链中各个方法均正常返回，未发现安全隐患。
  
<审计通过> 
</审计报告>
2025-02-01T14:43:41.883250+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts中包含敏感用户数据，可能通过此接口暴露 
  ▶ 潜在影响：攻击者可能通过API接口获取敏感数据

■ 漏洞类型：未加密导出数据（中危）
  ▶ 位置：L55
  ▶ 代码特征：
    ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);
  ▶ 攻击向量：导出的Excel文件没有加密，容易被未授权访问
  ▶ 潜在影响：敏感数据在Excel文件中的泄露风险

</审计报告>
2025-02-01T14:43:41.884247+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：如果postId未经过验证，攻击者可以通过构造请求获取其他用户的岗位信息
  ▶ 修复建议：在调用selectPostById方法之前对postId进行有效性检查及权限验证

■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts未进行授权检查，攻击者可能获取敏感岗位列表
  ▶ 修复建议：在返回岗位列表前增加用户角色验证
</审计报告>
2025-02-01T14:43:41.884247+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：通过暴露的API接口，可以构造请求获取任意岗位信息，可能导致敏感数据泄露
  ▶ 修复建议：对postId进行权限校验，确保用户只能获取其有权限访问的岗位信息

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：未对岗位选择框列表进行严格的权限校验，攻击者可能获取超出其权限的信息
  ▶ 修复建议：增加用户权限检查，确保返回的数据与用户的角色权限相匹配
</审计报告>
2025-02-01T14:43:41.886246+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：潜在的权限控制缺失（中危）
  ▶ 位置：L77
  ▶ 代码特征：
    if (!postService.checkPostNameUnique(post))
  ▶ 攻击向量：未能有效验证当前用户的权限，可能导致非授权用户添加重复岗位名称
  ▶ 修复建议：在添加岗位之前，增加当前用户权限的验证逻辑，确保只有有权用户可以进行此操作

<审计通过>
2025-02-01T14:43:41.886246+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    return error("新增岗位'" + post.getPostName() + "'失败，岗位名称已存在");
  ▶ 攻击向量：攻击者可以通过观察错误消息推测系统内部状态及数据结构
  ▶ 修复建议：避免在错误消息中直接显示受影响数据，改为通用错误提示

<审计通过>
</审计报告>
2025-02-01T14:43:41.886246+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts集合包含敏感用户数据，如用户身份、权限等，攻击者可以通过接口访问这些数据
  ▶ 修复建议：在返回前清理posts中的敏感信息

■ 漏洞类型：业务逻辑漏洞（中危）
  ▶ 位置：L81
  ▶ 代码特征：
    else if (!postService.checkPostCodeUnique(post))
  ▶ 攻击向量：如果checkPostCodeUnique实现不严格，可能允许重复岗位编码被添加
  ▶ 修复建议：确保checkPostCodeUnique方法逻辑无漏洞并全面验证编码唯一性
</审计报告>
2025-02-01T14:43:41.887242+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L85
  ▶ 代码特征：
    post.setCreateBy(getUsername());
  ▶ 攻击向量：如果getUsername()直接返回Session或请求中的数据，没有安全过滤，则可能泄露敏感信息
  ▶ 修复建议：确认getUsername()方法包含必要的安全性检查，防止意外暴露用户信息

■ 漏洞类型：潜在的业务逻辑问题（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts来源于未验证的输入，可能导致返回给用户不合法的敏感数据
  ▶ 修复建议：对posts数据进行严格的权限验证，确保返回的内容符合权限要求
</审计报告>
2025-02-01T14:43:52.471610+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未认证的操作（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    return toAjax(postService.insertPost(post));
  ▶ 攻击向量：未对post内容进行验证，攻击者可以构造恶意post数据插入数据库
  ▶ 潜在影响：可能导致数据泄露或不当操作
  ▶ 修复建议：对插入的数据进行验证和授权检查
  
■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：posts数据来源未明，可能泄露敏感数据
  ▶ 潜在影响：如果posts包含敏感信息，可能被未经授权的用户访问
  ▶ 修复建议：确保返回的数据不包含敏感信息
</审计报告>
2025-02-01T14:43:52.471610+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L99
  ▶ 代码特征：
    return error("修改岗位'" + post.getPostName() + "'失败，岗位名称已存在");
  ▶ 攻击向量：攻击者可利用错误信息获取系统内部状态，如对已有岗位名称的知晓。
  ▶ 修复建议：使用通用错误信息，不透露具体的岗位名称。
  
<审计通过>
</审计报告>
2025-02-01T14:43:52.471610+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L105
  ▶ 代码特征：
    post.setUpdateBy(getUsername());
  ▶ 攻击向量：攻击者可通过未授权访问获取当前用户名，可能泄露敏感信息
  ▶ 修复建议：确保getUsername()方法的访问权限，限制其能够暴露的信息

<审计通过>
</审计报告>
2025-02-01T14:43:52.471610+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未验证的参数（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    return toAjax(postService.updatePost(post));
  ▶ 攻击向量：如果post参数包含恶意数据，可能导致业务逻辑绕过或数据篡改。
  ▶ 修复建议：对post参数进行有效性校验，确保其符合预期结构和内容。

<审计通过>
2025-02-01T14:43:52.471610+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：构造postIds为恶意值，可能导致未授权删除操作
  ▶ 修复建议：对postIds进行严格的校验，确保其合法性和期望格式

■ 漏洞类型：返回值信任（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：攻击者可能操控posts的内容，导致影响前端显示或造成信息泄露
  ▶ 修复建议：在返回结果之前，确保posts内容的安全性，避免敏感信息泄露
</审计报告>
2025-02-01T14:43:52.471610+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未验证的输入（高危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：攻击者可以构造postIds参数为"1 OR 1=1"来执行注入，导致未授权的删除操作
  ▶ 修复建议：对postIds进行严格的验证和清洗

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感字段，攻击者可以通过接口获取敏感信息
  ▶ 修复建议：限制返回的信息字段，去除敏感数据
</审计报告>
2025-02-01T14:43:52.473814+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感数据，可能导致通过接口泄露用户敏感信息
  ▶ 修复建议：对返回的数据进行脱敏处理

<审计通过>
2025-02-01T14:43:52.473814+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：输出编码不足（高危）
  ▶ 位置：L56
  ▶ 代码特征：
    util.exportExcel(response, list, "岗位数据");
  ▶ 攻击向量：如果list中包含用户输入的数据（如岗位名称），可能存在XSS漏洞。攻击者可以通过构造含有恶意脚本的岗位名称，最终在生成的Excel中执行。
  ▶ 修复建议：对list中的数据进行HTML编码，确保输出内容清洁。

<审计通过>
2025-02-01T14:43:52.473814+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71-L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：通过响应内容可获取用户名，从调试信息或日志中可能泄露敏感数据
  ▶ 修复建议：避免在错误信息中暴露用户敏感信息

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L100
  ▶ 代码特征：
    return error("修改密码失败，旧密码错误");
  ▶ 攻击向量：通过响应内容可能泄露密码错误信息
  ▶ 修复建议：返回通用错误信息，而不是具体的失败原因

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L104
  ▶ 代码特征：
    return error("新密码不能与旧密码相同");
  ▶ 攻击向量：泄露用户密码变更逻辑，可能让攻击者构造特定输入进行攻击
  ▶ 修复建议：返回通用错误信息，避免显式告知用户密码变更情况

■ 漏洞类型：文件上传漏洞（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：未对上传文件进行充分的验证与限制，可能允许用户上传恶意文件
  ▶ 修复建议：实现文件类型与大小检查，并限制可上传文件的路径

</审计报告>
2025-02-01T14:43:52.473814+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：攻击者可以通过重试不同的手机号码或邮箱，并获得每次操作的具体反馈信息，推测出系统中注册的用户信息。
  ▶ 修复建议：返回更加通用的错误信息，避免泄露用户身份信息。

■ 漏洞类型：命令执行（高危）
  ▶ 位置：L128
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：如果file没有经过严格的校验，攻击者可以上传恶意文件或大文件，导致命令执行或拒绝服务。
  ▶ 修复建议：增加对上传文件的类型和内容的校验，确保只允许合法的文件上传。

■ 漏洞类型：暴露敏感信息（中危）
  ▶ 位置：L93, L94, L98
  ▶ 代码特征：
    String oldPassword = params.get("oldPassword");
    String newPassword = params.get("newPassword");
  ▶ 攻击向量：虽然旧密码的匹配已经在代码中进行了检查，但如果日志中记录了请求体或出现未加密的密码传播，可能泄露用户的敏感信息。
  ▶ 修复建议：确保密码操作的日志不输出敏感信息，并在传输过程中进行加密。

■ 漏洞类型：不安全的用户输入（中危）
  ▶ 位置：L67, L68
  ▶ 代码特征：
    currentUser.setPhonenumber(user.getPhonenumber());
    currentUser.setSex(user.getSex());
  ▶ 攻击向量：如果用户传入的`user.getPhonenumber()`或`user.getSex()`没有进行有效性验证，可能导致系统存入不合法的数据。
  ▶ 修复建议：对用户输入的数据进行合法性校验，防止异常或恶意数据进入系统。
</审计报告>
2025-02-01T14:43:58.847025+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：账号横向访问（中危）
  ▶ 位置：L63-L65
  ▶ 代码特征：
    LoginUser loginUser = getLoginUser();
    SysUser currentUser = loginUser.getUser();
  ▶ 攻击向量：依赖于getLoginUser方法的实现，如果该方法未能严格限制用户权限，恶意用户可能访问或更新其他用户的信息。
  ▶ 潜在影响：用户能够更改或访问不属于自己的信息，提高了信息泄露和数据篡改的风险。

■ 漏洞类型：不当错误信息暴露（信息）
  ▶ 位置：L71
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 潜在影响：异常信息返回到前端可能被恶意用户利用，对系统的内部实现提供了信息泄露的机会。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L103
  ▶ 代码特征：
    if (SecurityUtils.matchesPassword(newPassword, password))
  ▶ 攻击向量：如果新密码的设置没有适当的复杂性验证，可能导致通过简单的方法进行暴力破解。
  ▶ 潜在影响：用户密码被暴力破解，可能导致账户被劫持。

■ 漏洞类型：缺乏文件类型验证（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：攻击者可以上传恶意文件，尽管有文件扩展名限制，但未对文件内容进行校验。
  ▶ 潜在影响：可能导致服务器被攻击，从而导致任意代码执行或服务拒绝。

</审计报告>
2025-02-01T14:43:58.847025+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：攻击者可利用返回的错误信息枚举所有用户名及其手机号码的存在状态
  ▶ 修复建议：避免在错误信息中直接暴露用户名或其他敏感信息

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：攻击者可利用返回的错误信息枚举所有用户名及其邮箱状态
  ▶ 修复建议：避免在错误信息中直接暴露用户名或其他敏感信息
</审计报告>
2025-02-01T14:43:58.847025+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：通过错误信息泄露用户信息，攻击者可以判断该用户名的存在性
  ▶ 修复建议：避免在错误信息中暴露用户相关信息

■ 漏洞类型：输入验证不足（低危）
  ▶ 位置：L69, L73
  ▶ 代码特征：
    if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))
  ▶ 攻击向量：user.getPhonenumber()未经过严格验证，可能导致逻辑漏洞
  ▶ 修复建议：对用户输入进行格式校验，包括手机号格式检查

■ 漏洞类型：缺乏限制的文件上传（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：上传不受限文件类型的攻击，如PHP反弹shell
  ▶ 修复建议：增强文件上传限制，明确允许的文件类型和大小，及内容检测

</审计报告>
2025-02-01T14:43:58.849941+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：通过对错误信息的分析，攻击者可以获取用户名及其相关信息，可能导致特定用户账户的针对性攻击
  ▶ 修复建议：避免泄露用户敏感信息，返回通用错误信息。

■ 漏洞类型：不当输入验证（中危）
  ▶ 位置：L69-L73
  ▶ 代码特征：
    if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser)) { ... }
    if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser)) { ... }
  ▶ 攻击向量：未对user对象中的phonenumber和email进行充分的格式验证，攻破时可通过不合规的输入造成应用错误或异常
  ▶ 修复建议：对手机号码和邮箱格式进行验证，确保其符合规定格式。

■ 漏洞类型：可能的SQL注入（中危）
  ▶ 位置：L77
  ▶ 代码特征：
    if (userService.updateUserProfile(currentUser) > 0)
  ▶ 攻击向量：当前代码执行的数据库操作需验证是否对输入用户信息进行了适当的转义与处理，可能遭受SQL注入攻击
  ▶ 修复建议：确保userService的相关方法内部实现时使用了参数化查询或适当的ORM框架和输入验证。

■ 漏洞类型：缺乏密码复杂性验证（高危）
  ▶ 位置：L102-L104
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password)) { ... }
    if (SecurityUtils.matchesPassword(newPassword, password)) { ... }
  ▶ 攻击向量：新密码未与复杂性规则进行验证，可能容易导致密码被轻易破解
  ▶ 修复建议：增加密码强度和复杂性检查，确保新密码符合要求。
</审计报告>
2025-02-01T14:43:58.849941+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：明文存储敏感信息（中危）
  ▶ 位置：L106
  ▶ 代码特征：
    newPassword = SecurityUtils.encryptPassword(newPassword);
  ▶ 攻击向量：如果加密算法不够强大，可能导致新生成的密码易被破解
  ▶ 修复建议：使用强加密算法并确保加密过程中无易被推导的信息泄漏

■ 漏洞类型：未对输入进行有效验证（中危）
  ▶ 位置：L98-L106
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))...
  ▶ 攻击向量：未对oldPassword和newPassword的格式进行验证，攻击者可传入恶意数据（如长字符串等）
  ▶ 修复建议：在密码匹配之前进行格式和长度验证
</审计报告>
2025-02-01T14:43:58.849941+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：文件上传未验证（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：通过上传恶意文件（例如webshell）获取系统控制权
  ▶ 修复建议：对上传文件进行类型和内容的严格验证，确保只允许特定格式文件的上传

■ 漏洞类型：密码明文检查（中危）
  ▶ 位置：L98-L102
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
  ▶ 攻击向量：如果旧密码和新密码的检查不够安全，可能引发密码猜测攻击
  ▶ 修复建议：使用适当的加盐和散列算法加密存储用户密码，并使用时间延迟机制防止暴力破解
</审计报告>
2025-02-01T14:43:58.852443+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L35
  ▶ 代码特征：
    String msg = registerService.register(user);
  ▶ 攻击向量：攻击者可构造恶意RegisterBody数据，注入不合法数据以影响注册逻辑
  ▶ 潜在影响：不当数据可能导致系统错误、用户信息被篡改或拒绝服务
  ▶ 修复建议：在register方法中对user对象的字段进行严格验证

■ 漏洞类型：缺乏安全配置检查（中危）
  ▶ 位置：L31
  ▶ 代码特征：
    if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))
  ▶ 攻击向量：若配置未妥善设置，攻击者可通过查找此配置判断注册功能是否可用
  ▶ 潜在影响：系统的安全配置不足可能导致恶意用户尝试注册
  ▶ 修复建议：加入更多的安全机制来保护配置值，防止泄露
</审计报告>
2025-02-01T14:43:58.852443+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L35
  ▶ 代码特征：
    String msg = registerService.register(user);
  ▶ 攻击向量：如果registerService的register方法返回敏感信息（例如，系统内部错误信息），则在调用error(msg)时可能泄露这些信息给最终用户。
  ▶ 修复建议：使用友好的错误消息，避免直接返回系统错误信息。

■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L35-L36
  ▶ 代码特征：
    String msg = registerService.register(user);
    return StringUtils.isEmpty(msg) ? success() : error(msg);
  ▶ 攻击向量：如果register方法没有适当的权限检查，恶意用户可能调用此接口进行未授权的用户注册。
  ▶ 修复建议：在register方法中添加权限验证，确保只有授权用户可以调用。

</审计报告>
2025-02-01T14:43:58.852443+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无
  ▶ 位置：L36
  ▶ 代码特征：
    return StringUtils.isEmpty(msg) ? success() : error(msg);
  ▶ 说明：当前代码逻辑正常，无明显安全漏洞风险。

<审计通过>
</审计报告>
2025-02-01T14:43:58.852443+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L63
  ▶ 代码特征：
    List<SysRole> list = roleService.selectRoleList(role);
  ▶ 攻击向量：如果role对象的属性未进行严格验证，攻击者可构造恶意role输入，例如role.setName("admin' OR '1'='1");从而绕过角色查询逻辑，造成SQL注入。
  ▶ 修复建议：在调用roleService前，对role对象的所有输入参数进行严格的验证和清理。

</审计报告>
2025-02-01T14:44:04.801393+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：缺乏输入验证（高危）
  ▶ 位置：L72
  ▶ 代码特征：
    List<SysRole> list = roleService.selectRoleList(role);
  ▶ 攻击向量：当role参数未经过适当验证时，可能导致不当的数据访问或信息泄露
  ▶ 修复建议：对role参数进行有效性检查及去除不必要的数据字段

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L74
  ▶ 代码特征：
    util.exportExcel(response, list, "角色数据");
  ▶ 攻击向量：未检查list内容的完整性和隐私性，可能意外导出敏感数据
  ▶ 修复建议：确认导出数据的权限并进行敏感信息筛选
</审计报告>
2025-02-01T14:44:04.801393+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：无效信任（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果deptService.selectDeptTreeList的实现未对输入进行验证，攻击者可能注入恶意数据并影响部门树的生成。
  ▶ 修复建议：在deptService和selectDeptTreeList中增加输入验证。

■ 漏洞类型：用户信息泄露（中危）
  ▶ 位置：L135
  ▶ 代码特征：
    loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));
  ▶ 攻击向量：若未明确控制用户输入（如用户名）格式，攻击者可能利用此漏洞进行账号枚举或暴力破解。
  ▶ 修复建议：增强用户输入验证，限制响应的信息范围。
</审计报告>
2025-02-01T14:44:04.802423+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L136
  ▶ 代码特征：
    loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));
  ▶ 攻击向量：如果loginUser.getUser()泄露有效用户ID，攻击者可通过MenuPermission接口获得该用户的权限信息。
  ▶ 修复建议：确保权限获取方法经过适当的访问控制。

■ 漏洞类型：未经验证的输入（低危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：SysDept类的属性在传递前未进行验证，可能导致不安全的数据透传给前端或系统。
  ▶ 修复建议：在调用selectDeptTreeList方法前，验证SysDept对象的属性值是否合法。
</审计报告>
2025-02-01T14:44:04.802423+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：未验证的用户输入（高危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果SysDept对象允许外部输入且未进行适当验证，攻击者可以构造恶意部门数据以影响返回的部门树结构。
  ▶ 修复建议：严格验证SysDept的输入数据并进行必要的过滤。

■ 漏洞类型：缺乏敏感信息保护（信息）
  ▶ 位置：L137
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：如果loginUser未经过适当的验证和清理，可能会允许未授权用户设置登录信息，从而导致身份伪装。
  ▶ 修复建议：确保loginUser经过身份验证，并仅在适当的时候由可信来源设置。

</审计报告>
2025-02-01T14:44:04.804598+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的直接对象引用（高危）
  ▶ 位置：L258
  ▶ 代码特征：
    ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));
  ▶ 攻击向量：如果roleId来源于未验证的用户输入，攻击者可以构造roleId为一个不属于其权限的值，例如roleId=99999，可能导致信息泄露。
  ▶ 修复建议：在调用selectDeptListByRoleId之前，验证用户是否有权限访问该roleId。

■ 漏洞类型：未验证的直接对象引用（高危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：SysDept构造参数为默认值，可能导致所有部门信息被返回，攻击者可利用此信息执行进一步的攻击。
  ▶ 修复建议：在调用selectDeptTreeList之前，对传入的SysDept对象进行必要的验证，并确保用户有权限访问部门信息。
</审计报告>
2025-02-01T14:44:04.804598+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：缺少输入验证（中危）
  ▶ 位置：L64
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：未验证的用户输入可能允许恶意用户通过构造特定的SysUser对象发起SQL注入或影响数据返回
  ▶ 修复建议：在调用userService的selectUserList方法之前，添加对于user对象属性的输入验证

■ 漏洞类型：缺少权限控制（中危）
  ▶ 位置：L61
  ▶ 代码特征：
    public TableDataInfo list(SysUser user)
  ▶ 攻击向量：未进行权限检查，攻击者可能伪造请求以获取其他用户的列表
  ▶ 修复建议：在方法实现中加入权限验证逻辑，确保调用者有权访问用户列表
</审计报告>
2025-02-01T14:44:04.804598+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：代码注入（中危）
  ▶ 位置：L71-L73
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：如果user对象的某个字段未经过滤，可以通过构造特定的SysUser对象进行注入攻击
  ▶ 修复建议：对user对象进行严格的输入验证和净化

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L73-L75
  ▶ 代码特征：
    util.exportExcel(response, list, "用户数据");
  ▶ 攻击向量：如果导出的数据包含敏感信息，如用户密码或个人信息，恶意用户可利用导出功能获取这些信息
  ▶ 修复建议：限制导出数据中包含字段的范围，确保不泄露敏感信息

</审计报告>
2025-02-01T14:44:04.805524+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L113-L114
  ▶ 代码特征：
    List<SysRole> roles = roleService.selectRoleAll();
  ▶ 攻击向量：如果未进行用户权限校验，恶意用户可调用此接口获取所有角色信息
  ▶ 修复建议：在调用selectRoleAll()前增加用户角色权限校验，确保只有合适权限的用户能够获取角色信息
</审计报告>
2025-02-01T14:44:04.805524+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏权限验证（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    deptService.checkDeptDataScope(user.getDeptId());
  ▶ 攻击向量：攻击者可以通过构造请求，使用非授权用户的deptId，绕过权限检查，访问敏感数据
  ▶ 修复建议：增强权限验证逻辑，确保用户有权访问指定部门的数据

■ 漏洞类型：无输入验证（中危）
  ▶ 位置：L254
  ▶ 代码特征：
    return success(deptService.selectDeptTreeList(dept));
  ▶ 攻击向量：如果dept参数来自用户输入，未经过滤，可能导致SQL注入或其他未授权的数据访问
  ▶ 修复建议：对dept参数进行严密的输入验证，使用参数化查询或输入白名单
</审计报告>
2025-02-01T14:44:04.806592+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无漏洞
  ▶ 位置：L109-L111
  ▶ 代码特征：
    return R.fail("用户不存在");
  
■ 漏洞类型：无漏洞
  ▶ 位置：L43-L46
  ▶ 代码特征：
    return R.ok(userList);
  
<审计通过>
2025-02-01T14:44:10.566837+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L60
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：攻击者可以通过多次请求获得失败信息，推测用户系统的有效性
  ▶ 修复建议：返回通用错误信息而不是具体用户信息

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L111
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：攻击者可以通过多次请求获得失败信息，推测用户系统的有效性
  ▶ 修复建议：返回通用错误信息而不是具体用户信息
</审计报告>
2025-02-01T14:44:10.566837+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：输入验证缺失（中危）
  ▶ 位置：L181
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未对mobile进行验证和清洗，可接受恶意输入（如含有代码注入的字符串）
  ▶ 潜在影响：可能导致意外行为或后续处理阶段的漏洞，攻击者可以通过设置非法手机格式数据，以干扰系统正常行为
  ▶ 修复建议：在设置mobile之前，进行格式验证和清理，确保输入符合预期的标准

■ 漏洞类型：输入验证缺失（中危）
  ▶ 位置：L141
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：与上相同，可能导致mobile被设为恶意字符串
  ▶ 潜在影响：系统在使用mobile数据时可能面临安全风险，如信息泄露或逻辑错误
  ▶ 修复建议：在构造函数中对mobile参数进行相应的验证和过滤
</审计报告>
2025-02-01T14:44:10.566837+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：无输入验证（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：若mobile的输入未经过验证，可能被恶意用户构造为特殊字符串，尝试利用其进行代码注入或其他攻击
  ▶ 修复建议：在设置mobile前增加输入验证，确保格式正确且不含恶意字符

■ 漏洞类型：无输入验证（中危）
  ▶ 位置：L144-L146
  ▶ 代码特征：
    return userId;
  ▶ 攻击向量：若userId未经过验证，可能导致信息泄露或攻击者能够获取到敏感信息
  ▶ 修复建议：在返回userId前添加安全检查，确保调用者具有获取该信息的权限
</审计报告>
2025-02-01T14:44:10.566837+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：不安全的数据验证（中危）
  ▶ 位置：L180-L182, L149-L152
  ▶ 代码特征：
    ```
    {
        this.mobile = mobile;
    }
    ```
    ```
    public void setUserId(Integer userId)
    {
        this.userId = userId;
    }
    ```
  ▶ 攻击向量：未对输入的mobile和userId做充分验证，可能被恶意用户构造不合法手机号或用户ID。
  ▶ 潜在影响：可导致不正确的用户数据存储，降低系统安全性。
  ▶ 修复建议：在设置mobile和userId之前，添加输入验证逻辑，确保数据的合法性。
</审计报告>
2025-02-01T14:44:10.568840+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：无输入验证（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未验证mobile格式，攻击者可设置为不合法手机号如'mobile=<script>alert(1)</script>'导致XSS
  ▶ 修复建议：在setMobile方法中增加对手机格式的验证

■ 漏洞类型：无输入验证（中危）
  ▶ 位置：L154-L156
  ▶ 代码特征：
    return username;
  ▶ 攻击向量：未验证username的来源和内容，可能导致信息泄露
  ▶ 修复建议：增加对username的合法性检查，避免返回敏感信息
</审计报告>
2025-02-01T14:44:10.568840+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：数据验证缺失（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：不对用户输入的手机号码进行格式校验，可能导致无效或恶意号码的存储
  ▶ 修复建议：在setMobile方法中增加手机号码的格式校验逻辑

■ 漏洞类型：数据验证缺失（中危）
  ▶ 位置：L159-L162
  ▶ 代码特征：
    this.username = username;
  ▶ 攻击向量：不对用户输入的用户名进行校验，可能导致注入攻击或非法字符的存储
  ▶ 修复建议：在setUsername方法中增加用户名的有效性检查
</审计报告>
2025-02-01T14:44:10.568840+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L164-L166
  ▶ 代码特征：
    return password;
  ▶ 攻击向量：攻击者可以通过调用getPassword方法获取用户密码，导致敏感信息泄露
  ▶ 修复建议：避免直接暴露敏感信息，可以返回一个密码摘要或不提供密码的getter方法

■ 漏洞类型：缺乏输入验证（低危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未验证mobile的格式，可能导致不合规的手机号存储（如非法字符）
  ▶ 修复建议：在setMobile方法中添加手机号格式验证
</审计报告>
2025-02-01T14:44:10.568840+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：弱密码存储（中危）
  ▶ 位置：L169-L172
  ▶ 代码特征：
    this.password = password;
  ▶ 攻击向量：用户可以设置简单或默认密码，例如"123456"，导致账户易被破解。
  ▶ 修复建议：使用强密码策略并加密存储密码

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L181-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：如果 mobile 没有进行格式检查，用户可以输入无效或恶意的内容，例如"abc123"。
  ▶ 修复建议：在设置手机号码前验证输入格式，例如使用正则表达式确认输入值为有效的手机号格式。
</审计报告>
2025-02-01T14:44:10.568840+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L176-L177
  ▶ 代码特征：
    return mobile;
  ▶ 攻击向量：如果mobile未经过适当的验证和过滤，攻击者可通过调用getMobile获取用户敏感信息
  ▶ 修复建议：在返回mobile之前，添加必要的访问控制和数据脱敏处理

<审计通过>
2025-02-01T14:44:10.568840+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L181
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未对mobile进行格式验证，可能接受恶意输入，例如将手机号设为非数字字符串。
  ▶ 潜在影响：攻击者可以利用该漏洞注入不合法的手机号数据，从而造成数据不一致或业务逻辑错误。
  ▶ 修复建议：在setMobile方法中增加手机号格式的验证逻辑。
</审计报告>
2025-02-01T14:44:14.947430+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L35
  ▶ 代码特征：
    @Autowired
    private RuoYiConfig ruoyiConfig;
  ▶ 攻击向量：如果RuoYiConfig中包含敏感信息，如数据库凭证或API密钥，并且Swagger文档未加以保护，攻击者能够通过Swagger UI获取这些信息。
  ▶ 修复建议：确保Swagger接口文档的访问控制措施到位，或审查RuoYiConfig中存储的信息，防止敏感数据的外部暴露。

<审计通过>
2025-02-01T14:44:14.948415+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L120
  ▶ 代码特征：
    .contact(new Contact(ruoyiConfig.getName(), null, null))
  ▶ 攻击向量：攻击者可以通过访问API文档获取到作者信息，可能导致身份信息被泄露
  ▶ 修复建议：隐藏联系信息或提供更安全的API文档访问方式

■ 漏洞类型：API版本信息泄露（低危）
  ▶ 位置：L122
  ▶ 代码特征：
    .version("版本号:" + ruoyiConfig.getVersion())
  ▶ 攻击向量：攻击者可以通过访问API文档得知系统的具体版本，分析已知的漏洞
  ▶ 修复建议：避免在公开的API文档中展示具体版本信息
</审计报告>
2025-02-01T14:44:14.948415+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L63
  ▶ 代码特征：
    .paths(PathSelectors.any())
  ▶ 攻击向量：暴露所有API路径，攻击者可通过Swagger UI获取详细接口信息，可能导致敏感接口被滥用
  ▶ 修复建议：限制暴露的路径，例如使用特定的路径选择器

■ 漏洞类型：缺乏安全控制（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    .securityContexts(securityContexts())
  ▶ 攻击向量：若securityContexts()方法未实施严格的安全性能，可能导致未授权访问Swagger文档的风险
  ▶ 修复建议：确保securityContexts()方法实现了有效的安全验证和授权机制
</审计报告>
2025-02-01T14:44:14.948415+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L59
  ▶ 代码特征：
    .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))
  ▶ 攻击向量：未对输入的API进行权限控制，攻击者可能通过Swagger UI查看敏感API及其实现。
  ▶ 修复建议：添加权限控制，只允许特定用户访问Swagger文档。

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L67
  ▶ 代码特征：
    .securityContexts(securityContexts())
  ▶ 攻击向量：若securityContexts方法错误配置，可能导致Swagger接口可以在无鉴权情况下访问。
  ▶ 修复建议：确保securityContexts返回的配置妥善限制访问，仅允许经过授权的用户。

■ 漏洞类型：路径选择器过于宽泛（低危）
  ▶ 位置：L63
  ▶ 代码特征：
    .paths(PathSelectors.any())
  ▶ 攻击向量：该配置可能导致所有请求路径都暴露在Swagger中，增加了被攻击的可能性。
  ▶ 修复建议：限制暴露的API路径，仅开放必要的接口。
</审计报告>
2025-02-01T14:44:14.948415+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L53-L67
  ▶ 代码特征：
    .enable(enabled)
    .securitySchemes(securitySchemes())
    .securityContexts(securityContexts())
  ▶ 攻击向量：如果安全模式未设置正确，可能导致未授权的用户访问敏感接口
  ▶ 修复建议：确保安全模式已正确配置，并对访问接口进行权限验证

<审计通过>
2025-02-01T14:44:14.953412+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L51-L68
  ▶ 代码特征：
    .securityContexts(securityContexts())
  ▶ 攻击向量：如果securityContexts()方法未充分限制访问权限，可能导致敏感API信息被未授权用户访问
  ▶ 修复建议：确保securityContexts()方法中配置的安全上下文能够有效限制对Swagger API的访问，增加身份验证和权限检查。

■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L67-L68
  ▶ 代码特征：
    .pathMapping(pathMapping);
  ▶ 攻击向量：路径映射没有进行必要的权限检测，攻击者能够通过Swagger文档访问敏感接口
  ▶ 修复建议：在Swagger配置中增加认证机制，限制未授权用户对接口的访问。 
</审计报告>
2025-02-01T14:44:14.953412+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：缺少安全性验证（信息）
  ▶ 位置：L89
  ▶ 代码特征：
    .securityReferences(defaultAuth())
  ▶ 攻击向量：defaultAuth方法未经过适当的安全验证，可能导致未授权访问API文档
  ▶ 修复建议：在defaultAuth()中确保加入认证及授权逻辑
</审计报告>
2025-02-01T14:44:14.953412+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：硬编码凭证（信息）
  ▶ 位置：L100
  ▶ 代码特征：
    AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");
  ▶ 修复建议：使用配置文件或环境变量来管理授权范围，避免硬编码敏感信息。
  
■ 漏洞类型：不当授权配置（中危）
  ▶ 位置：L100
  ▶ 代码特征：
    AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");
  ▶ 攻击向量：攻击者可能利用不当的授权范围进行未授权访问
  ▶ 修复建议：限制授权范围，确保仅授权必要的权限。
</审计报告>
2025-02-01T14:44:14.954408+0800 | INFO | Agent_2计算完毕，输出文件:./output/ccbd72ea49cd2e4f9a756a65bfba1dd6_审计结果.log
2025-02-01T14:45:45.247586+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:45:45.249580+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:45:45.249580+0800 | INFO | 当前命令行模式:True
2025-02-01T14:45:45.250576+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:45:45.250576+0800 | INFO | 当前输出文件:./output
2025-02-01T14:45:45.256235+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:45:45.256235+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:45:45.256235+0800 | INFO | 文件存在，直接跳过
2025-02-01T14:45:45.256235+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:45:45.264864+0800 | INFO | 当前batch_size:10
2025-02-01T14:45:45.264864+0800 | INFO | 数据大小:138
2025-02-01T14:45:45.264864+0800 | DEBUG | ['<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi\n        当前代码源码: 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>\n        源码摘要描述:ruoyi-admin项目依赖于父级项目ruoyi\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-devtools\n        当前代码源码:21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于spring-boot-devtools库\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:springfox-boot-starter\n        当前代码源码:28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger3库springfox-boot-starter\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:swagger-models\n        当前代码源码:34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger-models库，版本为1.6.2\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:mysql-connector-java\n        当前代码源码:41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于Mysql驱动包\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-framework\n        当前代码源码:48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于核心模块ruoyi-framework\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-quartz\n        当前代码源码:54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于定时任务模块ruoyi-quartz\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-generator\n        当前代码源码:60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于代码生成模块ruoyi-generator\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-maven-plugin\n        当前代码源码:68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n73:                     <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->\n74:                 </configuration>\n75:                 <executions>\n76:                     <execution>\n77:                         <goals>\n78:                             <goal>repackage</goal>\n79:                         </goals>\n80:                     </execution>\n81:                 </executions>\n82:             </plugin>\n        源码摘要描述:ruoyi-admin项目使用spring-boot-maven-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.path\n        当前代码源码: 4: \t<property name="log.path" value="/home/ruoyi/logs" />\n        源码摘要描述:定义日志存放路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_error\n        当前代码源码:38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>\n        源码摘要描述:定义系统错误日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:com.ruoyi\n        当前代码源码:75: \t<logger name="com.ruoyi" level="info" />\n        源码摘要描述:控制com.ruoyi模块的日志级别为info\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:org.springframework\n        当前代码源码:77: \t<logger name="org.springframework" level="warn" />\n        源码摘要描述:控制org.springframework模块的日志级别为warn\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:configuration\n        被调用代码单元名称:settings\n        当前代码源码: 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:configuration提供全局参数设置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:SpringApplication\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用SpringApplication.run方法以启动应用程序\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ISysConfigService\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法调用configService的selectCaptchaEnabled方法来获取验证码是否启用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Producer\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法根据验证码类型调用captchaProducer或captchaProducerMath生成验证码文本和图像\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:RedisCache\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将验证码存储到redis中，通过调用redisCache的setCacheObject方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController中的fileDownload方法验证文件下载合法性并下载指定文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:StringUtils\n        当前代码源码: 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n        源码摘要描述:CommonController中的fileDownload方法处理非法文件名称的异常抛出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n        源码摘要描述:CommonController中的fileDownload方法获取下载路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUploadUtils\n        当前代码源码: 83:             String fileName = FileUploadUtils.upload(filePath, file);\n        源码摘要描述:CommonController中的uploadFile方法处理文件上传并返回新文件名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:serverConfig\n        当前代码源码: 84:             String url = serverConfig.getUrl() + fileName;\n        源码摘要描述:CommonController中的uploadFile方法组合存储文件url\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController中的uploadFile方法创建成功响应\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:113:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n114:     @DeleteMapping("/clearCacheAll")\n115:     public AjaxResult clearCacheAll()\n116:     {\n117:         Collection<String> cacheKeys = redisTemplate.keys("*");\n118:         redisTemplate.delete(cacheKeys);\n119:         return AjaxResult.success();\n120:     }\n        源码摘要描述:CacheController类的clearCacheAll方法清除所有缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 48:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 49:     @GetMapping()\n 50:     public AjaxResult getInfo() throws Exception\n 51:     {\n 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n 55: \n 56:         Map<String, Object> result = new HashMap<>(3);\n 57:         result.put("info", info);\n 58:         result.put("dbSize", dbSize);\n 59: \n 60:         List<Map<String, String>> pieList = new ArrayList<>();\n 61:         commandStats.stringPropertyNames().forEach(key -> {\n 62:             Map<String, String> data = new HashMap<>(2);\n 63:             String property = commandStats.getProperty(key);\n 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n 66:             pieList.add(data);\n 67:         });\n 68:         result.put("commandStats", pieList);\n 69:         return AjaxResult.success(result);\n 70:     }\n        源码摘要描述:CacheController类的getInfo方法返回缓存相关信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.info\n        当前代码源码: 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n        源码摘要描述:redisTemplate调用connection的info方法获取Redis信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.dbSize\n        当前代码源码: 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n        源码摘要描述:redisTemplate调用connection的dbSize方法获取数据库大小\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:keys\n        当前代码源码: 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n        源码摘要描述:redisTemplate调用keys方法获取匹配特定模式的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:opsForValue\n        当前代码源码: 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);\n        源码摘要描述:redisTemplate调用opsForValue方法获取Value相关操作接口\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:101:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除指定的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:removeStart\n        当前代码源码: 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n        源码摘要描述:StringUtils的removeStart方法去除字符串开头的特定前缀\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类的getInfo方法调用AjaxResult的success方法返回服务器信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ISysLogininforService\n        当前代码源码:40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);\n        源码摘要描述:SysLogininforController类通过logininforService调用selectLogininforList方法获取登录信息列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");\n        源码摘要描述:SysLogininforController类通过ExcelUtil导出登录日志到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);\n        源码摘要描述:SysOperlogController类调用operLogService的selectOperLogList方法以获取操作日志列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:46:     public void export(HttpServletResponse response, SysOperLog operLog)\n47:     {\n48:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n49:         ExcelUtil<SysOperLog> util = new ExcelUtil<SysOperLog>(SysOperLog.class);\n50:         util.exportExcel(response, list, "操作日志");\n        源码摘要描述:SysOperlogController类调用ExcelUtil的exportExcel方法将操作日志导出为Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的keys方法获取匹配的登录TOKEN键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:userOnlineService\n        当前代码源码:52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n        源码摘要描述:SysUserOnlineController类调用userOnlineService的selectOnlineByInfo方法获取在线用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:getDataTable\n        当前代码源码:69:         return getDataTable(userOnlineList);\n        源码摘要描述:SysUserOnlineController类调用getDataTable方法返回用户列表的表格数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码: 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);\n        源码摘要描述:SysConfigController类获取参数配置列表通过configService调用selectConfigList函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysConfig config)\n 53:     {\n 54:         List<SysConfig> list = configService.selectConfigList(config);\n 55:         ExcelUtil<SysConfig> util = new ExcelUtil<SysConfig>(SysConfig.class);\n 56:         util.exportExcel(response, list, "参数数据");\n        源码摘要描述:SysConfigController类导出参数数据通过ExcelUtil调用exportExcel函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:119:     public AjaxResult remove(@PathVariable Long deptId)\n120:     {\n121:         if (deptService.hasChildByDeptId(deptId))\n122:         {\n123:             return warn("存在下级部门,不允许删除");\n124:         }\n125:         if (deptService.checkDeptExistUser(deptId))\n126:         {\n127:             return warn("部门存在用户,不允许删除");\n128:         }\n129:         deptService.checkDeptDataScope(deptId);\n130:         return toAjax(deptService.deleteDeptById(deptId));\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现删除部门功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码: 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n 45:         return success(depts);\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现获取部门列表功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n        源码摘要描述:SysDictDataController类调用dictDataService服务获取字典数据列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n        源码摘要描述:SysDictDataController类调用ExcelUtil导出字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n        源码摘要描述:SysDictDataController类调用dictTypeService获取指定类型的字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 25: /**\n 26:  * 数据字典信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dict/type")\n 32: public class SysDictTypeController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n 36: \n 37:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n 45: \n 46:     @Log(title = "字典类型", businessType = BusinessType.EXPORT)\n 47:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");\n 54:     }\n 55: \n 56:     /**\n 57:      * 查询字典类型详细\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n 65: \n 66:     /**\n 67:      * 新增字典类型\n 68:      */\n 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n 81: \n 82:     /**\n 83:      * 修改字典类型\n 84:      */\n 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 删除字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n108:     }\n109: \n110:     /**\n111:      * 刷新字典缓存\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 获取字典选择框列表\n124:      */\n125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n131: }\n        源码摘要描述:SysDictTypeController类通过dictTypeService引用字典类型相关服务\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeList\n        当前代码源码: 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n        源码摘要描述:SysDictTypeController类调用dictTypeService查询字典类型列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeById\n        当前代码源码: 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService查询特定字典类型的详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:checkDictTypeUnique\n        当前代码源码: 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n        源码摘要描述:SysDictTypeController类在新增操作中调用dictTypeService检查字典类型唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:insertDictType\n        当前代码源码: 79:         return toAjax(dictTypeService.insertDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService新增字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:updateDictType\n        当前代码源码: 95:         return toAjax(dictTypeService.updateDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService更新字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:deleteDictTypeByIds\n        当前代码源码:106:         dictTypeService.deleteDictTypeByIds(dictIds);\n        源码摘要描述:SysDictTypeController类通过dictTypeService删除字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:resetDictCache\n        当前代码源码:118:         dictTypeService.resetDictCache();\n        源码摘要描述:SysDictTypeController类调用dictTypeService刷新字典缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:StringUtils\n        当前代码源码:25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类访问index方法，使用StringUtils格式化字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysLoginService\n        当前代码源码:48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;\n        源码摘要描述:SysLoginController的login方法通过调用loginService的login方法进行用户登录验证\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SecurityUtils\n        当前代码源码:64:     @GetMapping("getInfo")\n65:     public AjaxResult getInfo()\n66:     {\n67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n68:         SysUser user = loginUser.getUser();\n        源码摘要描述:SysLoginController的getInfo方法通过调用SecurityUtils获取当前登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysPermissionService\n        当前代码源码:70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);\n        源码摘要描述:SysLoginController的getInfo方法调用permissionService获取用户角色和权限集合\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:TokenService\n        当前代码源码:76:             tokenService.refreshToken(loginUser);\n        源码摘要描述:SysLoginController的getInfo方法调用tokenService刷新令牌\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码:140:         return toAjax(menuService.deleteMenuById(menuId));\n        源码摘要描述:SysMenuController类通过menuService调用deleteMenuById删除菜单\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码: 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);\n        源码摘要描述:SysMenuController类通过menuService调用selectMenuList方法获取菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }\n        源码摘要描述:SysNoticeController类通过noticeService调用deleteNoticeByIds方法删除通知公告\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);\n        源码摘要描述:SysNoticeController类通过noticeService调用selectNoticeList方法获取通知公告列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService\n        当前代码源码: 35:     private ISysPostService postService;\n        源码摘要描述:SysPostController类中postService属性用于调用ISysPostService接口的方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:startPage\n        当前代码源码: 44:         startPage();\n        源码摘要描述:SysPostController类中的list方法调用startPage用于分页处理\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostList\n        当前代码源码: 45:         List<SysPost> list = postService.selectPostList(post);\n        源码摘要描述:SysPostController类中的list方法调用postService的selectPostList获取岗位列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:getDataTable\n        当前代码源码: 46:         return getDataTable(list);\n        源码摘要描述:SysPostController类中的list方法调用getDataTable将列表数据封装成TableDataInfo\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:new ExcelUtil\n        当前代码源码: 55:         ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);\n        源码摘要描述:SysPostController类中的export方法创建ExcelUtil对象以处理Excel导出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostById\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用postService的selectPostById获取岗位详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用success返回获取岗位信息的成功结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostNameUnique\n        当前代码源码: 77:         if (!postService.checkPostNameUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostNameUnique检查岗位名称唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:error\n        当前代码源码: 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的add方法调用error返回岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostCodeUnique\n        当前代码源码: 81:         else if (!postService.checkPostCodeUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostCodeUnique检查岗位编码唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setCreateBy\n        当前代码源码: 85:         post.setCreateBy(getUsername());\n        源码摘要描述:SysPostController类中的add方法设置岗位创建者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.insertPost\n        当前代码源码: 86:         return toAjax(postService.insertPost(post));\n        源码摘要描述:SysPostController类中的add方法调用postService的insertPost插入新岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:Error\n        当前代码源码: 99:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的edit方法调用error返回修改岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setUpdateBy\n        当前代码源码:105:         post.setUpdateBy(getUsername());\n        源码摘要描述:SysPostController类中的edit方法设置岗位更新者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.updatePost\n        当前代码源码:106:         return toAjax(postService.updatePost(post));\n        源码摘要描述:SysPostController类中的edit方法调用postService的updatePost更新岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.deletePostByIds\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用postService的deletePostByIds删除岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:toAjax\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用toAjax返回删除结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostAll\n        当前代码源码:126:         List<SysPost> posts = postService.selectPostAll();\n        源码摘要描述:SysPostController类中的optionselect方法调用postService的selectPostAll获取所有岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类提供个人信息的获取和更新功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:FileUploadUtils\n        被调用代码单元名称:String\n        当前代码源码:127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n        源码摘要描述:用于处理用户头像的上传\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:configService\n        当前代码源码:28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用configService的selectConfigByKey方法检查注册功能是否开启\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用registerService的register方法进行用户注册\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:roleService\n        当前代码源码: 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);\n        源码摘要描述:SysRoleController类通过roleService调用selectRoleList方法获取角色列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");\n        源码摘要描述:SysRoleController类通过ExcelUtil导出角色数据到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:userService\n        当前代码源码:135:                 loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));\n        源码摘要描述:SysRoleController类通过userService调用selectUserByUserName方法获取用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:permissionService\n        当前代码源码:136:                 loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));\n        源码摘要描述:SysRoleController类通过permissionService获取用户权限\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:tokenService\n        当前代码源码:137:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysRoleController类通过tokenService设置登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptListByRoleId方法获取部门列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:userService\n        当前代码源码: 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n 66:     }\n        源码摘要描述:SysUserController类中的list方法获取用户列表，调用userService的selectUserList方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");\n        源码摘要描述:SysUserController类中的export方法导出用户列表到Excel，调用ExcelUtil的exportExcel方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:roleService\n        当前代码源码:113:         List<SysRole> roles = roleService.selectRoleAll();\n114:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));\n        源码摘要描述:SysUserController类中的getInfo方法获取用户角色信息，调用roleService的selectRoleAll方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:127:         deptService.checkDeptDataScope(user.getDeptId());\n        源码摘要描述:SysUserController类中的add方法检查部门数据权限，调用deptService的checkDeptDataScope方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.ok\n        当前代码源码: 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);\n        源码摘要描述:TestController类的userList方法获取用户列表并返回R对象\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码: 58:         else\n 59:         {\n 60:             return R.fail("用户不存在");\n 61:         }\n        源码摘要描述:TestController类的getUser方法在用户不存在时返回失败信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:StringUtils.isNull\n        当前代码源码:136:     public UserEntity(Integer userId, String username, String password, String mobile)\n137:     {\n138:         this.userId = userId;\n139:         this.username = username;\n140:         this.password = password;\n141:         this.mobile = mobile;\n        源码摘要描述:UserEntity类构造方法用于初始化用户对象的各个属性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:Integer getUserId\n        当前代码源码:144:     public Integer getUserId()\n145:     {\n146:         return userId;\n        源码摘要描述:UserEntity类的getUserId方法获取用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUserId\n        当前代码源码:149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }\n        源码摘要描述:UserEntity类的setUserId方法设置用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getUsername\n        当前代码源码:154:     public String getUsername()\n155:     {\n156:         return username;\n        源码摘要描述:UserEntity类的getUsername方法获取用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUsername\n        当前代码源码:159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }\n        源码摘要描述:UserEntity类的setUsername方法设置用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getPassword\n        当前代码源码:164:     public String getPassword()\n165:     {\n166:         return password;\n        源码摘要描述:UserEntity类的getPassword方法获取用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setPassword\n        当前代码源码:169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }\n        源码摘要描述:UserEntity类的setPassword方法设置用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getMobile\n        当前代码源码:175:     {\n176:         return mobile;\n177:     }\n        源码摘要描述:UserEntity类的getMobile方法获取用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 31: public class SwaggerConfig\n 32: {\n 33:     /** 系统基础配置 */\n 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SwaggerConfig类用于配置Swagger2的接口文档，依赖RuoYiConfig作为系统基础配置\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:RequestHandlerSelectors\n        当前代码源码: 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n        源码摘要描述:Docket对象使用RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)获取带有@ApiOperation注解的方法\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:PathSelectors\n        当前代码源码: 63:                 .paths(PathSelectors.any())\n        源码摘要描述:Docket对象调用PathSelectors.any()来设置请求路径的选择器\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securitySchemes\n        当前代码源码: 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securitySchemes()方法配置安全模式的Scheme\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_1>']
2025-02-01T14:45:52.525947+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：老旧依赖（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin为已知的存在安全漏洞的版本，可能被攻击者利用。
  ▶ 修复建议：升级maven-war-plugin至最新版本以修复已知漏洞。

<审计通过>
2025-02-01T14:45:52.526944+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：依赖版本风险（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version> 
  ▶ 攻击向量：使用旧版本的maven-war-plugin可能存在已知漏洞
  ▶ 修复建议：检查并升级到最新版本以避免潜在的安全漏洞

■ 漏洞类型：依赖风险（信息）
  ▶ 位置：L23
  ▶ 代码特征：
    <artifactId>spring-boot-devtools</artifactId>
  ▶ 攻击向量：spring-boot-devtools在生产环境中使用可能会导致安全风险
  ▶ 修复建议：在生产环境中移除该依赖
</审计报告>
2025-02-01T14:45:52.526944+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：版本漏洞（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin的3.1.0版本存在已知漏洞，可能被攻击利用
  ▶ 修复建议：升级至maven-war-plugin的最新稳定版本

■ 漏洞类型：使用不安全的依赖（中危）
  ▶ 位置：L30
  ▶ 代码特征：
    <artifactId>springfox-boot-starter</artifactId>
  ▶ 攻击向量：此依赖可能包含已知安全漏洞，使用该版本可能导致应用程序被攻击
  ▶ 修复建议：审查并使用springfox最新的安全版本
</审计报告>
2025-02-01T14:45:52.526944+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：已知漏洞依赖（中危）
  ▶ 位置：L36-L37
  ▶ 代码特征：
    <artifactId>swagger-models</artifactId>
    <version>1.6.2</version>
  ▶ 攻击向量：使用已知漏洞的swagger-models库，攻击者可能利用该库中的漏洞进行信息泄露或其他攻击。
  ▶ 修复建议：升级swagger-models版本至最新可用版本，确保安全性。

■ 漏洞类型：不安全的构建配置（中危）
  ▶ 位置：L88-L90
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：关闭web.xml缺失的检查，可能导致不当配置或敏感信息暴露。
  ▶ 修复建议：将failOnMissingWebXml设为true，确保构建时进行必要的验证。

</审计报告>
2025-02-01T14:45:52.526944+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：依赖漏洞（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用的maven-war-plugin版本为3.1.0，存在已知安全漏洞。
  ▶ 修复建议：升级至最新稳定版本以修复潜在漏洞。

■ 漏洞类型：未指定版本（中危）
  ▶ 位置：L44
  ▶ 代码特征：
    <artifactId>mysql-connector-java</artifactId>
  ▶ 攻击向量：未指定具体版本，可能使用默认版本，存在已知安全问题。
  ▶ 修复建议：显式指定mysql-connector-java的版本。
</审计报告>
2025-02-01T14:45:52.526944+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 被审计文件：pom.xml
  ▶ 代码特征：使用了maven-war-plugin进行构建，但未检查插件的最新版本
  ▶ 潜在影响：使用过时的插件可能会引入已知漏洞或兼容性问题
  ▶ 修复建议：检查并更新maven-war-plugin到最新稳定版本

■ 被审计文件：pom.xml
  ▶ 代码特征：依赖于ruoyi-framework，但未指定版本号
  ▶ 潜在影响：依赖于未锁定版本可能导致构建不一致或引入未经过审计的版本
  ▶ 修复建议：为ruoyi-framework依赖添加具体版本号以确保稳定性
</审计报告>
2025-02-01T14:45:52.528950+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：可能的外部依赖安全风险（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin使用的3.1.0版本存在已知的安全漏洞，可能被攻击者利用进行恶意构建
  ▶ 修复建议：升级到最新稳定版本并检查相应的安全通告

■ 漏洞类型：依赖关系版本未锁定（中危）
  ▶ 位置：L55
  ▶ 代码特征：
    <artifactId>ruoyi-quartz</artifactId>
  ▶ 攻击向量：依赖的ruoyi-quartz模块未指定具体版本，可能引入不安全的版本
  ▶ 修复建议：指定ruoyi-quartz的具体版本号以控制依赖的安全性
</审计报告>
2025-02-01T14:45:52.528950+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：配置文件未加密（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：未加密的配置可能被恶意用户修改以更改构建行为
  ▶ 修复建议：使用受保护的方式存储敏感配置

■ 漏洞类型：过时依赖（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>   
  ▶ 攻击向量：maven-war-plugin版本3.1.0可能存在已知漏洞
  ▶ 修复建议：更新到最新版本以避免潜在的安全问题
</审计报告>
2025-02-01T14:45:52.528950+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：依赖版本过旧（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>  // maven-war-plugin
  ▶ 攻击向量：利用已知漏洞进行攻击
  ▶ 修复建议：将maven-war-plugin升级至最新稳定版本

■ 漏洞类型：依赖版本过旧（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    <version>2.5.15</version>  // spring-boot-maven-plugin
  ▶ 攻击向量：利用已知漏洞进行攻击
  ▶ 修复建议：将spring-boot-maven-plugin升级至最新稳定版本
</审计报告>
2025-02-01T14:45:52.529933+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用过时组件（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin版本3.1.0存在已知的安全漏洞，攻击者可利用此漏洞进行恶意操作
  ▶ 修复建议：升级到最新版本，确保应用程序的安全性

<审计通过>
2025-02-01T14:45:56.034268+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L4
  ▶ 代码特征：
    <property name="log.path" value="/home/ruoyi/logs" />
  ▶ 攻击向量：攻击者可以通过确认日志文件路径来获取更深入的系统信息
  ▶ 修复建议：将日志路径配置为环境变量，并限制访问权限

■ 漏洞类型：潜在的敏感信息泄露（低危）
  ▶ 位置：L6
  ▶ 代码特征：
    <property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />
  ▶ 攻击向量：日志格式中包含的位置、方法名等信息，可能帮助攻击者进行更精确的攻击
  ▶ 修复建议：审查并调整日志输出格式，避免暴露不必要的信息
</审计报告>
2025-02-01T14:45:56.035250+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
<审计通过>
</审计报告>
2025-02-01T14:45:56.035250+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：敏感信息泄露（信息）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：如果log.path被攻击者操纵，可能泄露日志文件路径和内容
  ▶ 修复建议：确保log.path的值来自安全的配置源，并限制访问日志文件的权限

■ 漏洞类型：日志文件管理不当（中危）
  ▶ 位置：L67
  ▶ 代码特征：
    <maxHistory>60</maxHistory>
  ▶ 攻击向量：长时间存储用户访问日志可能让攻击者获得敏感信息
  ▶ 修复建议：定期审查和清理日志文件，减小日志保留的历史时间
</审计报告>
2025-02-01T14:45:56.035250+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：如果${log.path}被恶意用户控制，可能将敏感日志信息写入可访问路径。
  ▶ 修复建议：确保${log.path}为安全路径并对输出进行适当访问控制。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：同样，如果${log.path}被恶意用户控制，可能将敏感日志信息暴露在可访问路径中。
  ▶ 修复建议：确保${log.path}为安全路径并对输出进行适当访问控制。
</审计报告>
2025-02-01T14:45:56.035250+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志信息泄露（中危）
  ▶ 位置：L39
  ▶ 代码特征：
    <file>${log.path}/sys-error.log</file>
  ▶ 攻击向量：日志文件路径被外部可控，可能导致敏感信息泄露
  ▶ 修复建议：确认${log.path}不易被外部用户控制，使用绝对路径或限制访问权限

■ 漏洞类型：未限制的日志历史（中危）
  ▶ 位置：L67, L45
  ▶ 代码特征：
    <maxHistory>60</maxHistory>
  ▶ 攻击向量：历史日志文件数量未限制，可能导致存储问题或过多敏感信息
  ▶ 修复建议：考虑降低maxHistory值，定期清理日志，或使用数据脱敏策略
</审计报告>
2025-02-01T14:45:56.040244+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：敏感信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：如果log.path被设置为可被用户访问的目录，攻击者可通过访问日志文件获取敏感信息。
  ▶ 修复建议：确保log.path设置为不暴露给用户的安全路径，并进行适当的权限控制。

■ 漏洞类型：未限制的日志文件旋转（信息）
  ▶ 位置：L67
  ▶ 代码特征：
    <maxHistory>60</maxHistory>
  ▶ 攻击向量：存储过多的日志信息可能导致磁盘空间耗尽，影响系统正常运行。
  ▶ 修复建议：定期审查和管理日志文件的最大历史天数，并根据系统容量进行调整。
</审计报告>
2025-02-01T14:45:56.040244+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志泄露（中危）
  ▶ 位置：L90
  ▶ 代码特征：
    <logger name="sys-user" level="info">
  ▶ 攻击向量：如果sys-user模块产生的日志中包含敏感信息（例如用户数据），可能导致信息泄露
  ▶ 修复建议：审查日志内容并确保不记录敏感信息

■ 漏洞类型：日志泄露（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    <logger name="com.ruoyi" level="info" />
  ▶ 攻击向量：如果com.ruoyi模块产生的日志中包含敏感信息，可能导致信息泄露
  ▶ 修复建议：审查日志内容并确保不记录敏感信息
</审计报告>
2025-02-01T14:45:56.040244+0800 | DEBUG | <审计通过>
2025-02-01T14:45:56.040244+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志信息泄露（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    <logger name="sys-user" level="info">
  ▶ 攻击向量：由于日志记录级别设置为info，可能会泄露用户信息和操作记录，攻击者通过访问日志文件被动获取敏感信息。
  ▶ 修复建议：考虑将日志记录级别调整为warn或更高，以减少敏感信息的曝光。

■ 漏洞类型：文件路径注入（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：如果`${log.path}`的值可以被用户控制，攻击者可能构造恶意路径以进行日志文件覆盖或注入数据。
  ▶ 修复建议：严格验证和限制`${log.path}`的设置，并采用安全的路径配置方法。
</审计报告>
2025-02-01T14:45:56.040244+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：潜在的敏感信息泄露（中危）
  ▶ 位置：L9-L11
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：如果log.pattern中包含敏感信息，比如用户名或密码，可能导致信息泄露
  ▶ 修复建议：确保日志模式不记录敏感信息或使用安全的日志记录策略
</审计报告>
2025-02-01T14:46:01.496260+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：若${log.path}包含外部可访问路径，可能导致敏感信息泄露
  ▶ 修复建议：确保日志路径受到控制，并考虑不在可公开访问的位置存储日志文件

// 文件路径2
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L21
  ▶ 代码特征：
    <fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>
  ▶ 攻击向量：同上，若文件路径可被恶意用户访问，可能导致历史日志泄露
  ▶ 修复建议：应用文件存储权限限制，保证只有经过授权的用户才能访问日志目录
</审计报告>
2025-02-01T14:46:01.496260+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\mybatis\mybatis-config.xml
■ 漏洞类型：未加密的敏感配置（中危）
  ▶ 位置：L8-L15
  ▶ 代码特征：
    <setting name="cacheEnabled" value="true" />
    <setting name="useGeneratedKeys" value="true" />
    <setting name="defaultExecutorType" value="SIMPLE" />
    <setting name="logImpl" value="SLF4J" />
  ▶ 攻击向量：敏感配置未加密，可能导致攻击者通过配置文件获取系统内部行为并进行攻击
  ▶ 修复建议：对敏感配置进行加密或移至安全存储
</审计报告>
2025-02-01T14:46:01.496260+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:46:01.496260+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:46:01.497257+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:46:01.497257+0800 | DEBUG | <审计通过>
2025-02-01T14:46:01.497257+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：不安全的验证码生成（中危）
  ▶ 位置：L70-L75
  ▶ 代码特征：
    code = capText.substring(capText.lastIndexOf("@") + 1);
  ▶ 攻击向量：当生成的验证字符串包含'@'符号时，可能引发错误的处理。
  ▶ 潜在影响：攻击者如果能够控制验证码生成逻辑，可能会导致验证码的误解或绕过，影响系统的安全。
  ▶ 修复建议：验证并清理生成的验证码字符串，确保不包含任何特殊字符。

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L87
  ▶ 代码特征：
    return AjaxResult.error(e.getMessage());
  ▶ 攻击向量：可能返回异常信息给客户端，泄露内部实现细节。
  ▶ 潜在影响：潜在的信息泄露可能被攻击者利用，增加进一步攻击的可能性。
  ▶ 修复建议：仅返回通用的错误信息，不暴露具体的异常细节。
</审计报告>
2025-02-01T14:46:01.497257+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L90-L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：Base64编码后的图像数据直接暴露在返回结果中，可能导致该验证码被恶意使用
  ▶ 修复建议：考虑对生成的验证码进行限制，如增加使用次数检查或过期机制，防止被恶意程序持续请求

■ 漏洞类型：潜在的验证码预测（中危）
  ▶ 位置：L57-L58
  ▶ 代码特征：
    String uuid = IdUtils.simpleUUID();
    String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;
  ▶ 攻击向量：如果验证码生成算法弱，则攻击者可能预测或获取有效的验证码，从而绕过验证码保护
  ▶ 修复建议：增强验证码的复杂性，确保随机性，同时通过记录每个uuid的有效次数，并在达到一定阈值后阻止该uuid的重复使用
</审计报告>
2025-02-01T14:46:01.501235+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L90-L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：如果生成的验证码图像未被安全保护，可能会被攻击者恶意访问，导致系统验证码泄露。
  ▶ 修复建议：确保生成的验证码图像采取适当的安全策略，例如IP限制和使用短期有效的Token进行验证。

■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L64-L65
  ▶ 代码特征：
    String captchaType = RuoYiConfig.getCaptchaType();
  ▶ 攻击向量：未对captchaType进行严格验证，可能被利用导致选择错误的验证码生成方式，形成潜在的验证码生成漏洞。
  ▶ 修复建议：对captchaType进行白名单验证，确保只接受预定义的类型值。

■ 漏洞类型：缓存未过期（低危）
  ▶ 位置：L78
  ▶ 代码特征：
    redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);
  ▶ 攻击向量：若CAPTCHA_EXPIRATION设置不当，过期时间过长，可能会导致钓鱼攻击者在验证码有效期内使用过期验证码。
  ▶ 修复建议：根据业务需求设置合理的验证码过期时间，确保其尽快失效。
</审计报告>
2025-02-01T14:46:01.501235+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L78
  ▶ 代码特征：
    redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);
  ▶ 攻击向量：如果攻击者获取到验证码的存储密钥（verifyKey），可能会通过缓存接口获取验证码内容，导致验证码泄漏。
  ▶ 修复建议：使用更复杂的生成规则和代码来加强验证码存储密钥的安全性。

■ 漏洞类型：未限制请求频率（低危）
  ▶ 位置：L46
  ▶ 代码特征：
    public AjaxResult getCode(HttpServletResponse response) throws IOException
  ▶ 攻击向量：攻击者可以频繁请求验证码，导致服务端负载增加甚至拒绝服务。
  ▶ 修复建议：实现验证码请求频率限制，防止滥用。
</审计报告>
2025-02-01T14:46:08.202227+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L51-L53
  ▶ 代码特征：
    if (!FileUtils.checkAllowDownload(fileName))
  ▶ 攻击向量：用户可以构造fileName参数为"../secrets.txt"来下载服务器上不应公开的文件
  ▶ 修复建议：确保checkAllowDownload方法对fileName进行严格过滤，不允许路径遍历字符得到绝对路径

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L68-L69
  ▶ 代码特征：
    log.error("下载文件失败", e);
  ▶ 攻击向量：异常信息中包含具体异常信息，可能泄露应用内部结构或配置
  ▶ 修复建议：在生产环境中，应避免打印堆栈信息，或使用通用错误消息而不是详细信息。
</审计报告>
2025-02-01T14:46:08.202227+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：构造downloadPath为"../../etc/passwd"并下载敏感文件
  ▶ 潜在影响：攻击者可以访问服务器上任意文件，导致数据泄露或服务中断
  ▶ 修复建议：对downloadPath进行严格验证和规范化处理

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L53
  ▶ 代码特征：
    throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));
  ▶ 潜在影响：异常信息将非法文件名泄露给用户，可能用于立刻识别合法的文件名
  ▶ 修复建议：抛出通用异常，避免暴露文件名信息

</审计报告>
2025-02-01T14:46:08.202227+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L56
  ▶ 代码特征：
    String filePath = RuoYiConfig.getDownloadPath() + fileName;
  ▶ 攻击向量：构造fileName="../../../../etc/passwd"等输入可读取不该访问的文件
  ▶ 修复建议：对fileName进行严格校验和清理，避免使用用户输入直接拼接文件路径

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.setAttachmentResponseHeader(response, downloadName);
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：如果未验证用户的下载权限，攻击者可下载敏感文件
  ▶ 修复建议：在执行下载前验证用户权限
</审计报告>
2025-02-01T14:46:08.202227+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：不安全的文件下载（高危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.setAttachmentResponseHeader(response, downloadName);
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：攻击者可操纵downloadPath为未经授权的文件路径，下载敏感文件
  ▶ 修复建议：验证downloadPath是否在允许的范围内，并以安全的方式处理文件路径

■ 漏洞类型：文件上传未验证（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    String fileName = FileUploadUtils.upload(filePath, file);
  ▶ 攻击向量：未限制上传文件类型，可能允许上传恶意文件
  ▶ 修复建议：增加文件类型和大小的验证，限制可上传的文件格式
</审计报告>
2025-02-01T14:46:08.206416+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（中危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：如果downloadPath来源于用户输入，攻击者可以构造路径如“../../etc/passwd”获取敏感文件
  ▶ 修复建议：验证downloadPath，仅允许访问特定目录

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L84
  ▶ 代码特征：
    String url = serverConfig.getUrl() + fileName;
  ▶ 攻击向量：如果fileName未加过滤，可能生成敏感文件的下载链接，使得攻击者能够获取信息
  ▶ 修复建议：对fileName进行严格验证和过滤
</审计报告>
2025-02-01T14:46:08.206416+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的文件下载（高危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.setAttachmentResponseHeader(response, downloadName);
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：攻击者可构造恶意downloadName或downloadPath，导致文件下载不受限制，可能下载系统文件
  ▶ 修复建议：验证文件路径和名称，确保不允许下载敏感文件或系统文件。

<审计报告>
// 文件路径2
■ 漏洞类型：未验证的文件名（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    ajax.put("originalFilename", file.getOriginalFilename());
  ▶ 攻击向量：文件名未经过滤，可能导致XSS攻击，如上传包含恶意JavaScript的文件
  ▶ 修复建议：对file.getOriginalFilename()进行过滤，确保不会包含恶意脚本。

</审计报告>
2025-02-01T14:46:08.206416+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L52-L54
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
    Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));
  ▶ 攻击向量：攻击者可通过未授权访问触发getInfo方法，从Redis获取敏感信息和命令统计。
  ▶ 潜在影响：敏感的Redis服务器信息和执行命令统计可能暴露系统配置和性能指标，对安全产生威胁。
  ▶ 修复建议：添加更严格的访问控制，确保只有授权用户能够访问该接口，并避免在可以被任何人调用的地方暴露敏感信息。

■ 漏洞类型：不当缓存清理（中危）
  ▶ 位置：L117-L118
  ▶ 代码特征：
    Collection<String> cacheKeys = redisTemplate.keys("*");
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：执行clearCacheAll方法时，可能误清除所有缓存，包括关键业务数据缓存。
  ▶ 潜在影响：可能导致服务中断或性能下降，影响用户体验。
  ▶ 修复建议：限制清除缓存的范围，确保仅清除非关键或临时数据。

</审计报告>
2025-02-01T14:46:08.206416+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：潜在任意代码执行（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
  ▶ 攻击向量：如果未加验证，攻击者可能通过构造Redis命令执行未授权的操作
  ▶ 修复建议：在执行Redis命令之前，应对输入进行严格验证，并限制允许的操作

■ 漏洞类型：潜在的高并发问题（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：在高并发场景下，可能导致delete命令不一致或丢失部分缓存键
  ▶ 修复建议：考虑使用分布式锁来协调高并发下的删除操作
</审计报告>
2025-02-01T14:46:08.207416+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：潜在权限绕过（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys未经过验证，攻击者可能可以删除任意缓存数据。
  ▶ 修复建议：对cacheKeys的输入进行验证和限制，确保仅允许合法的缓存键被删除。

■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L54
  ▶ 代码特征：
    Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());
  ▶ 攻击向量：执行dbSize方法可能泄露数据库的大小信息，攻击者根据此信息推测系统的规模和资源配置。
  ▶ 修复建议：避免直接暴露数据库规模信息，考虑是否需要返回该数据。
</审计报告>
2025-02-01T14:46:08.207416+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：缓存键枚举（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");
  ▶ 攻击向量：攻击者可以利用缓存模式，构造cacheName从而获得敏感缓存信息
  ▶ 潜在影响：可能导致信息泄露，泄露敏感数据或系统内部状态
  ▶ 修复建议：限制cacheName的来源，避免直接暴露给用户输入

■ 漏洞类型：缓存删除确认缺失（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：若cacheKeys来源未经过严格验证，可能导致错误或未授权的缓存删除
  ▶ 潜在影响：误删除关键缓存数据，影响系统正常运行
  ▶ 修复建议：添加缓存删除前的确认逻辑，确保被删除的缓存是准确的
</审计报告>
2025-02-01T14:46:13.037525+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：潜在的未验证输入
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys是未经过验证的用户输入，攻击者可能提供恶意的cacheKeys，导致错误删除或其他意外行为。
  ▶ 修复建议：在调用delete之前对cacheKeys进行验证和清洗，以确保其格式和内容符合预期。

■ 漏洞类型：潜在的未验证输入
  ▶ 位置：L91
  ▶ 代码特征：
    String cacheValue = redisTemplate.opsForValue().get(cacheKey);
  ▶ 攻击向量：如果cacheKey来源于用户输入，攻击者可能利用不受限的缓存键进行数据泄露或获取敏感信息。
  ▶ 修复建议：对cacheKey进行验证和清洗，确保仅允许合法的缓存键格式被使用。
</审计报告>
2025-02-01T14:46:13.037525+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：任意缓存删除（中危）
  ▶ 位置：L101, L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys来自未验证的用户输入，攻击者可以构造恶意输入导致任意缓存删除
  ▶ 修复建议：应对cacheKeys进行严格的验证和清理，确保其只包含合法的缓存键
</审计报告>
2025-02-01T14:46:13.037525+0800 | DEBUG | <审计通过>
2025-02-01T14:46:13.037525+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));
  ▶ 攻击向量：如果property参数来自不受信任的用户输入，可能引发字符串操作异常或导致服务拒绝（DoS）。
  ▶ 修复建议：对property进行输入验证，确保其格式符合预期

<审计通过>
</审计报告>
2025-02-01T14:46:13.037525+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));
  ▶ 攻击向量：如果property来源于用户输入，攻击者可以通过构造特定输入泄露敏感数据
  ▶ 修复建议：对property进行输入验证和清洗，确保不受用户直接影响

</审计报告>
2025-02-01T14:46:13.038520+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L25
  ▶ 代码特征：
    return AjaxResult.success(server);
  ▶ 攻击向量：如果Server类中包含敏感信息，可能导致信息泄露
  ▶ 潜在影响：攻击者可以获取不应暴露的系统信息
  ▶ 修复建议：仅返回必要的服务器信息，避免返回完整的对象
</审计报告>
2025-02-01T14:46:13.038520+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\ServerController.java
■ 漏洞类型：无漏洞
  ▶ 位置：无
  ▶ 代码特征：ServerController类的getInfo方法创建Server对象并调用其copyTo方法
  ▶ 修复建议：无
</审计报告>
2025-02-01T14:46:13.050745+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L40-L44
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
  ▶ 攻击向量：未对输入的logininfor对象进行充分验证，攻击者可以构造恶意对象并查看系统的敏感日志信息。
  ▶ 修复建议：对登陆信息的输入进行严格的验证和过滤，并限制返回结果的字段。

■ 漏洞类型：潜在未授权访问（中危）
  ▶ 位置：L79-L80
  ▶ 代码特征：
    passwordService.clearLoginRecordCache(userName);
  ▶ 攻击向量：若userName未经过认证或权限验证，攻击者可能通过构造API请求清除任意用户的登录记录缓存。
  ▶ 修复建议：在调用clearLoginRecordCache方法之前，对userName进行权限验证，确保用户只有在具备相应权限的情况下才能清除目标用户的记录缓存。
</审计报告>
2025-02-01T14:46:13.050745+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
  ▶ 攻击向量：未对logininfor参数进行严格验证，可能导致敏感登录记录泄露
  ▶ 修复建议：对logininfor参数进行有效性验证，限制可查询的用户数据

■ 漏洞类型：潜在的拒绝服务（DoS）攻击（中危）
  ▶ 位置：L50-L54
  ▶ 代码特征：
    public void export(HttpServletResponse response, SysLogininfor logininfor)
  ▶ 攻击向量：恶意用户可能通过传递大量数据或复杂查询导致服务性能下降
  ▶ 修复建议：限制每次导出的数据量，增加请求频率限制
</审计报告>
2025-02-01T14:46:13.050745+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    passwordService.clearLoginRecordCache(userName);
  ▶ 攻击向量：未对userName进行足够的验证，攻击者可能使用恶意输入尝试访问或操作他人的登录记录
  ▶ 修复建议：在调用clearLoginRecordCache前对userName进行验证和过滤，确保其来源可靠

<审计通过>
2025-02-01T14:46:18.463137+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysOperlogController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L39
  ▶ 代码特征：
    List<SysOperLog> list = operLogService.selectOperLogList(operLog);
  ▶ 攻击向量：未对operLog进行充分验证，恶意用户可构造含有敏感信息的SysOperLog对象，导致信息泄露
  ▶ 修复建议：在传入参数operLog之前进行严格的输入验证和清洗，确保没有恶意数据

■ 漏洞类型：缺少权限校验（中危）
  ▶ 位置：L64-L66
  ▶ 代码特征：
    operLogService.cleanOperLog();
  ▶ 攻击向量：如果没有适当的权限检查，任何用户都可以调用此方法清除操作日志，可能导致审计追踪的丢失
  ▶ 修复建议：在清除操作日志前，加入权限确认逻辑，确保只有被授权用户能执行此操作
</审计报告>
2025-02-01T14:46:18.463137+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysOperlogController.java
■ 漏洞类型：不安全的文件导出（中危）
  ▶ 位置：L50
  ▶ 代码特征：
    util.exportExcel(response, list, "操作日志");
  ▶ 攻击向量：利用恶意日志数据，可能导致Excel文件生成后其中包含恶意的JS脚本，导致XSS
  ▶ 修复建议：对输出的数据进行严格的内容过滤和编码

■ 漏洞类型：未验证的操作权限（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    operLogService.cleanOperLog();
  ▶ 攻击向量：未经授权的用户可以调用清除日志的方法，可能导致日志丢失，影响审计追踪
  ▶ 修复建议：增加操作权限验证，确保只有授权用户可以执行此操作
</审计报告>
2025-02-01T14:46:18.463137+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L45
  ▶ 代码特征：
    Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");
  ▶ 攻击向量：攻击者可以利用keys方法获取所有匹配的TOKEN键，从而猜测系统中活跃用户的TOKEN
  ▶ 修复建议：限制keys方法的使用，使用更安全的用户验证和管理机制来处理TOKEN 

■ 漏洞类型：暴露资源（信息）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：tokenId未经严格验证，攻击者可能构造无效tokenId进行删除操作
  ▶ 修复建议：在删除前进行tokenId的有效性验证，确保其来源可靠
</审计报告>
2025-02-01T14:46:18.463137+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));
  ▶ 攻击向量：攻击者可以利用未限制的用户输入进行用户信息查询，导致用户在线信息的泄露
  ▶ 修复建议：对输入参数进行验证与过滤，以限制查询范围

■ 漏洞类型：未验证的删除操作（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：攻击者可以构造tokenId进行非法删除操作，导致TOKEN被恶意删除
  ▶ 修复建议：在删除操作前验证tokenId的合法性
</审计报告>
2025-02-01T14:46:18.463137+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：敏感数据泄露（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：攻击者可通过强制修改tokenId来删除有效的会话token，导致未授权访问
  ▶ 修复建议：验证当前用户权限，确保只有拥有相应权限的用户才能删除token

■ 漏洞类型：无
  ▶ 位置：L69
  ▶ 修复建议：无
</审计报告>
2025-02-01T14:46:18.473184+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L44
  ▶ 代码特征：
    List<SysConfig> list = configService.selectConfigList(config);
  ▶ 攻击向量：如果config未经过严格验证，攻击者可以构造恶意的config对象，导致返回敏感配置信息。
  ▶ 修复建议：对输入的config对象进行严格的验证和过滤，以确保不泄露敏感信息。

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：未验证用户权限情况下调用resetConfigCache，攻击者可能在未授权的情况下清空参数缓存。
  ▶ 修复建议：在调用resetConfigCache之前，添加用户权限检查机制。
</审计报告>
2025-02-01T14:46:18.473184+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L130
  ▶ 代码特征：
    configService.resetConfigCache();
  ▶ 攻击向量：如果resetConfigCache函数未进行权限检查，攻击者可通过该接口刷新配置缓存，可能导致系统设置被恶意修改。
  ▶ 修复建议：在执行resetConfigCache之前，增加权限验证逻辑。

■ 漏洞类型：未过滤的用户输入（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    public void export(HttpServletResponse response, SysConfig config)
  ▶ 攻击向量：如果config未经过合理验证，攻击者可构造恶意SysConfig对象进行SQL注入或其他注入攻击。
  ▶ 修复建议：对SysConfig对象进行严格的输入验证和过滤，确保不受攻击影响。
</审计报告>
2025-02-01T14:46:18.473184+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDeptController.java
■ 漏洞类型：权限验证缺失（高危）
  ▶ 位置：L129
  ▶ 代码特征：
    deptService.checkDeptDataScope(deptId);
  ▶ 攻击向量：未对deptId进行有效权限验证，攻击者可试图构造请求对其无权限删除的部门进行删除操作
  ▶ 潜在影响：导致用户可能删除他们没有权限访问的部门
  ▶ 修复建议：在调用checkDeptDataScope之前，确保当前用户有权限操作该部门

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L44
  ▶ 代码特征：
    List<SysDept> depts = deptService.selectDeptList(dept);
  ▶ 攻击向量：未对结果进行适当的过滤和授权控制，可能向未授权用户返回敏感的部门信息
  ▶ 潜在影响：恶意用户可能通过调用此接口获取敏感部门数据
  ▶ 修复建议：在执行selectDeptList之前，确认当前用户的权限并筛选所返回的数据
</审计报告>
2025-02-01T14:46:18.473184+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：若未进行身份验证，攻击者可调用该方法并删除字典数据
  ▶ 修复建议：增加权限校验或身份验证，确保调用者具备相应权限

■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L48
  ▶ 代码特征：
    List<SysDictData> list = dictDataService.selectDictDataList(dictData);
  ▶ 攻击向量：dictData参数未经过验证，可能被恶意构造
  ▶ 修复建议：对传入的dictData进行有效性验证和过滤
</审计报告>
2025-02-01T14:46:18.487906+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：未验证dictCodes来源，可能导致未授权的数据删除
  ▶ 修复建议：在调用deleteDictDataByIds之前，验证dictCodes的来源和格式

■ 漏洞类型：数据泄露（中危）
  ▶ 位置：L57-L59
  ▶ 代码特征：
    util.exportExcel(response, list, "字典数据");
  ▶ 攻击向量：如果list包含敏感数据且未进行适当筛选，可能会导出敏感信息
  ▶ 修复建议：确保导出数据进行适当的敏感信息过滤和权限检查
</审计报告>
2025-02-01T14:46:25.329608+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：缺乏参数验证（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：未对dictCodes进行有效性检查，可能导致删除不必要的数据
  ▶ 修复建议：在调用deleteDictDataByIds前验证dictCodes的格式和内容

■ 漏洞类型：输入验证缺失（中危）
  ▶ 位置：L78
  ▶ 代码特征：
    List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);
  ▶ 攻击向量：未对dictType进行输入验证，可能导致查询异常数据
  ▶ 修复建议：在调用selectDictDataByType前对dictType进行合法性检查
</审计报告>
2025-02-01T14:46:25.329608+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L128-L130
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果dictTypes包含敏感信息，调用者可通过未授权访问获取该信息
  ▶ 潜在影响：可能泄露系统的字典类型配置信息，导致潜在的安全性问题，如信息推测和针对性的攻击。
  ▶ 修复建议：在调用前加入权限验证，确保用户有权限访问相应的字典类型。
  
■ 漏洞类型：缺乏输入验证（高危）
  ▶ 位置：L41-L43
  ▶ 代码特征：
    List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);
  ▶ 攻击向量：未验证的dictType可能导致SQL注入，构造恶意字典类型查询参数。
  ▶ 潜在影响：攻击者可能通过构造特定的dictType参数进行SQL注入攻击，获取、篡改、删除数据库中的敏感数据。
  ▶ 修复建议：在处理dictType参数之前实施严格的输入验证和参数化查询。
</审计报告>
2025-02-01T14:46:25.329608+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L42
  ▶ 代码特征：
    List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);
  ▶ 攻击向量：如果dictType中的某个字段未进行严格验证，可能存在构造恶意输入的风险，从而导致SQL注入。
  ▶ 修复建议：确保对dictType的字段进行适当的验证和清理，采用参数化查询的方式执行数据库访问。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L39
  ▶ 代码特征：
    @GetMapping("/list")
  ▶ 攻击向量：该接口未实施访问控制，攻击者可以直接访问字典类型列表，可能导致敏感信息泄露。
  ▶ 修复建议：增加身份验证和授权管理，确保只有授权用户才能访问该接口。
</审计报告>
2025-02-01T14:46:25.330664+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：路径遍历（中危）
  ▶ 位置：L61
  ▶ 代码特征：
    public AjaxResult getInfo(@PathVariable Long dictId)
  ▶ 攻击向量：未验证dictId的合法性，存在利用dictId=99999999999999999进行溢出（或拒绝服务攻击）
  ▶ 修复建议：对dictId进行范围检查和合法性验证
  
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L63
  ▶ 代码特征：
    return success(dictTypeService.selectDictTypeById(dictId));
  ▶ 攻击向量：若dictId无效，可能抛出异常暴露系统信息
  ▶ 修复建议：增加异常处理，避免泄露敏感信息
</审计报告>
2025-02-01T14:46:25.330664+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L76
  ▶ 代码特征：
    return error("新增字典'" + dict.getDictName() + "'失败，字典类型已存在");
  ▶ 攻击向量：如果攻击者通过接口新增字典类型，返回的错误信息将泄露已存在字典的名称，导致字典内容被猜测
  ▶ 修复建议：返回通用错误信息，而不是具体的字典名称

■ 漏洞类型：潜在SQL注入（中危）
  ▶ 位置：L74
  ▶ 代码特征：
    if (!dictTypeService.checkDictTypeUnique(dict))
  ▶ 攻击向量：如果checkDictTypeUnique未对datasource进行参数化处理，攻击者可构造恶意字典名称导致SQL注入
  ▶ 修复建议：确保checkDictTypeUnique中的数据库查询使用参数化查询

</审计报告>
2025-02-01T14:46:25.330664+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：未验证的输入源（高危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果dictTypeService.selectDictTypeAll()内部对输入未进行严格验证，攻击者可能执行调试或其他恶意操作。
  ▶ 修复建议：确保dictTypeService的输入经过严格验证，并过滤不安全的内容。

■ 漏洞类型：未过滤的用户输入（高危）
  ▶ 位置：L79
  ▶ 代码特征：
    return toAjax(dictTypeService.insertDictType(dict));
  ▶ 攻击向量：如果dict对象的属性未经验证，可能导致SQL注入或XSS攻击。
  ▶ 修复建议：对dict对象的所有属性进行验证和过滤，确保不接受恶意输入。
</审计报告>
2025-02-01T14:46:25.330664+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无漏洞
  ▶ 位置：L128-L130
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
    return success(dictTypes);
  ▶ 说明：此部分代码未对用户输入或外部数据进行直接处理，只是调用服务层获取数据并返回，确保了安全性。

■ 漏洞类型：无漏洞
  ▶ 位置：L95
  ▶ 代码特征：
    return toAjax(dictTypeService.updateDictType(dict));
  ▶ 说明：此部分代码对字典类型的更新调用了服务层方法，未见直接用户输入的危险，确保了操作安全。

</审计报告>
2025-02-01T14:46:25.332029+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L106
  ▶ 代码特征：
    dictTypeService.deleteDictTypeByIds(dictIds);
  ▶ 攻击向量：如果未对用户身份进行验证，攻击者可以构造请求删除任意字典类型
  ▶ 修复建议：在进行删除操作前，确保对用户权限进行校验 

■ 漏洞类型：敏感数据未加密（信息）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：字典类型列表可能包含敏感信息，未加密传输易被中间人攻击
  ▶ 修复建议：使用HTTPS进行数据传输保障，敏感数据应予以加密处理
</审计报告>
2025-02-01T14:46:25.332029+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：未对调用接口进行身份验证，可能导致未授权用户访问字典类型数据
  ▶ 修复建议：在访问控制中增加身份验证、授权检查，仅允许合法用户访问该接口

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L129
  ▶ 代码特征：
    return success(dictTypes);
  ▶ 攻击向量：如果dictTypes包含敏感信息，未进行适当过滤可能导致信息泄露
  ▶ 修复建议：对返回的数据进行白名单过滤，确保不泄露敏感信息
</审计报告>
2025-02-01T14:46:25.332029+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L128-L129
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果dictTypeService.selectDictTypeAll()中未进行权限控制，恶意用户可能会调用该接口获取所有字典类型，导致敏感数据泄露。
  ▶ 修复建议：在获取字典类型前添加权限验证。

<审计通过>
</审计报告>
2025-02-01T14:46:31.872250+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysIndexController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：ruoyiConfig.getName()和ruoyiConfig.getVersion()的内容可能泄露系统内部配置或版本信息，造成攻击者获取系统信息的机会。
  ▶ 修复建议：避免在响应中直接暴露系统的内置信息，可以使用模糊化处理或删除敏感信息。

</审计报告>
2025-02-01T14:46:31.873771+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：恶意用户可以通过访问首页获取ruoyiConfig中存储的框架名称和版本信息，从而可能针对特定版本进行攻击
  ▶ 修复建议：考虑对返回信息进行适当的处理，避免泄露内部结构

</审计报告>
2025-02-01T14:46:31.873771+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：未验证的用户输入（高危）
  ▶ 位置：L53
  ▶ 代码特征：
    String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(), loginBody.getUuid());
  ▶ 攻击向量：如果loginBody的字段未经过验证，则可能导致身份验证绕过或者登录凭证的窃取。
  ▶ 潜在影响：恶意用户可以利用未验证的输入进行伪造请求，获取系统权限。
  ▶ 修复建议：在调用login方法前，增加对loginBody中的数据进行有效性检查。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果没有适当的权限控制，用户可能会访问不该查看的菜单数据。
  ▶ 潜在影响：系统可能泄露用户不应访问的系统资源，导致敏感数据泄露。
  ▶ 修复建议：增强权限验证机制，确保用户对menus的访问是经过授权的。

</审计报告>
2025-02-01T14:46:31.873771+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L67-L68
  ▶ 代码特征：
    LoginUser loginUser = SecurityUtils.getLoginUser();
    SysUser user = loginUser.getUser();
  ▶ 攻击向量：如果未妥善保护security context，攻击者可以通过会话劫持获取所有用户信息
  ▶ 修复建议：确保对会话进行加密和隔离，使用适当的身份验证和授权机制

// 文件路径2
■ 漏洞类型：潜在的渗透（信息）
  ▶ 位置：L93-L94
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果userId可以被未授权用户猜测，可能导致获取他人的菜单信息
  ▶ 修复建议：在menuService中对userId进行权限验证，确保用户只能获取自身的菜单
</审计报告>
2025-02-01T14:46:31.873771+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：权限绕过（中危）
  ▶ 位置：L70-L72
  ▶ 代码特征：
    Set<String> roles = permissionService.getRolePermission(user);
    Set<String> permissions = permissionService.getMenuPermission(user);
  ▶ 攻击向量：如果user对象未经过严格验证，攻击者可构造一个含有管理员权限的user对象，造成权限绕过。
  ▶ 修复建议：确保user对象经过验证，并进行权限检查

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L90-L95
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：若用户身份验证机制存在缺陷，攻击者可获取其他用户的菜单列表，进而推测系统架构或用户信息。
  ▶ 修复建议：确保getUserId方法严格检查用户身份，防止越权访问。
</审计报告>
2025-02-01T14:46:31.875846+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：如果SecurityUtils.getUserId()未做充分的权限校验，攻击者可以通过伪造身份获取他人信息
  ▶ 修复建议：在获取userId之前添加权限校验逻辑

■ 漏洞类型：未加密存储（中危）
  ▶ 位置：L76
  ▶ 代码特征：
    tokenService.refreshToken(loginUser);
  ▶ 攻击向量：如果loginUser信息未加密存储，可能被窃取
  ▶ 修复建议：确保敏感信息如loginUser严格采用加密存储和处理
</审计报告>
2025-02-01T14:46:31.875846+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：权限认证缺失（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：用户身份未充分验证，恶意用户可能伪造用户ID进行菜单访问
  ▶ 修复建议：在getRouters方法中引入权限验证机制，确保用户身份的合法性。

■ 漏洞类型：未处理的异常（中危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果menuService.selectMenuTreeByUserId方法抛出异常，未捕获的异常可能导致服务崩溃
  ▶ 修复建议：在调用该方法时添加适当的异常处理，确保系统的稳定性。
</审计报告>
2025-02-01T14:46:31.875846+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L43-L44
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());
  ▶ 攻击向量：如果getUserId()有效获取用户信息但未做权限校验，恶意用户可能可获取未授权的菜单数据
  ▶ 修复建议：在获取菜单列表前应进行用户角色和权限的验证
  
■ 漏洞类型：逻辑漏洞（中危）
  ▶ 位置：L140
  ▶ 代码特征：
    return toAjax(menuService.deleteMenuById(menuId));
  ▶ 攻击向量：如果menuId来自未验证的用户输入，恶意用户可以通过构造特定的menuId执行删除操作
  ▶ 修复建议：对menuId进行有效性和权限检查，确保只有拥有删除权限的用户才能执行该操作
</审计报告>
2025-02-01T14:46:31.875846+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不当输入验证（中危）
  ▶ 位置：L89
  ▶ 代码特征：
    return toAjax(noticeService.deleteNoticeByIds(noticeIds));
  ▶ 攻击向量：如果noticeIds未经过严格的验证，攻击者可构造恶意输入，如noticeIds="1 OR '1'='1'"进行SQL注入。
  ▶ 修复建议：对noticeIds进行严格的输入校验，确保其为合法的ID格式。

■ 漏洞类型：不当输入验证（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysNotice> list = noticeService.selectNoticeList(notice);
  ▶ 攻击向量：如果notice对象中的属性没有验证，可能导致查询参数注入。
  ▶ 修复建议：对notice对象的字段进行严格的验证和清洗，确保没有恶意数据进入查询。
</审计报告>
2025-02-01T14:46:31.876850+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证用户输入（高危）
  ▶ 位置：L35
  ▶ 代码特征：
    private ISysPostService postService;
  ▶ 攻击向量：未对postService的输入进行适当验证，可能导致服务端执行恶意操作。
  ▶ 修复建议：在调用postService时，确保对输入进行有效的验证与消毒。

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感信息，可能导致泄露。
  ▶ 修复建议：敏感信息返回前进行适当过滤。
</审计报告>
2025-02-01T14:46:39.132256+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未验证的返回结果（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts数据来源未经过验证，可能导致用户能够注入恶意数据在返回结果中。
  ▶ 修复建议：确保对posts内容进行验证和过滤，避免返回不受控的数据。

■ 漏洞类型：缺乏分页参数验证（中危）
  ▶ 位置：L44
  ▶ 代码特征：
    startPage();
  ▶ 攻击向量：如果分页参数未经过验证，攻击者可以通过构造请求参数来进行分页数据的非法访问。
  ▶ 修复建议：添加分页参数的有效性检查，确保参数在合理范围内。
</审计报告>
2025-02-01T14:46:39.132256+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L45
  ▶ 代码特征：
    List<SysPost> list = postService.selectPostList(post);
  ▶ 攻击向量：未对用户权限进行验证，攻击者可以使用未经授权的用户请求获取敏感的岗位信息
  ▶ 修复建议：在调用selectPostList之前添加用户权限验证逻辑

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：在成功返回操作时可能导致敏感数据通过response返回，对用户的敏感信息未作适当过滤
  ▶ 修复建议：在返回前筛选敏感字段

</审计报告>
2025-02-01T14:46:39.133239+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无
  ▶ 位置：L127-L127
  ▶ 代码特征：
    return success(posts);
  ▶ 修复建议：无

■ 漏洞类型：无
  ▶ 位置：L46-L46
  ▶ 代码特征：
    return getDataTable(list);
  ▶ 修复建议：无
</审计报告>
2025-02-01T14:46:39.133239+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感信息，可能被未授权访问的用户查看
  ▶ 潜在影响：泄露用户敏感数据，如岗位信息和权限
  ▶ 修复建议：确保posts数据中不包含敏感信息，并实施访问控制

■ 漏洞类型：可控反序列化（高危）
  ▶ 位置：L55
  ▶ 代码特征：
    ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);
  ▶ 攻击向量：若ExcelUtil存在反序列化漏洞，恶意Excel文件可被上传，导致代码执行
  ▶ 潜在影响：攻击者通过上传恶意Excel文件执行任意代码或造成服务中断
  ▶ 修复建议：验证和限制上传的文件格式与内容，使用安全的反序列化库
</审计报告>
2025-02-01T14:46:39.133239+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：对象注入（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：如果postId未经过验证或清洗，攻击者可以构造postId='1 OR 1=1'来注入恶意查询以获取不应有的岗位信息
  ▶ 修复建议：对postId进行输入验证，确保只允许合法的岗位ID格式

■ 漏洞类型：复杂数据处理暴露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts数据包含用户输入的值而未经过滤，可能导致XSS漏洞，允许攻击者注入并执行恶意脚本
  ▶ 修复建议：对posts中的内容进行严格过滤和转义
</审计报告>
2025-02-01T14:46:39.142795+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：postId未进行验证，攻击者可以构造任意postId访问其他用户的岗位信息。
  ▶ 修复建议：对postId进行权限验证，确保用户只能访问他们有权访问的信息。

■ 漏洞类型：不适当的权限控制（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：posts数据来源未经验证，可能导致未授权用户能获取所有岗位。
  ▶ 修复建议：确保当前用户有权限获取posts数据，并根据用户角色进行过滤。
  
</审计报告>
2025-02-01T14:46:39.142795+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：逻辑漏洞（中危）
  ▶ 位置：L77
  ▶ 代码特征：
    if (!postService.checkPostNameUnique(post))
  ▶ 攻击向量：攻击者可通过提交重复的岗位名称（如"Manager"）而不被阻止，导致岗位名称重复。
  ▶ 潜在影响：可能会导致数据的不一致性和重复记录，从而影响系统的正常使用。
  ▶ 修复建议：加强唯一性检查，并同步清理数据库中重复的岗位记录。

<审计通过>
2025-02-01T14:46:39.142795+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    return error("新增岗位'" + post.getPostName() + "'失败，岗位名称已存在");
  ▶ 攻击向量：攻击者可以利用该错误信息推测系统中的岗位命名情况，产生信息泄露。
  ▶ 修复建议：返回通用错误信息，避免泄露具体数据。

<审计通过>
</审计报告>
2025-02-01T14:46:39.142795+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：输入验证不足（中危）
  ▶ 位置：L81
  ▶ 代码特征：
    else if (!postService.checkPostCodeUnique(post))
  ▶ 攻击向量：攻击者可以提交恶意或未验证的岗位编码，导致破坏数据的完整性或逻辑错误
  ▶ 修复建议：在调用checkPostCodeUnique前添加输入验证，确保post对象符合预期格式和约束

<审计通过>
</审计报告>
2025-02-01T14:46:39.142795+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：任意用户输入未验证（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts数据来源于用户输入且未经过滤，可能导致XSS攻击
  ▶ 修复建议：对posts中的内容进行HTML转义，确保不执行潜在恶意脚本

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L85
  ▶ 代码特征：
    post.setCreateBy(getUsername());
  ▶ 攻击向量：如果getUsername()的实现未严格控制用户信息，可能泄露用户信息
  ▶ 修复建议：确保getUsername()方法返回的内容经过访问控制检查
</审计报告>
2025-02-01T14:46:47.367257+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    return toAjax(postService.insertPost(post));
  ▶ 攻击向量：恶意用户若绕过权限验证，可以调用add方法并插入任意岗位信息，可能造成数据篡改。
  ▶ 修复建议：在调用insertPost之前，增加权限验证逻辑。

<审计通过>
2025-02-01T14:46:47.367257+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：XSS（高危）
  ▶ 位置：L99
  ▶ 代码特征：
    return error("修改岗位'" + post.getPostName() + "'失败，岗位名称已存在");
  ▶ 攻击向量：如果post.getPostName()未经过严格的输入过滤，攻击者可以通过构造post.getPostName()为"<script>alert('XSS')</script>"实现跨站脚本攻击。
  ▶ 修复建议：对用户输入进行HTML转义或使用框架提供的输出编码功能。

<审计通过>
</审计报告>
2025-02-01T14:46:47.367257+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L105
  ▶ 代码特征：
    post.setUpdateBy(getUsername());
  ▶ 攻击向量：如果getUsername()来源于未验证的用户输入，将导致用户信息泄露
  ▶ 修复建议：确保getUsername()返回的用户信息经过适当的验证和授权

■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts对象中包含敏感信息，可能因未加密或未遮蔽而被外部攻击者获取
  ▶ 修复建议：在返回前对posts对象进行信息筛选，确保不泄露敏感数据
</审计报告>
2025-02-01T14:46:47.367257+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    return toAjax(postService.updatePost(post));
  ▶ 攻击向量：如果post未经过严格验证，攻击者可能构造恶意payload修改岗位信息，可能导致数据库不完整或数据泄露。
  ▶ 修复建议：在调用postService.updatePost之前，确保对post进行严格校验，包括验证字段类型和内容。

</审计报告>
2025-02-01T14:46:47.367257+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：不当错误处理（中危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：如果postIds格式不当或包含不合法字符，可能导致操作失败或异常未被处理
  ▶ 潜在影响：未处理的异常可能导致信息泄露或系统崩溃
  ▶ 修复建议：检查postIds的有效性并进行适当的错误处理

</审计报告>
2025-02-01T14:46:47.368256+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：如果未对postIds进行有效权限控制，攻击者可构造请求删除不当岗位记录
  ▶ 修复建议：在执行删除操作前，添加权限验证逻辑，以确保用户有权限进行删除

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：返回的岗位列表可能包含敏感信息，未进行适当过滤
  ▶ 修复建议：过滤返回数据，只返回用户允许查看的必要字段
</审计报告>
2025-02-01T14:46:47.371242+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts列表包含敏感信息（如用户角色、权限等），则可能通过该接口泄露给未授权用户
  ▶ 修复建议：确保posts中不包含敏感数据，或进行用户权限检查。

■ 漏洞类型：潜在的空指针异常（低危）
  ▶ 位置：L126
  ▶ 代码特征：
    List<SysPost> posts = postService.selectPostAll();
  ▶ 攻击向量：当postService返回null时，可能引发空指针异常
  ▶ 修复建议：在使用posts前进行null检查。
</审计报告>
2025-02-01T14:46:47.371242+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：文件路径遍历（高危）
  ▶ 位置：L56
  ▶ 代码特征：
    util.exportExcel(response, list, "岗位数据");
  ▶ 攻击向量：如果list中包含不受信任的文件名，攻击者可能利用路径操控，导出任意文件。
  ▶ 修复建议：确保导出文件名不受用户输入控制，进行严格验证和清理。

<审计通过>
2025-02-01T14:46:47.371242+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：错误信息中泄露了用户名，可能被攻击者用于暴力破解等进一步攻击。
  ▶ 修复建议：去除错误信息中的用户名，改为通用错误提示。

■ 漏洞类型：文件上传漏洞（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：未验证上传文件类型，可能导致上传恶意文件（例如PHP后门）。
  ▶ 修复建议：严格检查上传文件的MIME类型和扩展名，只允许特定类型文件的上传。

■ 漏洞类型：敏感信息未加密存储（中危）
  ▶ 位置：L110
  ▶ 代码特征：
    loginUser.getUser().setPassword(newPassword);
  ▶ 攻击向量：如果数据库或用户缓存被攻击者访问，可能会泄露用户密码。
  ▶ 修复建议：确保在存储前对密码使用强加密处理，如bcrypt算法。

</审计报告>
2025-02-01T14:46:47.371242+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71-L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：敏感信息（用户名）泄露，攻击者可利用错误信息进行用户探测
  ▶ 修复建议：避免在错误响应中暴露敏感信息

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L100-L104
  ▶ 代码特征：
    return error("新密码不能与旧密码相同");
  ▶ 攻击向量：同样的原因，可能泄露用户的旧密码信息
  ▶ 修复建议：简化错误信息，避免提示密码相关信息
</审计报告>
2025-02-01T14:46:54.851051+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：返回的错误信息泄露了用户的手机号码和邮箱查重逻辑，可能导致攻击者获取用户信息。
  ▶ 修复建议：改善错误信息，避免直接暴露用户敏感信息。

■ 漏洞类型：过度暴露（低危）
  ▶ 位置：L110
  ▶ 代码特征：
    loginUser.getUser().setPassword(newPassword);
  ▶ 攻击向量：如果攻击者获得对这个loginUser对象的访问权限，可以获取用户的新密码。
  ▶ 修复建议：考虑在更新密码后清除或重置敏感信息。

■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：未对文件路径进行严格验证，攻击者可尝试上传恶意文件如"../../../../etc/passwd"等，导致服务器文件泄露。
  ▶ 修复建议：增强文件上传的路径和文件类型验证，确保安全。

</审计报告>
2025-02-01T14:46:54.852048+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：未验证的用户输入（安全性）
  ▶ 位置：L49
  ▶ 代码特征：
    SysUser user = loginUser.getUser();
  ▶ 攻击向量：如果loginUser未经过验证，可能会返回未授权的用户信息
  ▶ 潜在影响：攻击者可以利用未验证的登录用户信息获取敏感信息
  ▶ 修复建议：确保loginUser是经过严格验证的用户对象。

■ 漏洞类型：缺乏输入验证（高危）
  ▶ 位置：L77-L78
  ▶ 代码特征：
    if (userService.updateUserProfile(currentUser) > 0)
  ▶ 攻击向量：如果currentUser包含恶意数据，可能导致数据库操作异常
  ▶ 潜在影响：可能引发数据泄露、数据损坏或数据库被攻击
  ▶ 修复建议：在调用更新服务之前，对currentUser的每个字段进行验证。

■ 漏洞类型：密码存储不当（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    newPassword = SecurityUtils.encryptPassword(newPassword);
  ▶ 攻击向量：如加密方法存在安全漏洞，可能导致密码暴露
  ▶ 潜在影响：攻击者可能通过分析加密方式破解用户密码
  ▶ 修复建议：审计和确保使用最新、安全的密码加密标准。

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L71-L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：返回的错误信息泄露了用户名，可能被攻击者利用进行社会工程学攻击
  ▶ 潜在影响：增加了用户信息被滥用的风险
  ▶ 修复建议：为用户错误返回信息提供通用的错误信息，不透露具体的用户名。
</审计报告>
2025-02-01T14:46:54.852048+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L49
  ▶ 代码特征：
    SysUser user = loginUser.getUser();
  ▶ 攻击向量：如果LoginUser未正确封装用户敏感信息，可能导致敏感数据暴露。
  ▶ 修复建议：确保LoginUser类不返回敏感字段，或采取措施保护敏感信息。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：通过捕获错误信息，攻击者可能通过用户名获取系统用户信息及其状态。
  ▶ 修复建议：将返回信息的用户相关信息进行模糊处理，避免直接透露用户名。

■ 漏洞类型：业务逻辑漏洞（中危）
  ▶ 位置：L63-L68
  ▶ 代码特征：
    currentUser.setNickName(user.getNickName());
  ▶ 攻击向量：如果未对nickname等用户输入进行过滤，可能导致恶意内容输入进而影响系统的稳定与安全。
  ▶ 修复建议：对用户传入的nickname等信息进行验证和过滤。

■ 漏洞类型：输入验证不严（中危）
  ▶ 位置：L69-L73
  ▶ 代码特征：
    if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))
  ▶ 攻击向量：如果phonenumber和email未进行格式验证，可能导致不当信息输入造成用户数据混乱。
  ▶ 修复建议：添加输入值的格式验证，确保符合预期格式。

</审计报告>
2025-02-01T14:46:54.852048+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L50
  ▶ 代码特征：
    AjaxResult ajax = AjaxResult.success(user);
  ▶ 攻击向量：返回成功时包含当前用户的完整信息可能导致信息泄露
  ▶ 修复建议：仅返回必要的用户信息而非完整的用户对象 

■ 漏洞类型：安全性考虑不足（中危）
  ▶ 位置：L71-L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：错误信息中直接使用用户名，可能被用作社交工程攻击
  ▶ 修复建议：抑制错误信息中的敏感数据，如用户名

■ 漏洞类型：缺失输入验证（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    newPassword = SecurityUtils.encryptPassword(newPassword);
  ▶ 攻击向量：未验证新密码的强度，可能导致弱密码被设置，增加被破解风险
  ▶ 修复建议：增加新密码的强度验证，例如长度、复杂度检查 

■ 漏洞类型：文件上传安全风险（高危）
  ▶ 位置：L128
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：文件上传功能缺乏严格的文件类型与大小限制可能导致恶意文件上传
  ▶ 修复建议：确保文件上传的文件类型以及尺寸限制，使用安全的文件存储方式

</审计报告>
2025-02-01T14:46:54.853061+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：密码安全漏洞（高危）
  ▶ 位置：L98-L106
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
    if (SecurityUtils.matchesPassword(newPassword, password))
  ▶ 攻击向量：如果密码存储未使用足够的加密措施，攻击者可能通过反向工程或密码审计获取密码信息。
  ▶ 修复建议：确保密码使用强加密算法存储，推荐使用bcrypt或argon2等标准加密库。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L100、L104
  ▶ 代码特征：
    return error("修改密码失败，旧密码错误");
    return error("新密码不能与旧密码相同");
  ▶ 攻击向量：错误信息直接向用户揭示了具体的验证失败原因，可能帮助攻击者推测系统中用户的有效密码。
  ▶ 修复建议：使用通用的错误消息，避免透露具体的错误原因，例如："修改密码失败，请检查输入的密码。" 
</审计报告>
2025-02-01T14:46:54.853061+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的文件上传（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：未对上传的文件类型和大小进行充分验证，攻击者可上传恶意文件（如PHP文件）导致代码执行
  ▶ 修复建议：实现文件类型和大小的验证，确保只允许安全类型的文件上传

■ 漏洞类型：密码安全弱点（中危）
  ▶ 位置：L98-L106
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
    newPassword = SecurityUtils.encryptPassword(newPassword);
  ▶ 攻击向量：如密码存储未使用强加密算法，攻击者可通过暴力破解或字典攻击获取用户密码
  ▶ 修复建议：使用强加密算法，并增加盐值机制保护密码
</审计报告>
2025-02-01T14:46:54.853061+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L31-L34
  ▶ 代码特征：
    if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))
  ▶ 攻击向量：攻击者可通过构造请求，探测系统配置，判断是否开启注册功能
  ▶ 潜在影响：利用此漏洞，攻击者可通过判别系统状态，进一步进行针对性攻击
  ▶ 修复建议：隐藏系统配置的查询结果，或在前端加入访问控制，以避免信息泄露

■ 漏洞类型：逻辑漏洞（中危）
  ▶ 位置：L35-L36
  ▶ 代码特征：
    String msg = registerService.register(user);
    return StringUtils.isEmpty(msg) ? success() : error(msg);
  ▶ 攻击向量：如果registerService.register(user)未正确处理用户输入，可能导致注册错误信息暴露
  ▶ 潜在影响：攻击者过程中可能通过返回的错误消息信息获取系统内部逻辑或其他用户信息
  ▶ 修复建议：改进register方法的异常处理逻辑，对错误信息进行过滤，避免直接暴露内部信息
</审计报告>
2025-02-01T14:46:54.853061+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：未处理的异常（中危）
  ▶ 位置：L35
  ▶ 代码特征：
    String msg = registerService.register(user);
  ▶ 攻击向量：用户输入可能导致registerService方法抛出异常，从而使注册流程中断
  ▶ 潜在影响：未处理的异常可能导致系统崩溃或未给用户适当的错误反馈
  ▶ 修复建议：加入异常处理机制，捕获可能出现的异常并返回友好的错误信息

<审计通过>
2025-02-01T14:46:54.855151+0800 | DEBUG | <审计通过>
2025-02-01T14:46:54.855151+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L63
  ▶ 代码特征：
    List<SysRole> list = roleService.selectRoleList(role);
  ▶ 攻击向量：未对role参数进行适当的验证和清洗，攻击者可以构造带有恶意数据的SysRole对象，从而导致敏感信息的泄露或不当访问
  ▶ 修复建议：对输入的role参数进行严格的验证和清洗

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L59
  ▶ 代码特征：
    public TableDataInfo list(SysRole role)
  ▶ 攻击向量：未对角色信息进行有效的权限控制，若攻击者拥有足够的权限，可能泄露角色列表信息
  ▶ 修复建议：在获取角色列表前，确保调用者有足够的权限
</审计报告>
2025-02-01T14:47:00.887159+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L72-L74
  ▶ 代码特征：
    List<SysRole> list = roleService.selectRoleList(role);
    util.exportExcel(response, list, "角色数据");
  ▶ 攻击向量：未对导出的角色数据进行敏感信息过滤，可能将敏感数据（如用户权限）泄露
  ▶ 修复建议：在导出前对list进行敏感信息过滤

■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L70
  ▶ 代码特征：
    public void export(HttpServletResponse response, SysRole role)
  ▶ 攻击向量：未对SysRole对象中的字段（如角色名）进行有效性校验，可能导致非法字符影响导出格式
  ▶ 修复建议：增加对role的字段有效性与安全性校验
</审计报告>
2025-02-01T14:47:00.887159+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L135
  ▶ 代码特征：
    loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));
  ▶ 攻击向量：如果用户输入的用户名未经过滤，攻击者可能会通过构造特定的用户输入获取敏感用户信息。比如，输入用户名为"admin' OR '1'='1"，可能导致SQL查询返回多条用户信息。
  ▶ 修复建议：对用户输入进行严格验证和过滤，避免直接使用其进行查询。

<审计通过>
</审计报告>
2025-02-01T14:47:00.887159+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：可能的权限泄露（中危）
  ▶ 位置：L136
  ▶ 代码特征：
    loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));
  ▶ 攻击向量：如果loginUser对象未经过严格身份验证，攻击者可能通过篡改loginUser对象，获取其他用户的权限数据。
  ▶ 修复建议：在设置权限前，确保loginUser是经过认证的用户，且其访问权限需要严格控制。

■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果SysDept对象的输入未经过验证，攻击者可能注入恶意数据，导致信息泄露或系统异常。
  ▶ 修复建议：在调用selectDeptTreeList方法前，对SysDept对象的字段进行验证和清洗。
</审计报告>
2025-02-01T14:47:00.887159+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：无访问控制（中危）
  ▶ 位置：L137
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：未验证loginUser的来源和权限，攻击者可能通过伪造请求设置其他用户的登录状态
  ▶ 修复建议：添加权限校验，确保只有授权用户能够调用此方法

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果selectDeptTreeList方法没有适当的访问控制，可能会泄露部门结构信息
  ▶ 修复建议：确保selectDeptTreeList方法具有适当的访问控制和输入验证
</审计报告>
2025-02-01T14:47:00.887159+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：未验证的参数（高危）
  ▶ 位置：L258
  ▶ 代码特征：
    ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));
  ▶ 攻击向量：如果roleId来自用户输入，可能构造roleId为负值或不合法值，导致不当访问或数据泄露
  ▶ 修复建议：对roleId进行有效性检查和验证，不允许使用未经验证的用户输入

■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果selectDeptTreeList方法未对传入的SysDept对象进行严格参数校验，可能导致过量数据返回
  ▶ 修复建议：在selectDeptTreeList中做好输入参数的验证和过滤，限制返回数据
</审计报告>
2025-02-01T14:47:00.894469+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：无授权访问（高危）
  ▶ 位置：L61-L66
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：未对传入的user对象进行授权校验，可能导致用户数据泄露
  ▶ 修复建议：在调用userService之前，增加对当前用户权限的检查

■ 漏洞类型：未处理的外部输入（中危）
  ▶ 位置：L254
  ▶ 代码特征：
    return success(deptService.selectDeptTreeList(dept));
  ▶ 攻击向量：dept中的外部输入未经过滤，可能导致不当访问
  ▶ 修复建议：对dept对象进行输入验证和清洗
</审计报告>
2025-02-01T14:47:00.894469+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L73
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：如果user的输入未经过严格校验，则可能导致敏感用户信息的泄露
  ▶ 修复建议：对user参数进行校验和过滤，确保只能导出合法用户数据

■ 漏洞类型：路径穿越（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    util.exportExcel(response, list, "用户数据");
  ▶ 攻击向量：如果ExcelUtil未对文件名进行正则校验，攻击者可能利用特殊字符构造文件名，实现路径穿越
  ▶ 修复建议：在exportExcel方法中对文件名进行严格校验

<审计通过>
</审计报告>
2025-02-01T14:47:00.894469+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：未验证的用户输入（高危）
  ▶ 位置：L254
  ▶ 代码特征：
    return success(deptService.selectDeptTreeList(dept));
  ▶ 攻击向量：如果dept参数未被验证，可以构造恶意数据导致数据泄露或SQL注入
  ▶ 修复建议：对dept参数进行严格的类型和内容验证

■ 漏洞类型：角色过滤逻辑失当（中危）
  ▶ 位置：L113-L114
  ▶ 代码特征：
    List<SysRole> roles = roleService.selectRoleAll();
    ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));
  ▶ 攻击向量：在未充分验证userId的情况下，攻击者可通过伪造admin角色来访问敏感信息
  ▶ 修复建议：对userId参数进行验证，确保调用者具备访问权限
</审计报告>
2025-02-01T14:47:00.895475+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏权限控制（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    deptService.checkDeptDataScope(user.getDeptId());
  ▶ 攻击向量：若user对象未经过充分验证，恶意用户可以伪造user对象，绕过限制访问其他部门数据。
  ▶ 修复建议：确保user对象来源于受信任的上下文，且在处理前进行适当的权限验证。

■ 漏洞类型：数据泄露（中危）
  ▶ 位置：L254
  ▶ 代码特征：
    return success(deptService.selectDeptTreeList(dept));
  ▶ 攻击向量：如dept输入未充分验证，恶意用户可能通过构造特定的dept请求，访问未授权的部门树数据。
  ▶ 修复建议：对dept参数进行严格的输入校验，确保只返回用户有权限访问的数据。
</审计报告>
2025-02-01T14:47:00.911021+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：缺乏用户验证（中危）
  ▶ 位置：L43-L46
  ▶ 代码特征：
    List<UserEntity> userList = new ArrayList<UserEntity>(users.values());
  ▶ 攻击向量：未经验证的用户访问用户列表接口，可能导致敏感用户信息泄露
  ▶ 修复建议：在userList方法中添加权限验证，确保只有授权用户能够访问

<审计通过>
</审计报告>
2025-02-01T14:47:05.522494+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L60
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：攻击者可以利用失败消息获取关于系统状态的信息，例如用户是否存在
  ▶ 修复建议：返回通用错误消息，避免泄露系统内部信息

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L61
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：攻击者可以利用失败消息获取关于系统状态的信息，例如用户是否存在
  ▶ 修复建议：返回通用错误消息，避免泄露系统内部信息
</审计报告>
2025-02-01T14:47:05.524017+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：潜在的空指针解引用（中危）
  ▶ 位置：L136-L141
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：如果mobile参数为null，将导致空指针异常。
  ▶ 修复建议：在设置mobile之前检查其值，确保不为null。

■ 漏洞类型：不安全的数据处理（中危）
  ▶ 位置：L136-L141
  ▶ 代码特征：
    public UserEntity(Integer userId, String username, String password, String mobile)
  ▶ 攻击向量：如果进入构造函数的mobile参数未经过检验，可能导致不符合格式的电话号码存储。
  ▶ 修复建议：在构造方法中对mobile进行格式验证，确保其符合预期的手机号码格式。
</审计报告>
2025-02-01T14:47:05.524017+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
<审计通过>
2025-02-01T14:47:05.524017+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：如果mobile的输入未经过验证，攻击者可以设置恶意值，可能导致数据损坏或不当处理
  ▶ 修复建议：在设置mobile值之前添加格式验证和敏感数据检查

■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L149-L152
  ▶ 代码特征：
    this.userId = userId;
  ▶ 攻击向量：如果userId的输入未经过验证，攻击者可以设置恶意用户ID，可能导致不当的用户关联或权限提升
  ▶ 修复建议：在设置userId值之前添加类型和范围验证
</审计报告>
2025-02-01T14:47:05.524017+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：mobile字段未经过验证，可能导致通过设置恶意数据影响后续处理。
  ▶ 潜在影响：若mobile字段用于后续业务逻辑处理，可能导致数据不一致或安全隐患（如用户数据被篡改）。

■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L154-L156
  ▶ 代码特征：
    return username;
  ▶ 攻击向量：username未经过验证，恶意用户可能构造合规输入以获取敏感信息。
  ▶ 潜在影响：可能引发信息泄露，攻击者获取系统用户名。

</审计报告>
2025-02-01T14:47:05.535165+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：未验证用户输入（中危）
  ▶ 位置：L159-L162
  ▶ 代码特征：
    public void setUsername(String username) {
        this.username = username;
    }
  ▶ 攻击向量：用户可输入恶意脚本，例如'<script>alert(1)</script>'，导致XSS攻击。
  ▶ 修复建议：对输入进行转义或校验。

■ 漏洞类型：未验证用户输入（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    public void setMobile(String mobile) {
        this.mobile = mobile;
    }
  ▶ 攻击向量：用户可输入其他数据类型，例如非手机号格式，可能导致后续逻辑错误。
  ▶ 修复建议：在设置手机号时增加格式校验。
</审计报告>
2025-02-01T14:47:05.535165+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L164-L166
  ▶ 代码特征：
    return password;
  ▶ 攻击向量：攻击者可以通过调用getPassword方法获取用户的密码信息
  ▶ 修复建议：禁止直接暴露敏感信息，考虑使用敏感数据的加密存储和处理

■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：若mobile输入未经过验证，可能导致不符合格式的手机号码存储
  ▶ 修复建议：在设置mobile之前，对输入进行格式验证
</审计报告>
2025-02-01T14:47:05.535165+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L169-L172, L180-L182
  ▶ 代码特征：
    public void setPassword(String password)
    {
        this.password = password;
    }
    this.mobile = mobile;
  ▶ 攻击向量：未对输入参数password和mobile进行验证，攻击者可通过构造特定输入（例如设置特殊字符或恶意代码）导致不当信息存储。
  ▶ 修复建议：对password和mobile参数进行严格验证和过滤，确保输入符合预期格式。

</审计报告>
2025-02-01T14:47:05.535165+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：参数缺乏验证（中危）
  ▶ 位置：L180
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：未对mobile输入进行验证，攻击者可以设置不合法的手机号码，如输入"1234567890abc"组成无效手机号
  ▶ 修复建议：在setMobile方法中加入输入格式验证，确保mobile符合手机号格式

■ 漏洞类型：参数缺乏验证（中危）
  ▶ 位置：L175
  ▶ 代码特征：
    return mobile;
  ▶ 攻击向量：getMobile方法未验证用户的mobile是否安全，可能泄露用户信息
  ▶ 修复建议：在getMobile方法中增加权限验证，确保只有授权用户可以获取mobile信息

</审计报告>
2025-02-01T14:47:05.535165+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\tool\TestController.java
■ 漏洞类型：输入验证缺失（中危）
  ▶ 位置：L180-L182
  ▶ 代码特征：
    this.mobile = mobile;
  ▶ 攻击向量：攻击者可以通过不符合格式的输入，例如包含特殊字符来注入不安全的代码
  ▶ 潜在影响：可能导致应用异常行为、数据破坏或绕过安全控制
  ▶ 修复建议：应对mobile进行格式校验，确保符合手机号码的正则表达式

</审计报告>
2025-02-01T14:47:11.849155+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L66-L67
  ▶ 代码特征：
    .securitySchemes(securitySchemes())
    .securityContexts(securityContexts())
  ▶ 攻击向量：如果安全模式未正确配置或认证机制不健全，可能导致API接口暴露给未授权用户
  ▶ 修复建议：确保securitySchemes与securityContexts的实现安全，使用适当的权限控制

■ 漏洞类型：依赖注入风险（中危）
  ▶ 位置：L34
  ▶ 代码特征：
    @Autowired
    private RuoYiConfig ruoyiConfig;
  ▶ 攻击向量：如果RuoYiConfig中含有敏感信息且未妥善处理，可能导致敏感数据泄露
  ▶ 修复建议：对RuoYiConfig的配置进行审计，避免直接暴露敏感信息
</审计报告>
2025-02-01T14:47:11.849155+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L120
  ▶ 代码特征：
    .contact(new Contact(ruoyiConfig.getName(), null, null))
  ▶ 攻击向量：通过Swagger API文档暴露系统内部人员信息
  ▶ 修复建议：避免在Swagger文档中展示敏感的联系信息

■ 漏洞类型：已知配置（信息）
  ▶ 位置：L122
  ▶ 代码特征：
    .version("版本号:" + ruoyiConfig.getVersion())
  ▶ 攻击向量：暴露系统版本信息可能被攻击者用于推测已知漏洞
  ▶ 修复建议：删除版本信息或使用通用版本编号
</审计报告>
2025-02-01T14:47:11.849155+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\core\config\SwaggerConfig.java
■ 漏洞类型：API暴露风险（中危）
  ▶ 位置：L60-L63
  ▶ 代码特征：
    .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))
    .paths(PathSelectors.any())
  ▶ 攻击向量：所有API接口均被暴露，可能导致敏感接口被未授权访问
  ▶ 修复建议：限制API暴露范围，仅暴露必要的接口，并进行访问控制

■ 漏洞类型：安全上下文配置不足（中危）
  ▶ 位置：L67
  ▶ 代码特征：
    .securityContexts(securityContexts())
  ▶ 攻击向量：未正确配置安全上下文，可能导致Swagger生成的文档存在安全隐患
  ▶ 修复建议：明确配置安全上下文，确保只有经过验证的请求可以访问Swagger界面
</审计报告>
2025-02-01T14:47:11.850153+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L53
  ▶ 代码特征：
    .enable(enabled)
  ▶ 攻击向量：enabled参数未明确定义，可能导致敏感信息暴露于Swagger接口文档中
  ▶ 修复建议：确保enabled参数根据环境配置妥善管理，避免在生产环境中启用Swagger

■ 漏洞类型：不安全的API文档配置（中危）
  ▶ 位置：L57-L63
  ▶ 代码特征：
    .select()
    .paths(PathSelectors.any())
  ▶ 攻击向量：使用PathSelectors.any()将暴露所有API，可能允许攻击者访问敏感接口
  ▶ 修复建议：限制暴露的API路径，采用更精细的选择器来控制接口的可见性
</审计报告>
2025-02-01T14:47:11.850153+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L57-L63
  ▶ 代码特征：
    .paths(PathSelectors.any())
  ▶ 攻击向量：开放所有路径可能导致敏感接口暴露
  ▶ 修复建议：限制开放的接口路径，确保只暴露必要的API

■ 漏洞类型：未保护的API文档（中危）
  ▶ 位置：L66-L68
  ▶ 代码特征：
    .securityContexts(securityContexts())
    .securitySchemes(securitySchemes())
  ▶ 攻击向量：可能存在未授权用户访问Swagger UI的风险
  ▶ 修复建议：在生产环境中限制对Swagger API文档的访问，需身份验证
</审计报告>
2025-02-01T14:47:11.858013+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：配置缺失（中危）
  ▶ 位置：L53-L67
  ▶ 代码特征：
    .enable(enabled)
    .securitySchemes(securitySchemes())
    .securityContexts(securityContexts())
  ▶ 攻击向量：未适当的安全配置可能导致Swagger界面可被未授权访问，攻击者可查看API接口详情
  ▶ 修复建议：确保在Swagger配置中使用安全机制以限制对API文档的访问，建议增加认证策略

<审计通过>
</审计报告>
2025-02-01T14:47:11.858013+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏安全性配置（中危）
  ▶ 位置：L89
  ▶ 代码特征：
    .securityReferences(defaultAuth())
  ▶ 攻击向量：未对securityReferences配置进行严格验证，可能导致未授权访问。
  ▶ 修复建议：确保默认认证配置具备适当的权限控制或配置更严格的权限验证措施。

<审计通过>
</审计报告>
2025-02-01T14:47:11.858013+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：硬编码凭证（信息）
  ▶ 位置：L100
  ▶ 代码特征：
    AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");
  ▶ 修复建议：确保不硬编码敏感信息，并使用配置文件或环境变量来管理权限设置
</审计报告>
2025-02-01T14:47:11.860742+0800 | INFO | Agent_2计算完毕，输出文件:./output/ccbd72ea49cd2e4f9a756a65bfba1dd6_审计结果.log
2025-02-01T14:47:11.861754+0800 | SUCCESS | 输出成功,请在目录:./output查看
2025-02-01T14:49:12.129423+0800 | INFO | 加载配置文件config.yaml
2025-02-01T14:49:12.130419+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T14:49:12.131417+0800 | INFO | 当前命令行模式:True
2025-02-01T14:49:12.131417+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T14:49:12.131417+0800 | INFO | 当前输出文件:./output
2025-02-01T14:49:12.137911+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T14:49:12.137911+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T14:49:12.137911+0800 | INFO | 项目依赖解析文件存在，直接跳过
2025-02-01T14:49:12.137911+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T14:49:12.146413+0800 | INFO | 当前batch_size:10
2025-02-01T14:49:12.146413+0800 | INFO | 数据大小:138
2025-02-01T14:49:12.146413+0800 | DEBUG | ['<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi\n        当前代码源码: 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>\n        源码摘要描述:ruoyi-admin项目依赖于父级项目ruoyi\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-devtools\n        当前代码源码:21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于spring-boot-devtools库\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:springfox-boot-starter\n        当前代码源码:28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger3库springfox-boot-starter\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:swagger-models\n        当前代码源码:34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger-models库，版本为1.6.2\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:mysql-connector-java\n        当前代码源码:41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于Mysql驱动包\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-framework\n        当前代码源码:48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于核心模块ruoyi-framework\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-quartz\n        当前代码源码:54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于定时任务模块ruoyi-quartz\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-generator\n        当前代码源码:60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于代码生成模块ruoyi-generator\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-maven-plugin\n        当前代码源码:68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n73:                     <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->\n74:                 </configuration>\n75:                 <executions>\n76:                     <execution>\n77:                         <goals>\n78:                             <goal>repackage</goal>\n79:                         </goals>\n80:                     </execution>\n81:                 </executions>\n82:             </plugin>\n        源码摘要描述:ruoyi-admin项目使用spring-boot-maven-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.path\n        当前代码源码: 4: \t<property name="log.path" value="/home/ruoyi/logs" />\n        源码摘要描述:定义日志存放路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_error\n        当前代码源码:38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>\n        源码摘要描述:定义系统错误日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:com.ruoyi\n        当前代码源码:75: \t<logger name="com.ruoyi" level="info" />\n        源码摘要描述:控制com.ruoyi模块的日志级别为info\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:org.springframework\n        当前代码源码:77: \t<logger name="org.springframework" level="warn" />\n        源码摘要描述:控制org.springframework模块的日志级别为warn\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:configuration\n        被调用代码单元名称:settings\n        当前代码源码: 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:configuration提供全局参数设置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:SpringApplication\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用SpringApplication.run方法以启动应用程序\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ISysConfigService\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法调用configService的selectCaptchaEnabled方法来获取验证码是否启用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Producer\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法根据验证码类型调用captchaProducer或captchaProducerMath生成验证码文本和图像\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:RedisCache\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将验证码存储到redis中，通过调用redisCache的setCacheObject方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController中的fileDownload方法验证文件下载合法性并下载指定文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:StringUtils\n        当前代码源码: 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n        源码摘要描述:CommonController中的fileDownload方法处理非法文件名称的异常抛出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n        源码摘要描述:CommonController中的fileDownload方法获取下载路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUploadUtils\n        当前代码源码: 83:             String fileName = FileUploadUtils.upload(filePath, file);\n        源码摘要描述:CommonController中的uploadFile方法处理文件上传并返回新文件名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:serverConfig\n        当前代码源码: 84:             String url = serverConfig.getUrl() + fileName;\n        源码摘要描述:CommonController中的uploadFile方法组合存储文件url\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController中的uploadFile方法创建成功响应\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:113:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n114:     @DeleteMapping("/clearCacheAll")\n115:     public AjaxResult clearCacheAll()\n116:     {\n117:         Collection<String> cacheKeys = redisTemplate.keys("*");\n118:         redisTemplate.delete(cacheKeys);\n119:         return AjaxResult.success();\n120:     }\n        源码摘要描述:CacheController类的clearCacheAll方法清除所有缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 48:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 49:     @GetMapping()\n 50:     public AjaxResult getInfo() throws Exception\n 51:     {\n 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n 55: \n 56:         Map<String, Object> result = new HashMap<>(3);\n 57:         result.put("info", info);\n 58:         result.put("dbSize", dbSize);\n 59: \n 60:         List<Map<String, String>> pieList = new ArrayList<>();\n 61:         commandStats.stringPropertyNames().forEach(key -> {\n 62:             Map<String, String> data = new HashMap<>(2);\n 63:             String property = commandStats.getProperty(key);\n 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n 66:             pieList.add(data);\n 67:         });\n 68:         result.put("commandStats", pieList);\n 69:         return AjaxResult.success(result);\n 70:     }\n        源码摘要描述:CacheController类的getInfo方法返回缓存相关信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.info\n        当前代码源码: 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n        源码摘要描述:redisTemplate调用connection的info方法获取Redis信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.dbSize\n        当前代码源码: 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n        源码摘要描述:redisTemplate调用connection的dbSize方法获取数据库大小\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:keys\n        当前代码源码: 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n        源码摘要描述:redisTemplate调用keys方法获取匹配特定模式的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:opsForValue\n        当前代码源码: 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);\n        源码摘要描述:redisTemplate调用opsForValue方法获取Value相关操作接口\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:101:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除指定的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:removeStart\n        当前代码源码: 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n        源码摘要描述:StringUtils的removeStart方法去除字符串开头的特定前缀\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类的getInfo方法调用AjaxResult的success方法返回服务器信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ISysLogininforService\n        当前代码源码:40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);\n        源码摘要描述:SysLogininforController类通过logininforService调用selectLogininforList方法获取登录信息列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");\n        源码摘要描述:SysLogininforController类通过ExcelUtil导出登录日志到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);\n        源码摘要描述:SysOperlogController类调用operLogService的selectOperLogList方法以获取操作日志列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:46:     public void export(HttpServletResponse response, SysOperLog operLog)\n47:     {\n48:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n49:         ExcelUtil<SysOperLog> util = new ExcelUtil<SysOperLog>(SysOperLog.class);\n50:         util.exportExcel(response, list, "操作日志");\n        源码摘要描述:SysOperlogController类调用ExcelUtil的exportExcel方法将操作日志导出为Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的keys方法获取匹配的登录TOKEN键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:userOnlineService\n        当前代码源码:52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n        源码摘要描述:SysUserOnlineController类调用userOnlineService的selectOnlineByInfo方法获取在线用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:getDataTable\n        当前代码源码:69:         return getDataTable(userOnlineList);\n        源码摘要描述:SysUserOnlineController类调用getDataTable方法返回用户列表的表格数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码: 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);\n        源码摘要描述:SysConfigController类获取参数配置列表通过configService调用selectConfigList函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysConfig config)\n 53:     {\n 54:         List<SysConfig> list = configService.selectConfigList(config);\n 55:         ExcelUtil<SysConfig> util = new ExcelUtil<SysConfig>(SysConfig.class);\n 56:         util.exportExcel(response, list, "参数数据");\n        源码摘要描述:SysConfigController类导出参数数据通过ExcelUtil调用exportExcel函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:119:     public AjaxResult remove(@PathVariable Long deptId)\n120:     {\n121:         if (deptService.hasChildByDeptId(deptId))\n122:         {\n123:             return warn("存在下级部门,不允许删除");\n124:         }\n125:         if (deptService.checkDeptExistUser(deptId))\n126:         {\n127:             return warn("部门存在用户,不允许删除");\n128:         }\n129:         deptService.checkDeptDataScope(deptId);\n130:         return toAjax(deptService.deleteDeptById(deptId));\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现删除部门功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码: 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n 45:         return success(depts);\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现获取部门列表功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n        源码摘要描述:SysDictDataController类调用dictDataService服务获取字典数据列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n        源码摘要描述:SysDictDataController类调用ExcelUtil导出字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n        源码摘要描述:SysDictDataController类调用dictTypeService获取指定类型的字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 25: /**\n 26:  * 数据字典信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dict/type")\n 32: public class SysDictTypeController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n 36: \n 37:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n 45: \n 46:     @Log(title = "字典类型", businessType = BusinessType.EXPORT)\n 47:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");\n 54:     }\n 55: \n 56:     /**\n 57:      * 查询字典类型详细\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n 65: \n 66:     /**\n 67:      * 新增字典类型\n 68:      */\n 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n 81: \n 82:     /**\n 83:      * 修改字典类型\n 84:      */\n 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 删除字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n108:     }\n109: \n110:     /**\n111:      * 刷新字典缓存\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 获取字典选择框列表\n124:      */\n125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n131: }\n        源码摘要描述:SysDictTypeController类通过dictTypeService引用字典类型相关服务\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeList\n        当前代码源码: 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n        源码摘要描述:SysDictTypeController类调用dictTypeService查询字典类型列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeById\n        当前代码源码: 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService查询特定字典类型的详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:checkDictTypeUnique\n        当前代码源码: 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n        源码摘要描述:SysDictTypeController类在新增操作中调用dictTypeService检查字典类型唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:insertDictType\n        当前代码源码: 79:         return toAjax(dictTypeService.insertDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService新增字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:updateDictType\n        当前代码源码: 95:         return toAjax(dictTypeService.updateDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService更新字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:deleteDictTypeByIds\n        当前代码源码:106:         dictTypeService.deleteDictTypeByIds(dictIds);\n        源码摘要描述:SysDictTypeController类通过dictTypeService删除字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:resetDictCache\n        当前代码源码:118:         dictTypeService.resetDictCache();\n        源码摘要描述:SysDictTypeController类调用dictTypeService刷新字典缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:StringUtils\n        当前代码源码:25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类访问index方法，使用StringUtils格式化字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysLoginService\n        当前代码源码:48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;\n        源码摘要描述:SysLoginController的login方法通过调用loginService的login方法进行用户登录验证\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SecurityUtils\n        当前代码源码:64:     @GetMapping("getInfo")\n65:     public AjaxResult getInfo()\n66:     {\n67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n68:         SysUser user = loginUser.getUser();\n        源码摘要描述:SysLoginController的getInfo方法通过调用SecurityUtils获取当前登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysPermissionService\n        当前代码源码:70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);\n        源码摘要描述:SysLoginController的getInfo方法调用permissionService获取用户角色和权限集合\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:TokenService\n        当前代码源码:76:             tokenService.refreshToken(loginUser);\n        源码摘要描述:SysLoginController的getInfo方法调用tokenService刷新令牌\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码:140:         return toAjax(menuService.deleteMenuById(menuId));\n        源码摘要描述:SysMenuController类通过menuService调用deleteMenuById删除菜单\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码: 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);\n        源码摘要描述:SysMenuController类通过menuService调用selectMenuList方法获取菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }\n        源码摘要描述:SysNoticeController类通过noticeService调用deleteNoticeByIds方法删除通知公告\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);\n        源码摘要描述:SysNoticeController类通过noticeService调用selectNoticeList方法获取通知公告列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService\n        当前代码源码: 35:     private ISysPostService postService;\n        源码摘要描述:SysPostController类中postService属性用于调用ISysPostService接口的方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:startPage\n        当前代码源码: 44:         startPage();\n        源码摘要描述:SysPostController类中的list方法调用startPage用于分页处理\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostList\n        当前代码源码: 45:         List<SysPost> list = postService.selectPostList(post);\n        源码摘要描述:SysPostController类中的list方法调用postService的selectPostList获取岗位列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:getDataTable\n        当前代码源码: 46:         return getDataTable(list);\n        源码摘要描述:SysPostController类中的list方法调用getDataTable将列表数据封装成TableDataInfo\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:new ExcelUtil\n        当前代码源码: 55:         ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);\n        源码摘要描述:SysPostController类中的export方法创建ExcelUtil对象以处理Excel导出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostById\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用postService的selectPostById获取岗位详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用success返回获取岗位信息的成功结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostNameUnique\n        当前代码源码: 77:         if (!postService.checkPostNameUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostNameUnique检查岗位名称唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:error\n        当前代码源码: 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的add方法调用error返回岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostCodeUnique\n        当前代码源码: 81:         else if (!postService.checkPostCodeUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostCodeUnique检查岗位编码唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setCreateBy\n        当前代码源码: 85:         post.setCreateBy(getUsername());\n        源码摘要描述:SysPostController类中的add方法设置岗位创建者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.insertPost\n        当前代码源码: 86:         return toAjax(postService.insertPost(post));\n        源码摘要描述:SysPostController类中的add方法调用postService的insertPost插入新岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:Error\n        当前代码源码: 99:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的edit方法调用error返回修改岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setUpdateBy\n        当前代码源码:105:         post.setUpdateBy(getUsername());\n        源码摘要描述:SysPostController类中的edit方法设置岗位更新者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.updatePost\n        当前代码源码:106:         return toAjax(postService.updatePost(post));\n        源码摘要描述:SysPostController类中的edit方法调用postService的updatePost更新岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.deletePostByIds\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用postService的deletePostByIds删除岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:toAjax\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用toAjax返回删除结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostAll\n        当前代码源码:126:         List<SysPost> posts = postService.selectPostAll();\n        源码摘要描述:SysPostController类中的optionselect方法调用postService的selectPostAll获取所有岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类提供个人信息的获取和更新功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:FileUploadUtils\n        被调用代码单元名称:String\n        当前代码源码:127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n        源码摘要描述:用于处理用户头像的上传\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:configService\n        当前代码源码:28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用configService的selectConfigByKey方法检查注册功能是否开启\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用registerService的register方法进行用户注册\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:roleService\n        当前代码源码: 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);\n        源码摘要描述:SysRoleController类通过roleService调用selectRoleList方法获取角色列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");\n        源码摘要描述:SysRoleController类通过ExcelUtil导出角色数据到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:userService\n        当前代码源码:135:                 loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));\n        源码摘要描述:SysRoleController类通过userService调用selectUserByUserName方法获取用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:permissionService\n        当前代码源码:136:                 loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));\n        源码摘要描述:SysRoleController类通过permissionService获取用户权限\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:tokenService\n        当前代码源码:137:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysRoleController类通过tokenService设置登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptListByRoleId方法获取部门列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:userService\n        当前代码源码: 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n 66:     }\n        源码摘要描述:SysUserController类中的list方法获取用户列表，调用userService的selectUserList方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");\n        源码摘要描述:SysUserController类中的export方法导出用户列表到Excel，调用ExcelUtil的exportExcel方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:roleService\n        当前代码源码:113:         List<SysRole> roles = roleService.selectRoleAll();\n114:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));\n        源码摘要描述:SysUserController类中的getInfo方法获取用户角色信息，调用roleService的selectRoleAll方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:127:         deptService.checkDeptDataScope(user.getDeptId());\n        源码摘要描述:SysUserController类中的add方法检查部门数据权限，调用deptService的checkDeptDataScope方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.ok\n        当前代码源码: 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);\n        源码摘要描述:TestController类的userList方法获取用户列表并返回R对象\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码: 58:         else\n 59:         {\n 60:             return R.fail("用户不存在");\n 61:         }\n        源码摘要描述:TestController类的getUser方法在用户不存在时返回失败信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:StringUtils.isNull\n        当前代码源码:136:     public UserEntity(Integer userId, String username, String password, String mobile)\n137:     {\n138:         this.userId = userId;\n139:         this.username = username;\n140:         this.password = password;\n141:         this.mobile = mobile;\n        源码摘要描述:UserEntity类构造方法用于初始化用户对象的各个属性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:Integer getUserId\n        当前代码源码:144:     public Integer getUserId()\n145:     {\n146:         return userId;\n        源码摘要描述:UserEntity类的getUserId方法获取用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUserId\n        当前代码源码:149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }\n        源码摘要描述:UserEntity类的setUserId方法设置用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getUsername\n        当前代码源码:154:     public String getUsername()\n155:     {\n156:         return username;\n        源码摘要描述:UserEntity类的getUsername方法获取用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUsername\n        当前代码源码:159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }\n        源码摘要描述:UserEntity类的setUsername方法设置用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getPassword\n        当前代码源码:164:     public String getPassword()\n165:     {\n166:         return password;\n        源码摘要描述:UserEntity类的getPassword方法获取用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setPassword\n        当前代码源码:169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }\n        源码摘要描述:UserEntity类的setPassword方法设置用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getMobile\n        当前代码源码:175:     {\n176:         return mobile;\n177:     }\n        源码摘要描述:UserEntity类的getMobile方法获取用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 31: public class SwaggerConfig\n 32: {\n 33:     /** 系统基础配置 */\n 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SwaggerConfig类用于配置Swagger2的接口文档，依赖RuoYiConfig作为系统基础配置\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:RequestHandlerSelectors\n        当前代码源码: 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n        源码摘要描述:Docket对象使用RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)获取带有@ApiOperation注解的方法\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:PathSelectors\n        当前代码源码: 63:                 .paths(PathSelectors.any())\n        源码摘要描述:Docket对象调用PathSelectors.any()来设置请求路径的选择器\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securitySchemes\n        当前代码源码: 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securitySchemes()方法配置安全模式的Scheme\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_1>']
2025-02-01T14:49:17.908998+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：依赖漏洞（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version> 
  ▶ 攻击向量：使用maven-war-plugin的3.1.0版本存在已知的安全漏洞，例如在构建过程中可能引入不安全的代码，攻击者可藉此进行代码注入或其他攻击
  ▶ 修复建议：更新maven-war-plugin至最新稳定版以减轻安全风险

■ 漏洞类型：未指定的父项目版本（中危）
  ▶ 位置：L8
  ▶ 代码特征：
    <version>3.8.9</version>
  ▶ 攻击向量：未指定父项目的版本可能导致构建不一致及未审计的依赖项逃避安全审计，攻击者可能利用旧版本中存在的漏洞
  ▶ 修复建议：显式指定父项目的稳定和安全版本
</审计报告>
2025-02-01T14:49:17.908998+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用不安全的开发工具（中危）
  ▶ 位置：L21-L24
  ▶ 代码特征：
    <artifactId>spring-boot-devtools</artifactId>
  ▶ 攻击向量：开发工具可能导致敏感信息泄露或调试信息暴露，攻击者可通过这些信息获取系统内部状态
  ▶ 修复建议：在生产环境中移除spring-boot-devtools依赖

■ 漏洞类型：maven-war-plugin版本过旧（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用过旧的插件版本可能存在已知漏洞，攻击者可以利用这些漏洞进行恶意活动
  ▶ 修复建议：升级maven-war-plugin到最新稳定版本
</审计报告>
2025-02-01T14:49:17.908998+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的依赖（中危）
  ▶ 位置：L30
  ▶ 代码特征：
    <artifactId>springfox-boot-starter</artifactId>
  ▶ 攻击向量：使用已知存在安全漏洞的版本，可能导致信息泄露或远程代码执行攻击
  ▶ 修复建议：更新到最新版本，定期检查依赖的安全性

<审计通过>
</审计报告>
2025-02-01T14:49:17.908998+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用过时依赖（中危）
  ▶ 位置：L36-L38
  ▶ 代码特征：
    <artifactId>swagger-models</artifactId>
    <version>1.6.2</version>
  ▶ 攻击向量：swagger-models库存在已知漏洞，攻击者可能利用这些漏洞进行安全攻击
  ▶ 修复建议：升级swagger-models到最新版本

■ 漏洞类型：配置缺陷（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：未正确配置failOnMissingWebXml可能导致WAR包缺少必要的web.xml文件，从而引发安全问题
  ▶ 修复建议：确保需要web.xml文件的项目设置为true以增强配置的安全性
</审计报告>
2025-02-01T14:49:17.908998+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用过时的库（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin 3.1.0版本已知存在多个安全漏洞，可能被利用进行远程代码执行。
  ▶ 修复建议：升级至最新稳定版本的maven-war-plugin。

■ 漏洞类型：使用过时的库（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    <artifactId>mysql-connector-java</artifactId>
  ▶ 攻击向量：mysql-connector-java未指定版本，可能导致使用一个不安全的版本，存在SQL注入等安全风险。
  ▶ 修复建议：明确指定mysql-connector-java的安全版本。

</审计报告>
2025-02-01T14:49:17.913427+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的依赖（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用的maven-war-plugin版本存在已知安全漏洞，可能导致构建的应用程序容易受到攻击
  ▶ 修复建议：升级到最新版本的maven-war-plugin，并定期检查依赖的安全性
</审计报告>
2025-02-01T14:49:17.913427+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在依赖漏洞（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用的maven-war-plugin版本3.1.0存在已知漏洞，可能被攻击者利用
  ▶ 修复建议：升级maven-war-plugin至最新稳定版本以修复已知安全问题

■ 漏洞类型：潜在依赖漏洞（中危）
  ▶ 位置：L55
  ▶ 代码特征：
    <artifactId>ruoyi-quartz</artifactId>
  ▶ 攻击向量：若ruoyi-quartz存在漏洞且未及时更新，可能导致安全风险
  ▶ 修复建议：定期检查ruoyi-quartz的安全漏洞并及时更新
</审计报告>
2025-02-01T14:49:17.913427+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：XML外部实体注入（XXE）（高危）
  ▶ 位置：L84-L90
  ▶ 代码特征：
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
            <warName>${project.artifactId}</warName>
        </configuration>
    </plugin>
  ▶ 攻击向量：恶意构造的XML内容可能导致外部实体被解析，泄露服务器文件，或引发拒绝服务攻击。
  ▶ 修复建议：在解析XML文件时禁用外部实体的加载。

■ 漏洞类型：未验证的依赖（中危）
  ▶ 位置：L60-L62
  ▶ 代码特征：
    <dependency>
        <groupId>com.ruoyi</groupId>
        <artifactId>ruoyi-generator</artifactId>
    </dependency>
  ▶ 攻击向量：依赖的ruoyi-generator模块未明确版本，可能引入不受信任或有漏洞的版本。
  ▶ 修复建议：为依赖项指定固定版本，定期更新并审计依赖库。

</审计报告>
2025-02-01T14:49:17.914463+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：插件版本过时（低危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>  // maven-war-plugin
  ▶ 修复建议：考虑升级到最新版本，以获得安全性修复和新功能

■ 漏洞类型：插件版本过时（低危）
  ▶ 位置：L71
  ▶ 代码特征：
    <version>2.5.15</version>  // spring-boot-maven-plugin
  ▶ 修复建议：考虑升级到最新版本，以获得安全性修复和新功能
</审计报告>
2025-02-01T14:49:17.914463+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用过时插件（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin版本3.1.0存在已知的安全漏洞，攻击者可能利用这些漏洞进行不当访问。
  ▶ 修复建议：更新maven-war-plugin到最新版本以确保安全性。

<审计通过>
2025-02-01T14:49:22.149169+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L4
  ▶ 代码特征：
    <property name="log.path" value="/home/ruoyi/logs" />
  ▶ 攻击向量：日志文件存放路径明文配置，攻击者可通过路径猜测获取敏感信息
  ▶ 修复建议：将日志路径配置为相对路径或使用环境变量进行配置

<审计通过>
</审计报告>
2025-02-01T14:49:22.149169+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T14:49:22.149169+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62-L65
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
    <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>
  ▶ 攻击向量：如果log.path路径被恶意用户知晓，可能导致敏感日志文件暴露
  ▶ 修复建议：确保日志路径不对外暴露，使用安全的存储位置

<审计通过>
2025-02-01T14:49:22.149169+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L17-L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：如果log.path未进行适当的验证或限制，攻击者可以写入任意路径，导致敏感信息泄露
  ▶ 修复建议：确保${log.path}的值是安全且用户可访问的路径，并进行严格的权限控制

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62-L72
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：攻击者可以尝试获取日志文件访问权限，泄露系统用户访问记录
  ▶ 修复建议：审计和限制对日志文件的访问权限，确保敏感信息不会暴露

</审计报告>
2025-02-01T14:49:22.149169+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L39
  ▶ 代码特征：
    <file>${log.path}/sys-error.log</file>
  ▶ 攻击向量：如果log.path被外部用户控制，可能导致日志文件路径曝光，从而引发敏感信息泄露
  ▶ 修复建议：确保log.path为安全、非公开的文件路径

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：同样，如果log.path被外部用户控制，可能导致用户访问日志文件路径曝光，从而引发敏感信息泄露
  ▶ 修复建议：确保log.path为安全、非公开的文件路径
</审计报告>
2025-02-01T14:49:22.149169+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径可被外部控制（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：如果${log.path}的值可以被外部输入影响，攻击者可能通过修改日志路径注入恶意路径，导致日志文件被写入到不安全的位置
  ▶ 修复建议：确保${log.path}是由可信来源控制，必要时使用静态路径代替

■ 漏洞类型：日志泄露（中危）
  ▶ 位置：L70
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：如果${log.pattern}中包含敏感信息，可能会导致敏感数据在日志中暴露
  ▶ 修复建议：审核日志模式配置，确保不记录敏感信息
</审计报告>
2025-02-01T14:49:22.150561+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L90-L92
  ▶ 代码特征：
    <logger name="sys-user" level="info">
  ▶ 攻击向量：日志记录可能包含敏感信息
  ▶ 潜在影响：攻击者可能通过分析日志获取用户数据或系统信息，进而进行进一步攻击
  ▶ 修复建议：审查日志内容，确保不记录敏感信息

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    <logger name="com.ruoyi" level="info" />
  ▶ 攻击向量：日志记录可能包含敏感信息
  ▶ 潜在影响：同上，攻击者可能通过分析日志获取用户数据或系统信息，进而进行进一步攻击
  ▶ 修复建议：审查日志内容，确保不记录敏感信息
</审计报告>
2025-02-01T14:49:22.150561+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L90
  ▶ 代码特征：
    <logger name="sys-user" level="info">
  ▶ 攻击向量：通过设置日志级别为info，可能泄露用户访问的敏感信息。
  ▶ 修复建议：将日志级别调整为warn或error以减少信息泄露风险。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L77
  ▶ 代码特征：
    <logger name="org.springframework" level="warn" />
  ▶ 修复建议：考虑根据具体需求调整日志级别，以避免潜在敏感信息的暴露。
</审计报告>
2025-02-01T14:49:22.150561+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：攻击者可以通过错误日志或分析程序获取日志文件存储路径，可能暴露敏感信息
  ▶ 修复建议：使用更安全的日志处理方式，例如将日志文件存储路径设置为环境变量，或加密

■ 漏洞类型：日志记录不足（信息）
  ▶ 位置：L90-L92
  ▶ 代码特征：
    <logger name="sys-user" level="info">
  ▶ 攻击向量：如果没有更细粒度的日志记录，可能导致关键安全事件被遗漏
  ▶ 修复建议：考虑增加调试或错误级别日志记录，以便于更好地跟踪安全事件
</审计报告>
2025-02-01T14:49:22.150561+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志泄露（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <appender-ref ref="file_error" />
  ▶ 攻击向量：错误日志未进行适当的过滤和处理，可能泄露敏感信息，例如堆栈跟踪和用户输入
  ▶ 修复建议：设置适当的日志级别并对输出进行敏感信息过滤

<审计通过>
</审计报告>
2025-02-01T15:32:42.198269+0800 | INFO | 加载配置文件config.yaml
2025-02-01T15:32:42.201771+0800 | INFO | {'openai': {'api_key': 'sk-BKR5huAmRgTd1qjwP6AWocZXvmgTjJ2UI46uiHi104YT4Jnh', 'base_url': 'https://api.openai-proxy.org/v1', 'max_per_tokens': 4096, 'model': 'gpt-4o-mini'}, 'project': {'config_file_ext': ['.yaml', '.xml', '.json', '.conf', '.ini', '.toml', '.config', '.settings'], 'exclude_dir': ['node_modules', 'dist', 'build', 'out', 'venv', '.venv', 'env', 'target', 'vendor', 'bower_components', '.git', '.svn', '.hg', '.idea', '.vscode', '.metadata', 'nbproject', 'test', 'tests', 'spec', 'specs', 'tmp', 'temp', 'cache', 'logs', 'docker', 'containers', 'k8s', 'kube', '.circleci', '.github', '.travis', 'docs', 'doc', '.secrets', '.env'], 'exclude_max_file_size': 1.0, 'source_file_ext': ['.py', '.go', '.js', '.java', '.cpp', '.php', '.aspx', '.asp', '.c', '.cs']}}
2025-02-01T15:32:42.201771+0800 | INFO | 当前命令行模式:True
2025-02-01T15:32:42.202773+0800 | INFO | 当前项目目录:./演示项目/RuoYi-Vue-master/ruoyi-admin
2025-02-01T15:32:42.202773+0800 | INFO | 当前输出文件:./output
2025-02-01T15:32:42.224447+0800 | INFO | 解析目录结构如下
ruoyi-admin
├─ pom.xml (.xml)
└─ src
   └─ main
      ├─ java
      │  └─ com
      │     └─ ruoyi
      │     └─ ├─ RuoYiApplication.java (.java)
      │     └─ ├─ RuoYiServletInitializer.java (.java)
      │        └─ web
      │           ├─ controller
      │           │  ├─ common
      │           │  ├─ ├─ CaptchaController.java (.java)
      │           │  ├─ └─ CommonController.java (.java)
      │           │  ├─ monitor
      │           │  ├─ ├─ CacheController.java (.java)
      │           │  ├─ ├─ ServerController.java (.java)
      │           │  ├─ ├─ SysLogininforController.java (.java)
      │           │  ├─ ├─ SysOperlogController.java (.java)
      │           │  ├─ └─ SysUserOnlineController.java (.java)
      │           │  ├─ system
      │           │  ├─ ├─ SysConfigController.java (.java)
      │           │  ├─ ├─ SysDeptController.java (.java)
      │           │  ├─ ├─ SysDictDataController.java (.java)
      │           │  ├─ ├─ SysDictTypeController.java (.java)
      │           │  ├─ ├─ SysIndexController.java (.java)
      │           │  ├─ ├─ SysLoginController.java (.java)
      │           │  ├─ ├─ SysMenuController.java (.java)
      │           │  ├─ ├─ SysNoticeController.java (.java)
      │           │  ├─ ├─ SysPostController.java (.java)
      │           │  ├─ ├─ SysProfileController.java (.java)
      │           │  ├─ ├─ SysRegisterController.java (.java)
      │           │  ├─ ├─ SysRoleController.java (.java)
      │           │  ├─ └─ SysUserController.java (.java)
      │           │  └─ tool
      │           │  └─ └─ TestController.java (.java)
      │           └─ core
      │              └─ config
      │              └─ └─ SwaggerConfig.java (.java)
      └─ resources
      └─ ├─ logback.xml (.xml)
         ├─ i18n
         ├─ META-INF
         └─ mybatis
         └─ └─ mybatis-config.xml (.xml)

2025-02-01T15:32:42.225444+0800 | INFO | 项目MD5:ccbd72ea49cd2e4f9a756a65bfba1dd6
2025-02-01T15:32:42.225444+0800 | INFO | 项目依赖解析文件存在，直接跳过
2025-02-01T15:32:42.226805+0800 | INFO | 调用异步处理Agent_2...
2025-02-01T15:32:42.238681+0800 | INFO | 当前batch_size:10
2025-02-01T15:32:42.238681+0800 | INFO | 数据大小:138
2025-02-01T15:32:42.238681+0800 | DEBUG | ['<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi\n        当前代码源码: 6:         <artifactId>ruoyi</artifactId>\n 7:         <groupId>com.ruoyi</groupId>\n 8:         <version>3.8.9</version>\n 9:     </parent>\n        源码摘要描述:ruoyi-admin项目依赖于父级项目ruoyi\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-devtools\n        当前代码源码:21:         <dependency>\n22:             <groupId>org.springframework.boot</groupId>\n23:             <artifactId>spring-boot-devtools</artifactId>\n24:             <optional>true</optional> <!-- 表示依赖不会传递 -->\n25:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于spring-boot-devtools库\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:springfox-boot-starter\n        当前代码源码:28:         <dependency>\n29:             <groupId>io.springfox</groupId>\n30:             <artifactId>springfox-boot-starter</artifactId>\n31:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger3库springfox-boot-starter\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:swagger-models\n        当前代码源码:34:         <dependency>\n35:             <groupId>io.swagger</groupId>\n36:             <artifactId>swagger-models</artifactId>\n37:             <version>1.6.2</version>\n38:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于swagger-models库，版本为1.6.2\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:mysql-connector-java\n        当前代码源码:41:         <dependency>\n42:             <groupId>mysql</groupId>\n43:             <artifactId>mysql-connector-java</artifactId>\n44:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于Mysql驱动包\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-framework\n        当前代码源码:48:             <groupId>com.ruoyi</groupId>\n49:             <artifactId>ruoyi-framework</artifactId>\n50:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于核心模块ruoyi-framework\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-quartz\n        当前代码源码:54:             <groupId>com.ruoyi</groupId>\n55:             <artifactId>ruoyi-quartz</artifactId>\n56:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于定时任务模块ruoyi-quartz\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:ruoyi-generator\n        当前代码源码:60:             <groupId>com.ruoyi</groupId>\n61:             <artifactId>ruoyi-generator</artifactId>\n62:         </dependency>\n        源码摘要描述:ruoyi-admin项目依赖于代码生成模块ruoyi-generator\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:spring-boot-maven-plugin\n        当前代码源码:68:             <plugin>\n69:                 <groupId>org.springframework.boot</groupId>\n70:                 <artifactId>spring-boot-maven-plugin</artifactId>\n71:                 <version>2.5.15</version>\n72:                 <configuration>\n73:                     <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->\n74:                 </configuration>\n75:                 <executions>\n76:                     <execution>\n77:                         <goals>\n78:                             <goal>repackage</goal>\n79:                         </goals>\n80:                     </execution>\n81:                 </executions>\n82:             </plugin>\n        源码摘要描述:ruoyi-admin项目使用spring-boot-maven-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\pom.xml\n        源码文件名称:pom.xml\n        调用代码单元名称:ruoyi-admin\n        被调用代码单元名称:maven-war-plugin\n        当前代码源码:83:             <plugin>   \n84:                 <groupId>org.apache.maven.plugins</groupId>   \n85:                 <artifactId>maven-war-plugin</artifactId>   \n86:                 <version>3.1.0</version>   \n87:                 <configuration>\n88:                     <failOnMissingWebXml>false</failOnMissingWebXml>\n89:                     <warName>${project.artifactId}</warName>\n90:                 </configuration>   \n91:            </plugin>   \n        源码摘要描述:ruoyi-admin项目使用maven-war-plugin进行构建\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.path\n        当前代码源码: 4: \t<property name="log.path" value="/home/ruoyi/logs" />\n        源码摘要描述:定义日志存放路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:property\n        被调用代码单元名称:log.pattern\n        当前代码源码: 6: \t<property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />\n        源码摘要描述:定义日志输出格式\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_error\n        当前代码源码:38: \t<appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n39: \t    <file>${log.path}/sys-error.log</file>\n40:         <!-- 循环政策：基于时间创建日志文件 -->\n41:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n42:             <!-- 日志文件名格式 -->\n43:             <fileNamePattern>${log.path}/sys-error.%d{yyyy-MM-dd}.log</fileNamePattern>\n44: \t\t\t<!-- 日志最大的历史 60天 -->\n45: \t\t\t<maxHistory>60</maxHistory>\n46:         </rollingPolicy>\n47:         <encoder>\n48:             <pattern>${log.pattern}</pattern>\n49:         </encoder>\n50:         <filter class="ch.qos.logback.classic.filter.LevelFilter">\n51:             <!-- 过滤的级别 -->\n52:             <level>ERROR</level>\n53: \t\t\t<!-- 匹配时的操作：接收（记录） -->\n54:             <onMatch>ACCEPT</onMatch>\n55: \t\t\t<!-- 不匹配时的操作：拒绝（不记录） -->\n56:             <onMismatch>DENY</onMismatch>\n57:         </filter>\n58:     </appender>\n        源码摘要描述:定义系统错误日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:com.ruoyi\n        当前代码源码:75: \t<logger name="com.ruoyi" level="info" />\n        源码摘要描述:控制com.ruoyi模块的日志级别为info\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:org.springframework\n        当前代码源码:77: \t<logger name="org.springframework" level="warn" />\n        源码摘要描述:控制org.springframework模块的日志级别为warn\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:logger\n        被调用代码单元名称:sys-user\n        当前代码源码:90:     <logger name="sys-user" level="info">\n91:         <appender-ref ref="sys-user"/>\n92:     </logger>\n        源码摘要描述:控制sys-user模块的日志级别为info并引用用户访问日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:sys-user\n        当前代码源码:61:     <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">\n62: \t\t<file>${log.path}/sys-user.log</file>\n63:         <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n64:             <!-- 按天回滚 daily -->\n65:             <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>\n66:             <!-- 日志最大的历史 60天 -->\n67:             <maxHistory>60</maxHistory>\n68:         </rollingPolicy>\n69:         <encoder>\n70:             <pattern>${log.pattern}</pattern>\n71:         </encoder>\n72:     </appender>\n        源码摘要描述:定义用户访问日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:console\n        当前代码源码: 9: \t<appender name="console" class="ch.qos.logback.core.ConsoleAppender">\n10: \t\t<encoder>\n11: \t\t\t<pattern>${log.pattern}</pattern>\n12: \t\t</encoder>\n13: \t</appender>\n        源码摘要描述:定义控制台输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:root\n        被调用代码单元名称:file_info\n        当前代码源码:84:     <root level="info">\n85:         <appender-ref ref="file_info" />\n86:         <appender-ref ref="file_error" />\n        源码摘要描述:设置根日志级别为info并引用系统日志输出\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\logback.xml\n        源码文件名称:logback.xml\n        调用代码单元名称:appender\n        被调用代码单元名称:file_info\n        当前代码源码:16: \t<appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">\n17: \t    <file>${log.path}/sys-info.log</file>\n18:         <!-- 循环政策：基于时间创建日志文件 -->\n19: \t\t<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n20:             <!-- 日志文件名格式 -->\n21: \t\t\t<fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>\n22: \t\t\t<!-- 日志最大的历史 60天 -->\n23: \t\t\t<maxHistory>60</maxHistory>\n24: \t\t</rollingPolicy>\n25: \t\t<encoder>\n26: \t\t\t<pattern>${log.pattern}</pattern>\n27: \t\t</encoder>\n28: \t\t<filter class="ch.qos.logback.classic.filter.LevelFilter">\n29:             <!-- 过滤的级别 -->\n30:             <level>INFO</level>\n31:             <!-- 匹配时的操作：接收（记录） -->\n32:             <onMatch>ACCEPT</onMatch>\n33:             <!-- 不匹配时的操作：拒绝（不记录） -->\n34:             <onMismatch>DENY</onMismatch>\n35:         </filter>\n36: \t</appender>\n        源码摘要描述:定义系统日志输出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:configuration\n        被调用代码单元名称:settings\n        当前代码源码: 5: <configuration>\n 6:     <!-- 全局参数 -->\n 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n16:         <!-- 使用驼峰命名法转换字段 -->\n17: \t\t<!-- <setting name="mapUnderscoreToCamelCase" value="true"/> -->\n18: \t</settings>\n        源码摘要描述:configuration提供全局参数设置\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\resources\\mybatis\\mybatis-config.xml\n        源码文件名称:mybatis-config.xml\n        调用代码单元名称:settings\n        被调用代码单元名称:setting\n        当前代码源码: 7:     <settings>\n 8:         <!-- 使全局的映射器启用或禁用缓存 -->\n 9:         <setting name="cacheEnabled"             value="true"   />\n10:         <!-- 允许JDBC 支持自动生成主键 -->\n11:         <setting name="useGeneratedKeys"         value="true"   />\n12:         <!-- 配置默认的执行器.SIMPLE就是普通执行器;REUSE执行器会重用预处理语句(prepared statements);BATCH执行器将重用语句并执行批量更新 -->\n13:         <setting name="defaultExecutorType"      value="SIMPLE" />\n14: \t\t<!-- 指定 MyBatis 所用日志的具体实现 -->\n15:         <setting name="logImpl"                  value="SLF4J"  />\n        源码摘要描述:settings中包含多个参数设置\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:SpringApplication\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用SpringApplication.run方法以启动应用程序\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiApplication.java\n        源码文件名称:RuoYiApplication.java\n        调用代码单元名称:RuoYiApplication\n        被调用代码单元名称:System\n        当前代码源码:15:     public static void main(String[] args)\n16:     {\n17:         // System.setProperty("spring.devtools.restart.enabled", "false");\n18:         SpringApplication.run(RuoYiApplication.class, args);\n        源码摘要描述:RuoYiApplication类的main方法调用System.out.println输出启动成功信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:RuoYiServletInitializer\n        被调用代码单元名称:SpringBootServletInitializer\n        当前代码源码:11: public class RuoYiServletInitializer extends SpringBootServletInitializer\n12: {\n13:     @Override\n14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n17:     }\n18: }\n        源码摘要描述:RuoYiServletInitializer类继承SpringBootServletInitializer类并重写configure方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\RuoYiServletInitializer.java\n        源码文件名称:RuoYiServletInitializer.java\n        调用代码单元名称:configure\n        被调用代码单元名称:SpringApplicationBuilder\n        当前代码源码:14:     protected SpringApplicationBuilder configure(SpringApplicationBuilder application)\n15:     {\n16:         return application.sources(RuoYiApplication.class);\n        源码摘要描述:configure方法接受SpringApplicationBuilder参数并调用sources方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:ISysConfigService\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法调用configService的selectCaptchaEnabled方法来获取验证码是否启用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Producer\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法根据验证码类型调用captchaProducer或captchaProducerMath生成验证码文本和图像\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:RedisCache\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将验证码存储到redis中，通过调用redisCache的setCacheObject方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CaptchaController.java\n        源码文件名称:CaptchaController.java\n        调用代码单元名称:CaptchaController\n        被调用代码单元名称:Base64\n        当前代码源码:46:     public AjaxResult getCode(HttpServletResponse response) throws IOException\n47:     {\n48:         AjaxResult ajax = AjaxResult.success();\n49:         boolean captchaEnabled = configService.selectCaptchaEnabled();\n50:         ajax.put("captchaEnabled", captchaEnabled);\n51:         if (!captchaEnabled)\n52:         {\n53:             return ajax;\n54:         }\n55: \n56:         // 保存验证码信息\n57:         String uuid = IdUtils.simpleUUID();\n58:         String verifyKey = CacheConstants.CAPTCHA_CODE_KEY + uuid;\n59: \n60:         String capStr = null, code = null;\n61:         BufferedImage image = null;\n62: \n63:         // 生成验证码\n64:         String captchaType = RuoYiConfig.getCaptchaType();\n65:         if ("math".equals(captchaType))\n66:         {\n67:             String capText = captchaProducerMath.createText();\n68:             capStr = capText.substring(0, capText.lastIndexOf("@"));\n69:             code = capText.substring(capText.lastIndexOf("@") + 1);\n70:             image = captchaProducerMath.createImage(capStr);\n71:         }\n72:         else if ("char".equals(captchaType))\n73:         {\n74:             capStr = code = captchaProducer.createText();\n75:             image = captchaProducer.createImage(capStr);\n76:         }\n77: \n78:         redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);\n79:         // 转换流信息写出\n80:         FastByteArrayOutputStream os = new FastByteArrayOutputStream();\n81:         try\n82:         {\n83:             ImageIO.write(image, "jpg", os);\n84:         }\n85:         catch (IOException e)\n86:         {\n87:             return AjaxResult.error(e.getMessage());\n88:         }\n89: \n90:         ajax.put("uuid", uuid);\n91:         ajax.put("img", Base64.encode(os.toByteArray()));\n92:         return ajax;\n        源码摘要描述:CaptchaController类中的getCode方法将生成的验证码图像转换为Base64字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码: 46:     @GetMapping("/download")\n 47:     public void fileDownload(String fileName, Boolean delete, HttpServletResponse response, HttpServletRequest request)\n 48:     {\n 49:         try\n 50:         {\n 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n 55:             String realFileName = System.currentTimeMillis() + fileName.substring(fileName.indexOf("_") + 1);\n 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n 57: \n 58:             response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n 59:             FileUtils.setAttachmentResponseHeader(response, realFileName);\n 60:             FileUtils.writeBytes(filePath, response.getOutputStream());\n 61:             if (delete)\n 62:             {\n 63:                 FileUtils.deleteFile(filePath);\n 64:             }\n 65:         }\n 66:         catch (Exception e)\n 67:         {\n 68:             log.error("下载文件失败", e);\n 69:         }\n 70:     }\n        源码摘要描述:CommonController中的fileDownload方法验证文件下载合法性并下载指定文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:StringUtils\n        当前代码源码: 51:             if (!FileUtils.checkAllowDownload(fileName))\n 52:             {\n 53:                 throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));\n 54:             }\n        源码摘要描述:CommonController中的fileDownload方法处理非法文件名称的异常抛出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 56:             String filePath = RuoYiConfig.getDownloadPath() + fileName;\n        源码摘要描述:CommonController中的fileDownload方法获取下载路径\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUploadUtils\n        当前代码源码: 83:             String fileName = FileUploadUtils.upload(filePath, file);\n        源码摘要描述:CommonController中的uploadFile方法处理文件上传并返回新文件名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:serverConfig\n        当前代码源码: 84:             String url = serverConfig.getUrl() + fileName;\n        源码摘要描述:CommonController中的uploadFile方法组合存储文件url\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:FileUtils\n        当前代码源码:155:             FileUtils.setAttachmentResponseHeader(response, downloadName);\n156:             FileUtils.writeBytes(downloadPath, response.getOutputStream());\n        源码摘要描述:CommonController中的resourceDownload方法设置响应头以便下载资源\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\common\\CommonController.java\n        源码文件名称:CommonController.java\n        调用代码单元名称:CommonController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 85:             AjaxResult ajax = AjaxResult.success();\n 86:             ajax.put("url", url);\n 87:             ajax.put("fileName", fileName);\n 88:             ajax.put("newFileName", FileUtils.getName(fileName));\n 89:             ajax.put("originalFilename", file.getOriginalFilename());\n 90:             return ajax;\n        源码摘要描述:CommonController中的uploadFile方法创建成功响应\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:113:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n114:     @DeleteMapping("/clearCacheAll")\n115:     public AjaxResult clearCacheAll()\n116:     {\n117:         Collection<String> cacheKeys = redisTemplate.keys("*");\n118:         redisTemplate.delete(cacheKeys);\n119:         return AjaxResult.success();\n120:     }\n        源码摘要描述:CacheController类的clearCacheAll方法清除所有缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:CacheController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 48:     @PreAuthorize("@ss.hasPermi(\'monitor:cache:list\')")\n 49:     @GetMapping()\n 50:     public AjaxResult getInfo() throws Exception\n 51:     {\n 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n 53:         Properties commandStats = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info("commandstats"));\n 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n 55: \n 56:         Map<String, Object> result = new HashMap<>(3);\n 57:         result.put("info", info);\n 58:         result.put("dbSize", dbSize);\n 59: \n 60:         List<Map<String, String>> pieList = new ArrayList<>();\n 61:         commandStats.stringPropertyNames().forEach(key -> {\n 62:             Map<String, String> data = new HashMap<>(2);\n 63:             String property = commandStats.getProperty(key);\n 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n 66:             pieList.add(data);\n 67:         });\n 68:         result.put("commandStats", pieList);\n 69:         return AjaxResult.success(result);\n 70:     }\n        源码摘要描述:CacheController类的getInfo方法返回缓存相关信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.info\n        当前代码源码: 52:         Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());\n        源码摘要描述:redisTemplate调用connection的info方法获取Redis信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:connection.dbSize\n        当前代码源码: 54:         Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());\n        源码摘要描述:redisTemplate调用connection的dbSize方法获取数据库大小\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:keys\n        当前代码源码: 83:         Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");\n        源码摘要描述:redisTemplate调用keys方法获取匹配特定模式的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:opsForValue\n        当前代码源码: 91:         String cacheValue = redisTemplate.opsForValue().get(cacheKey);\n        源码摘要描述:redisTemplate调用opsForValue方法获取Value相关操作接口\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:118:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除匹配的所有缓存键\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:redisTemplate\n        被调用代码单元名称:delete\n        当前代码源码:101:         redisTemplate.delete(cacheKeys);\n        源码摘要描述:redisTemplate调用delete方法删除指定的缓存键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:commandStats\n        被调用代码单元名称:stringPropertyNames\n        当前代码源码: 61:         commandStats.stringPropertyNames().forEach(key -> {\n        源码摘要描述:commandStats调用stringPropertyNames获取所有属性名称\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:removeStart\n        当前代码源码: 64:             data.put("name", StringUtils.removeStart(key, "cmdstat_"));\n        源码摘要描述:StringUtils的removeStart方法去除字符串开头的特定前缀\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\CacheController.java\n        源码文件名称:CacheController.java\n        调用代码单元名称:StringUtils\n        被调用代码单元名称:substringBetween\n        当前代码源码: 65:             data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));\n        源码摘要描述:StringUtils的substringBetween方法获取字符串之间的子串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:AjaxResult\n        当前代码源码:21:     public AjaxResult getInfo() throws Exception\n22:     {\n23:         Server server = new Server();\n24:         server.copyTo();\n25:         return AjaxResult.success(server);\n        源码摘要描述:ServerController类的getInfo方法调用AjaxResult的success方法返回服务器信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\ServerController.java\n        源码文件名称:ServerController.java\n        调用代码单元名称:ServerController\n        被调用代码单元名称:Server\n        当前代码源码:23:         Server server = new Server();\n24:         server.copyTo();\n        源码摘要描述:ServerController类的getInfo方法创建Server对象并调用其copyTo方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ISysLogininforService\n        当前代码源码:40:     public TableDataInfo list(SysLogininfor logininfor)\n41:     {\n42:         startPage();\n43:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n44:         return getDataTable(list);\n        源码摘要描述:SysLogininforController类通过logininforService调用selectLogininforList方法获取登录信息列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:50:     public void export(HttpServletResponse response, SysLogininfor logininfor)\n51:     {\n52:         List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);\n53:         ExcelUtil<SysLogininfor> util = new ExcelUtil<SysLogininfor>(SysLogininfor.class);\n54:         util.exportExcel(response, list, "登录日志");\n        源码摘要描述:SysLogininforController类通过ExcelUtil导出登录日志到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysLogininforController.java\n        源码文件名称:SysLogininforController.java\n        调用代码单元名称:SysLogininforController\n        被调用代码单元名称:SysPasswordService\n        当前代码源码:79:         passwordService.clearLoginRecordCache(userName);\n80:         return success();\n        源码摘要描述:SysLogininforController类调用passwordService清除指定用户的登录记录缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:36:     public TableDataInfo list(SysOperLog operLog)\n37:     {\n38:         startPage();\n39:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n40:         return getDataTable(list);\n        源码摘要描述:SysOperlogController类调用operLogService的selectOperLogList方法以获取操作日志列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:operLogService\n        当前代码源码:64:     public AjaxResult clean()\n65:     {\n66:         operLogService.cleanOperLog();\n        源码摘要描述:SysOperlogController类调用operLogService的cleanOperLog方法以清除操作日志\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysOperlogController.java\n        源码文件名称:SysOperlogController.java\n        调用代码单元名称:SysOperlogController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码:46:     public void export(HttpServletResponse response, SysOperLog operLog)\n47:     {\n48:         List<SysOperLog> list = operLogService.selectOperLogList(operLog);\n49:         ExcelUtil<SysOperLog> util = new ExcelUtil<SysOperLog>(SysOperLog.class);\n50:         util.exportExcel(response, list, "操作日志");\n        源码摘要描述:SysOperlogController类调用ExcelUtil的exportExcel方法将操作日志导出为Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:45:         Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的keys方法获取匹配的登录TOKEN键\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:userOnlineService\n        当前代码源码:52:                 userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));\n        源码摘要描述:SysUserOnlineController类调用userOnlineService的selectOnlineByInfo方法获取在线用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:redisCache\n        当前代码源码:80:         redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);\n        源码摘要描述:SysUserOnlineController类使用redisCache提供的deleteObject方法删除指定TOKEN的对象\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\monitor\\SysUserOnlineController.java\n        源码文件名称:SysUserOnlineController.java\n        调用代码单元名称:SysUserOnlineController\n        被调用代码单元名称:getDataTable\n        当前代码源码:69:         return getDataTable(userOnlineList);\n        源码摘要描述:SysUserOnlineController类调用getDataTable方法返回用户列表的表格数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码: 42:     public TableDataInfo list(SysConfig config)\n 43:     {\n 44:         startPage();\n 45:         List<SysConfig> list = configService.selectConfigList(config);\n 46:         return getDataTable(list);\n        源码摘要描述:SysConfigController类获取参数配置列表通过configService调用selectConfigList函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:configService\n        当前代码源码:130:         configService.resetConfigCache();\n        源码摘要描述:SysConfigController类刷新参数缓存通过configService调用resetConfigCache函数\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysConfigController.java\n        源码文件名称:SysConfigController.java\n        调用代码单元名称:SysConfigController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 51:     @PostMapping("/export")\n 52:     public void export(HttpServletResponse response, SysConfig config)\n 53:     {\n 54:         List<SysConfig> list = configService.selectConfigList(config);\n 55:         ExcelUtil<SysConfig> util = new ExcelUtil<SysConfig>(SysConfig.class);\n 56:         util.exportExcel(response, list, "参数数据");\n        源码摘要描述:SysConfigController类导出参数数据通过ExcelUtil调用exportExcel函数\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码:119:     public AjaxResult remove(@PathVariable Long deptId)\n120:     {\n121:         if (deptService.hasChildByDeptId(deptId))\n122:         {\n123:             return warn("存在下级部门,不允许删除");\n124:         }\n125:         if (deptService.checkDeptExistUser(deptId))\n126:         {\n127:             return warn("部门存在用户,不允许删除");\n128:         }\n129:         deptService.checkDeptDataScope(deptId);\n130:         return toAjax(deptService.deleteDeptById(deptId));\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现删除部门功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDeptController.java\n        源码文件名称:SysDeptController.java\n        调用代码单元名称:SysDeptController\n        被调用代码单元名称:ISysDeptService\n        当前代码源码: 42:     public AjaxResult list(SysDept dept)\n 43:     {\n 44:         List<SysDept> depts = deptService.selectDeptList(dept);\n 45:         return success(depts);\n        源码摘要描述:SysDeptController类通过deptService调用ISysDeptService接口实现获取部门列表功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码: 45:     public TableDataInfo list(SysDictData dictData)\n 46:     {\n 47:         startPage();\n 48:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 49:         return getDataTable(list);\n        源码摘要描述:SysDictDataController类调用dictDataService服务获取字典数据列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 55:     public void export(HttpServletResponse response, SysDictData dictData)\n 56:     {\n 57:         List<SysDictData> list = dictDataService.selectDictDataList(dictData);\n 58:         ExcelUtil<SysDictData> util = new ExcelUtil<SysDictData>(SysDictData.class);\n 59:         util.exportExcel(response, list, "字典数据");\n 60:     }\n        源码摘要描述:SysDictDataController类调用ExcelUtil导出字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictDataService\n        当前代码源码:117:     {\n118:         dictDataService.deleteDictDataByIds(dictCodes);\n119:         return success();\n        源码摘要描述:SysDictDataController类调用dictDataService删除字典数据\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictDataController.java\n        源码文件名称:SysDictDataController.java\n        调用代码单元名称:SysDictDataController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 76:     public AjaxResult dictType(@PathVariable String dictType)\n 77:     {\n 78:         List<SysDictData> data = dictTypeService.selectDictDataByType(dictType);\n 79:         if (StringUtils.isNull(data))\n 80:         {\n 81:             data = new ArrayList<SysDictData>();\n 82:         }\n 83:         return success(data);\n        源码摘要描述:SysDictDataController类调用dictTypeService获取指定类型的字典数据\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:dictTypeService\n        当前代码源码: 25: /**\n 26:  * 数据字典信息\n 27:  * \n 28:  * @author ruoyi\n 29:  */\n 30: @RestController\n 31: @RequestMapping("/system/dict/type")\n 32: public class SysDictTypeController extends BaseController\n 33: {\n 34:     @Autowired\n 35:     private ISysDictTypeService dictTypeService;\n 36: \n 37:     @PreAuthorize("@ss.hasPermi(\'system:dict:list\')")\n 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n 45: \n 46:     @Log(title = "字典类型", businessType = BusinessType.EXPORT)\n 47:     @PreAuthorize("@ss.hasPermi(\'system:dict:export\')")\n 48:     @PostMapping("/export")\n 49:     public void export(HttpServletResponse response, SysDictType dictType)\n 50:     {\n 51:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 52:         ExcelUtil<SysDictType> util = new ExcelUtil<SysDictType>(SysDictType.class);\n 53:         util.exportExcel(response, list, "字典类型");\n 54:     }\n 55: \n 56:     /**\n 57:      * 查询字典类型详细\n 58:      */\n 59:     @PreAuthorize("@ss.hasPermi(\'system:dict:query\')")\n 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n 65: \n 66:     /**\n 67:      * 新增字典类型\n 68:      */\n 69:     @PreAuthorize("@ss.hasPermi(\'system:dict:add\')")\n 70:     @Log(title = "字典类型", businessType = BusinessType.INSERT)\n 71:     @PostMapping\n 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n 79:         return toAjax(dictTypeService.insertDictType(dict));\n 80:     }\n 81: \n 82:     /**\n 83:      * 修改字典类型\n 84:      */\n 85:     @PreAuthorize("@ss.hasPermi(\'system:dict:edit\')")\n 86:     @Log(title = "字典类型", businessType = BusinessType.UPDATE)\n 87:     @PutMapping\n 88:     public AjaxResult edit(@Validated @RequestBody SysDictType dict)\n 89:     {\n 90:         if (!dictTypeService.checkDictTypeUnique(dict))\n 91:         {\n 92:             return error("修改字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 93:         }\n 94:         dict.setUpdateBy(getUsername());\n 95:         return toAjax(dictTypeService.updateDictType(dict));\n 96:     }\n 97: \n 98:     /**\n 99:      * 删除字典类型\n100:      */\n101:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n102:     @Log(title = "字典类型", businessType = BusinessType.DELETE)\n103:     @DeleteMapping("/{dictIds}")\n104:     public AjaxResult remove(@PathVariable Long[] dictIds)\n105:     {\n106:         dictTypeService.deleteDictTypeByIds(dictIds);\n107:         return success();\n108:     }\n109: \n110:     /**\n111:      * 刷新字典缓存\n112:      */\n113:     @PreAuthorize("@ss.hasPermi(\'system:dict:remove\')")\n114:     @Log(title = "字典类型", businessType = BusinessType.CLEAN)\n115:     @DeleteMapping("/refreshCache")\n116:     public AjaxResult refreshCache()\n117:     {\n118:         dictTypeService.resetDictCache();\n119:         return success();\n120:     }\n121: \n122:     /**\n123:      * 获取字典选择框列表\n124:      */\n125:     @GetMapping("/optionselect")\n126:     public AjaxResult optionselect()\n127:     {\n128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n131: }\n        源码摘要描述:SysDictTypeController类通过dictTypeService引用字典类型相关服务\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeList\n        当前代码源码: 38:     @GetMapping("/list")\n 39:     public TableDataInfo list(SysDictType dictType)\n 40:     {\n 41:         startPage();\n 42:         List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);\n 43:         return getDataTable(list);\n 44:     }\n        源码摘要描述:SysDictTypeController类调用dictTypeService查询字典类型列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeById\n        当前代码源码: 60:     @GetMapping(value = "/{dictId}")\n 61:     public AjaxResult getInfo(@PathVariable Long dictId)\n 62:     {\n 63:         return success(dictTypeService.selectDictTypeById(dictId));\n 64:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService查询特定字典类型的详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:checkDictTypeUnique\n        当前代码源码: 72:     public AjaxResult add(@Validated @RequestBody SysDictType dict)\n 73:     {\n 74:         if (!dictTypeService.checkDictTypeUnique(dict))\n 75:         {\n 76:             return error("新增字典\'" + dict.getDictName() + "\'失败，字典类型已存在");\n 77:         }\n 78:         dict.setCreateBy(getUsername());\n        源码摘要描述:SysDictTypeController类在新增操作中调用dictTypeService检查字典类型唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:insertDictType\n        当前代码源码: 79:         return toAjax(dictTypeService.insertDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService新增字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:updateDictType\n        当前代码源码: 95:         return toAjax(dictTypeService.updateDictType(dict));\n        源码摘要描述:SysDictTypeController类通过dictTypeService更新字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:deleteDictTypeByIds\n        当前代码源码:106:         dictTypeService.deleteDictTypeByIds(dictIds);\n        源码摘要描述:SysDictTypeController类通过dictTypeService删除字典类型\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:resetDictCache\n        当前代码源码:118:         dictTypeService.resetDictCache();\n        源码摘要描述:SysDictTypeController类调用dictTypeService刷新字典缓存\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysDictTypeController.java\n        源码文件名称:SysDictTypeController.java\n        调用代码单元名称:SysDictTypeController\n        被调用代码单元名称:selectDictTypeAll\n        当前代码源码:128:         List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();\n129:         return success(dictTypes);\n130:     }\n        源码摘要描述:SysDictTypeController类通过dictTypeService获取所有字典类型用于选择框列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:StringUtils\n        当前代码源码:25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类访问index方法，使用StringUtils格式化字符串\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysIndexController.java\n        源码文件名称:SysIndexController.java\n        调用代码单元名称:SysIndexController\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码:19:     private RuoYiConfig ruoyiConfig;\n20: \n21:     /**\n22:      * 访问首页，提示语\n23:      */\n24:     @RequestMapping("/")\n25:     public String index()\n26:     {\n27:         return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());\n        源码摘要描述:SysIndexController类在index方法中调用ruoyiConfig的getName和getVersion方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysLoginService\n        当前代码源码:48:     @PostMapping("/login")\n49:     public AjaxResult login(@RequestBody LoginBody loginBody)\n50:     {\n51:         AjaxResult ajax = AjaxResult.success();\n52:         // 生成令牌\n53:         String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),\n54:                 loginBody.getUuid());\n55:         ajax.put(Constants.TOKEN, token);\n56:         return ajax;\n        源码摘要描述:SysLoginController的login方法通过调用loginService的login方法进行用户登录验证\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SecurityUtils\n        当前代码源码:64:     @GetMapping("getInfo")\n65:     public AjaxResult getInfo()\n66:     {\n67:         LoginUser loginUser = SecurityUtils.getLoginUser();\n68:         SysUser user = loginUser.getUser();\n        源码摘要描述:SysLoginController的getInfo方法通过调用SecurityUtils获取当前登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:SysPermissionService\n        当前代码源码:70:         Set<String> roles = permissionService.getRolePermission(user);\n71:         // 权限集合\n72:         Set<String> permissions = permissionService.getMenuPermission(user);\n        源码摘要描述:SysLoginController的getInfo方法调用permissionService获取用户角色和权限集合\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:TokenService\n        当前代码源码:76:             tokenService.refreshToken(loginUser);\n        源码摘要描述:SysLoginController的getInfo方法调用tokenService刷新令牌\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysLoginController.java\n        源码文件名称:SysLoginController.java\n        调用代码单元名称:SysLoginController\n        被调用代码单元名称:ISysMenuService\n        当前代码源码:90:     @GetMapping("getRouters")\n91:     public AjaxResult getRouters()\n92:     {\n93:         Long userId = SecurityUtils.getUserId();\n94:         List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);\n95:         return AjaxResult.success(menuService.buildMenus(menus));\n        源码摘要描述:SysLoginController的getRouters方法通过调用menuService获取用户对应的菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码:140:         return toAjax(menuService.deleteMenuById(menuId));\n        源码摘要描述:SysMenuController类通过menuService调用deleteMenuById删除菜单\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysMenuController.java\n        源码文件名称:SysMenuController.java\n        调用代码单元名称:SysMenuController\n        被调用代码单元名称:menuService\n        当前代码源码: 43:         List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());\n 44:         return success(menus);\n        源码摘要描述:SysMenuController类通过menuService调用selectMenuList方法获取菜单列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:88:     {\n89:         return toAjax(noticeService.deleteNoticeByIds(noticeIds));\n90:     }\n        源码摘要描述:SysNoticeController类通过noticeService调用deleteNoticeByIds方法删除通知公告\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysNoticeController.java\n        源码文件名称:SysNoticeController.java\n        调用代码单元名称:SysNoticeController\n        被调用代码单元名称:ISysNoticeService\n        当前代码源码:40:     public TableDataInfo list(SysNotice notice)\n41:     {\n42:         startPage();\n43:         List<SysNotice> list = noticeService.selectNoticeList(notice);\n44:         return getDataTable(list);\n        源码摘要描述:SysNoticeController类通过noticeService调用selectNoticeList方法获取通知公告列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService\n        当前代码源码: 35:     private ISysPostService postService;\n        源码摘要描述:SysPostController类中postService属性用于调用ISysPostService接口的方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:startPage\n        当前代码源码: 44:         startPage();\n        源码摘要描述:SysPostController类中的list方法调用startPage用于分页处理\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostList\n        当前代码源码: 45:         List<SysPost> list = postService.selectPostList(post);\n        源码摘要描述:SysPostController类中的list方法调用postService的selectPostList获取岗位列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:getDataTable\n        当前代码源码: 46:         return getDataTable(list);\n        源码摘要描述:SysPostController类中的list方法调用getDataTable将列表数据封装成TableDataInfo\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:new ExcelUtil\n        当前代码源码: 55:         ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);\n        源码摘要描述:SysPostController类中的export方法创建ExcelUtil对象以处理Excel导出\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostById\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用postService的selectPostById获取岗位详细信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码: 66:         return success(postService.selectPostById(postId));\n        源码摘要描述:SysPostController类中的getInfo方法调用success返回获取岗位信息的成功结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostNameUnique\n        当前代码源码: 77:         if (!postService.checkPostNameUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostNameUnique检查岗位名称唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:error\n        当前代码源码: 79:             return error("新增岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的add方法调用error返回岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.checkPostCodeUnique\n        当前代码源码: 81:         else if (!postService.checkPostCodeUnique(post))\n        源码摘要描述:SysPostController类中的add方法调用postService的checkPostCodeUnique检查岗位编码唯一性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setCreateBy\n        当前代码源码: 85:         post.setCreateBy(getUsername());\n        源码摘要描述:SysPostController类中的add方法设置岗位创建者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.insertPost\n        当前代码源码: 86:         return toAjax(postService.insertPost(post));\n        源码摘要描述:SysPostController类中的add方法调用postService的insertPost插入新岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:Error\n        当前代码源码: 99:             return error("修改岗位\'" + post.getPostName() + "\'失败，岗位名称已存在");\n        源码摘要描述:SysPostController类中的edit方法调用error返回修改岗位名称已存在的错误信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:post.setUpdateBy\n        当前代码源码:105:         post.setUpdateBy(getUsername());\n        源码摘要描述:SysPostController类中的edit方法设置岗位更新者\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.updatePost\n        当前代码源码:106:         return toAjax(postService.updatePost(post));\n        源码摘要描述:SysPostController类中的edit方法调用postService的updatePost更新岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.deletePostByIds\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用postService的deletePostByIds删除岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:toAjax\n        当前代码源码:117:         return toAjax(postService.deletePostByIds(postIds));\n        源码摘要描述:SysPostController类中的remove方法调用toAjax返回删除结果\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:success\n        当前代码源码:127:         return success(posts);\n        源码摘要描述:SysPostController类中的optionselect方法调用success返回获取岗位选择框列表的成功结果\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:SysPostController\n        被调用代码单元名称:postService.selectPostAll\n        当前代码源码:126:         List<SysPost> posts = postService.selectPostAll();\n        源码摘要描述:SysPostController类中的optionselect方法调用postService的selectPostAll获取所有岗位\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysPostController.java\n        源码文件名称:SysPostController.java\n        调用代码单元名称:ExcelUtil\n        被调用代码单元名称:exportExcel\n        当前代码源码: 56:         util.exportExcel(response, list, "岗位数据");\n        源码摘要描述:ExcelUtil类中的exportExcel方法用于导出岗位数据到Excel\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:AjaxResult\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类提供个人信息的获取和更新功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:TokenService\n        被调用代码单元名称:LoginUser\n        当前代码源码: 80:             tokenService.setLoginUser(loginUser);\n        源码摘要描述:TokenService类更新用户的登录缓存\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_3>\n<路径_4>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_4>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:StringUtils\n        当前代码源码: 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n        源码摘要描述:用于手机号和邮箱唯一性检查\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:LoginUser\n        当前代码源码: 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n        源码摘要描述:用于获取当前登录用户信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:LoginUser\n        被调用代码单元名称:SysUser\n        当前代码源码: 49:         SysUser user = loginUser.getUser();\n        源码摘要描述:LoginUser类获取用户信息\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysUser\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 77:         if (userService.updateUserProfile(currentUser) > 0)\n        源码摘要描述:用于更新用户信息和检查用户唯一性\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SysProfileController\n        被调用代码单元名称:ISysUserService\n        当前代码源码: 32: @RestController\n 33: @RequestMapping("/system/user/profile")\n 34: public class SysProfileController extends BaseController\n 35: {\n 36:     @Autowired\n 37:     private ISysUserService userService;\n 38: \n 39:     @Autowired\n 40:     private TokenService tokenService;\n 41: \n 42:     /**\n 43:      * 个人信息\n 44:      */\n 45:     @GetMapping\n 46:     public AjaxResult profile()\n 47:     {\n 48:         LoginUser loginUser = getLoginUser();\n 49:         SysUser user = loginUser.getUser();\n 50:         AjaxResult ajax = AjaxResult.success(user);\n 51:         ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));\n 52:         ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));\n 53:         return ajax;\n 54:     }\n 55: \n 56:     /**\n 57:      * 修改用户\n 58:      */\n 59:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 60:     @PutMapping\n 61:     public AjaxResult updateProfile(@RequestBody SysUser user)\n 62:     {\n 63:         LoginUser loginUser = getLoginUser();\n 64:         SysUser currentUser = loginUser.getUser();\n 65:         currentUser.setNickName(user.getNickName());\n 66:         currentUser.setEmail(user.getEmail());\n 67:         currentUser.setPhonenumber(user.getPhonenumber());\n 68:         currentUser.setSex(user.getSex());\n 69:         if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))\n 70:         {\n 71:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，手机号码已存在");\n 72:         }\n 73:         if (StringUtils.isNotEmpty(user.getEmail()) && !userService.checkEmailUnique(currentUser))\n 74:         {\n 75:             return error("修改用户\'" + loginUser.getUsername() + "\'失败，邮箱账号已存在");\n 76:         }\n 77:         if (userService.updateUserProfile(currentUser) > 0)\n 78:         {\n 79:             // 更新缓存用户信息\n 80:             tokenService.setLoginUser(loginUser);\n 81:             return success();\n 82:         }\n 83:         return error("修改个人信息异常，请联系管理员");\n 84:     }\n 85: \n 86:     /**\n 87:      * 重置密码\n 88:      */\n 89:     @Log(title = "个人信息", businessType = BusinessType.UPDATE)\n 90:     @PutMapping("/updatePwd")\n 91:     public AjaxResult updatePwd(@RequestBody Map<String, String> params)\n 92:     {\n 93:         String oldPassword = params.get("oldPassword");\n 94:         String newPassword = params.get("newPassword");\n 95:         LoginUser loginUser = getLoginUser();\n 96:         String userName = loginUser.getUsername();\n 97:         String password = loginUser.getPassword();\n 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n107:         if (userService.resetUserPwd(userName, newPassword) > 0)\n108:         {\n109:             // 更新缓存用户密码\n110:             loginUser.getUser().setPassword(newPassword);\n111:             tokenService.setLoginUser(loginUser);\n112:             return success();\n113:         }\n114:         return error("修改密码异常，请联系管理员");\n115:     }\n116: \n117:     /**\n118:      * 头像上传\n119:      */\n120:     @Log(title = "用户头像", businessType = BusinessType.UPDATE)\n121:     @PostMapping("/avatar")\n122:     public AjaxResult avatar(@RequestParam("avatarfile") MultipartFile file) throws Exception\n123:     {\n124:         if (!file.isEmpty())\n125:         {\n126:             LoginUser loginUser = getLoginUser();\n127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n128:             if (userService.updateUserAvatar(loginUser.getUsername(), avatar))\n129:             {\n130:                 AjaxResult ajax = AjaxResult.success();\n131:                 ajax.put("imgUrl", avatar);\n132:                 // 更新缓存用户头像\n133:                 loginUser.getUser().setAvatar(avatar);\n134:                 tokenService.setLoginUser(loginUser);\n135:                 return ajax;\n136:             }\n137:         }\n138:         return error("上传图片异常，请联系管理员");\n139:     }\n140: }\n        源码摘要描述:SysProfileController类中用于获取用户角色和岗位信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:FileUploadUtils\n        被调用代码单元名称:String\n        当前代码源码:127:             String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);\n        源码摘要描述:用于处理用户头像的上传\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysProfileController.java\n        源码文件名称:SysProfileController.java\n        调用代码单元名称:SecurityUtils\n        被调用代码单元名称:String\n        当前代码源码: 98:         if (!SecurityUtils.matchesPassword(oldPassword, password))\n 99:         {\n100:             return error("修改密码失败，旧密码错误");\n101:         }\n102:         if (SecurityUtils.matchesPassword(newPassword, password))\n103:         {\n104:             return error("新密码不能与旧密码相同");\n105:         }\n106:         newPassword = SecurityUtils.encryptPassword(newPassword);\n        源码摘要描述:用于密码的匹配和加密功能\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:configService\n        当前代码源码:28:     @PostMapping("/register")\n29:     public AjaxResult register(@RequestBody RegisterBody user)\n30:     {\n31:         if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))\n32:         {\n33:             return error("当前系统没有开启注册功能！");\n34:         }\n35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用configService的selectConfigByKey方法检查注册功能是否开启\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:registerService\n        当前代码源码:35:         String msg = registerService.register(user);\n36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用registerService的register方法进行用户注册\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRegisterController.java\n        源码文件名称:SysRegisterController.java\n        调用代码单元名称:SysRegisterController\n        被调用代码单元名称:StringUtils\n        当前代码源码:36:         return StringUtils.isEmpty(msg) ? success() : error(msg);\n        源码摘要描述:SysRegisterController类的register方法通过调用StringUtils的isEmpty方法检查注册结果是否为空\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:roleService\n        当前代码源码: 60:     public TableDataInfo list(SysRole role)\n 61:     {\n 62:         startPage();\n 63:         List<SysRole> list = roleService.selectRoleList(role);\n 64:         return getDataTable(list);\n        源码摘要描述:SysRoleController类通过roleService调用selectRoleList方法获取角色列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 70:     public void export(HttpServletResponse response, SysRole role)\n 71:     {\n 72:         List<SysRole> list = roleService.selectRoleList(role);\n 73:         ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);\n 74:         util.exportExcel(response, list, "角色数据");\n        源码摘要描述:SysRoleController类通过ExcelUtil导出角色数据到Excel文件\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:userService\n        当前代码源码:135:                 loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));\n        源码摘要描述:SysRoleController类通过userService调用selectUserByUserName方法获取用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:permissionService\n        当前代码源码:136:                 loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));\n        源码摘要描述:SysRoleController类通过permissionService获取用户权限\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:tokenService\n        当前代码源码:137:                 tokenService.setLoginUser(loginUser);\n        源码摘要描述:SysRoleController类通过tokenService设置登录用户信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:259:         ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptTreeList方法获取部门树列表\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysRoleController.java\n        源码文件名称:SysRoleController.java\n        调用代码单元名称:SysRoleController\n        被调用代码单元名称:deptService\n        当前代码源码:258:         ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));\n        源码摘要描述:SysRoleController类通过deptService调用selectDeptListByRoleId方法获取部门列表\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:userService\n        当前代码源码: 61:     public TableDataInfo list(SysUser user)\n 62:     {\n 63:         startPage();\n 64:         List<SysUser> list = userService.selectUserList(user);\n 65:         return getDataTable(list);\n 66:     }\n        源码摘要描述:SysUserController类中的list方法获取用户列表，调用userService的selectUserList方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:ExcelUtil\n        当前代码源码: 71:     public void export(HttpServletResponse response, SysUser user)\n 72:     {\n 73:         List<SysUser> list = userService.selectUserList(user);\n 74:         ExcelUtil<SysUser> util = new ExcelUtil<SysUser>(SysUser.class);\n 75:         util.exportExcel(response, list, "用户数据");\n        源码摘要描述:SysUserController类中的export方法导出用户列表到Excel，调用ExcelUtil的exportExcel方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:roleService\n        当前代码源码:113:         List<SysRole> roles = roleService.selectRoleAll();\n114:         ajax.put("roles", SysUser.isAdmin(userId) ? roles : roles.stream().filter(r -> !r.isAdmin()).collect(Collectors.toList()));\n        源码摘要描述:SysUserController类中的getInfo方法获取用户角色信息，调用roleService的selectRoleAll方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:254:         return success(deptService.selectDeptTreeList(dept));\n        源码摘要描述:SysUserController类中的deptTree方法获取部门树列表，调用deptService的selectDeptTreeList方法\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\system\\SysUserController.java\n        源码文件名称:SysUserController.java\n        调用代码单元名称:SysUserController\n        被调用代码单元名称:deptService\n        当前代码源码:127:         deptService.checkDeptDataScope(user.getDeptId());\n        源码摘要描述:SysUserController类中的add方法检查部门数据权限，调用deptService的checkDeptDataScope方法\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.ok\n        当前代码源码: 43:     public R<List<UserEntity>> userList()\n 44:     {\n 45:         List<UserEntity> userList = new ArrayList<UserEntity>(users.values());\n 46:         return R.ok(userList);\n        源码摘要描述:TestController类的userList方法获取用户列表并返回R对象\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码:109:         else\n110:         {\n111:             return R.fail("用户不存在");\n        源码摘要描述:TestController类的delete方法在用户不存在时返回失败信息\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:TestController\n        被调用代码单元名称:R.fail\n        当前代码源码: 58:         else\n 59:         {\n 60:             return R.fail("用户不存在");\n 61:         }\n        源码摘要描述:TestController类的getUser方法在用户不存在时返回失败信息\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:StringUtils.isNull\n        当前代码源码:136:     public UserEntity(Integer userId, String username, String password, String mobile)\n137:     {\n138:         this.userId = userId;\n139:         this.username = username;\n140:         this.password = password;\n141:         this.mobile = mobile;\n        源码摘要描述:UserEntity类构造方法用于初始化用户对象的各个属性\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:Integer getUserId\n        当前代码源码:144:     public Integer getUserId()\n145:     {\n146:         return userId;\n        源码摘要描述:UserEntity类的getUserId方法获取用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUserId\n        当前代码源码:149:     public void setUserId(Integer userId)\n150:     {\n151:         this.userId = userId;\n152:     }\n        源码摘要描述:UserEntity类的setUserId方法设置用户ID\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getUsername\n        当前代码源码:154:     public String getUsername()\n155:     {\n156:         return username;\n        源码摘要描述:UserEntity类的getUsername方法获取用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setUsername\n        当前代码源码:159:     public void setUsername(String username)\n160:     {\n161:         this.username = username;\n162:     }\n        源码摘要描述:UserEntity类的setUsername方法设置用户名\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getPassword\n        当前代码源码:164:     public String getPassword()\n165:     {\n166:         return password;\n        源码摘要描述:UserEntity类的getPassword方法获取用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setPassword\n        当前代码源码:169:     public void setPassword(String password)\n170:     {\n171:         this.password = password;\n172:     }\n        源码摘要描述:UserEntity类的setPassword方法设置用户密码\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:String getMobile\n        当前代码源码:175:     {\n176:         return mobile;\n177:     }\n        源码摘要描述:UserEntity类的getMobile方法获取用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\controller\\tool\\TestController.java\n        源码文件名称:TestController.java\n        调用代码单元名称:UserEntity\n        被调用代码单元名称:void setMobile\n        当前代码源码:180:     {\n181:         this.mobile = mobile;\n182:     }\n        源码摘要描述:UserEntity类的setMobile方法设置用户手机\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:RuoYiConfig\n        当前代码源码: 31: public class SwaggerConfig\n 32: {\n 33:     /** 系统基础配置 */\n 34:     @Autowired\n 35:     private RuoYiConfig ruoyiConfig;\n        源码摘要描述:SwaggerConfig类用于配置Swagger2的接口文档，依赖RuoYiConfig作为系统基础配置\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_2>\n<路径_3>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:ApiInfo\n        被调用代码单元名称:ApiInfoBuilder\n        当前代码源码:114:         return new ApiInfoBuilder()\n115:                 // 设置标题\n116:                 .title("标题：若依管理系统_接口文档")\n117:                 // 描述\n118:                 .description("描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...")\n119:                 // 作者信息\n120:                 .contact(new Contact(ruoyiConfig.getName(), null, null))\n121:                 // 版本\n122:                 .version("版本号:" + ruoyiConfig.getVersion())\n123:                 .build();\n124:     }\n        源码摘要描述:apiInfo方法使用ApiInfoBuilder构建ApiInfo对象，提供API的详细信息\n        </路径_3>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:RequestHandlerSelectors\n        当前代码源码: 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n        源码摘要描述:Docket对象使用RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)获取带有@ApiOperation注解的方法\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:PathSelectors\n        当前代码源码: 63:                 .paths(PathSelectors.any())\n        源码摘要描述:Docket对象调用PathSelectors.any()来设置请求路径的选择器\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securitySchemes\n        当前代码源码: 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securitySchemes()方法配置安全模式的Scheme\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SwaggerConfig\n        被调用代码单元名称:Docket\n        当前代码源码: 49:     public Docket createRestApi()\n 50:     {\n 51:         return new Docket(DocumentationType.OAS_30)\n 52:                 // 是否启用Swagger\n 53:                 .enable(enabled)\n 54:                 // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n 55:                 .apiInfo(apiInfo())\n 56:                 // 设置哪些接口暴露给Swagger展示\n 57:                 .select()\n 58:                 // 扫描所有有注解的api，用这种方式更灵活\n 59:                 .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n 60:                 // 扫描指定包中的swagger注解\n 61:                 // .apis(RequestHandlerSelectors.basePackage("com.ruoyi.project.tool.swagger"))\n 62:                 // 扫描所有 .apis(RequestHandlerSelectors.any())\n 63:                 .paths(PathSelectors.any())\n 64:                 .build()\n 65:                 /* 设置安全模式，swagger可以设置访问token */\n 66:                 .securitySchemes(securitySchemes())\n 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:SwaggerConfig类中的createRestApi方法创建Docket对象以配置Swagger接口文档\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_1>\n<路径_2>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:Docket\n        被调用代码单元名称:securityContexts\n        当前代码源码: 67:                 .securityContexts(securityContexts())\n 68:                 .pathMapping(pathMapping);\n        源码摘要描述:Docket对象调用securityContexts()方法配置安全上下文\n        </路径_2>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityContext\n        被调用代码单元名称:defaultAuth\n        当前代码源码: 89:                         .securityReferences(defaultAuth())\n        源码摘要描述:securityContexts方法调用defaultAuth()以定义默认的安全引用\n        </路径_1>', '<路径_0>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_0>\n<路径_1>\n        源码路径:C:\\Users\\34834\\Desktop\\黑客\\AiCodeAudits\\pythonProject\\演示项目\\RuoYi-Vue-master\\ruoyi-admin\\src\\main\\java\\com\\ruoyi\\web\\core\\config\\SwaggerConfig.java\n        源码文件名称:SwaggerConfig.java\n        调用代码单元名称:SecurityReference\n        被调用代码单元名称:AuthorizationScope\n        当前代码源码:100:         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");\n101:         AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n102:         authorizationScopes[0] = authorizationScope;\n103:         List<SecurityReference> securityReferences = new ArrayList<>();\n104:         securityReferences.add(new SecurityReference("Authorization", authorizationScopes));\n        源码摘要描述:defaultAuth方法使用AuthorizationScope来配置安全引用的授权范围\n        </路径_1>']
2025-02-01T15:32:47.726867+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：过时依赖风险（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：使用过时的maven-war-plugin可能被攻击者利用已知漏洞进行攻击
  ▶ 修复建议：升级到maven-war-plugin的最新版本以修复已知漏洞

<审计通过> 
</审计报告>
2025-02-01T15:32:47.726867+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的开发工具依赖（中危）
  ▶ 位置：L21-L25
  ▶ 代码特征：
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>
    </dependency>
  ▶ 攻击向量：由于spring-boot-devtools是开发工具，可能在生产环境中被意外启用，暴露调试信息或者自动重启功能，导致潜在的安全漏洞。
  ▶ 修复建议：在生产环境中移除或排除devtools依赖
</审计报告>
2025-02-01T15:32:47.726867+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的依赖版本（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：maven-war-plugin的3.1.0版本存在已知漏洞， attackers may exploit vulnerabilities to disrupt service or gain unauthorized access.
  ▶ 修复建议：升级至最新的稳定版本

■ 漏洞类型：不安全的依赖版本（中危）
  ▶ 位置：L30
  ▶ 代码特征：
    <artifactId>springfox-boot-starter</artifactId>
  ▶ 攻击向量：springfox-boot-starter的所使用版本可能存在未修复的安全漏洞，可能导致API文档信息泄露或被篡改。
  ▶ 修复建议：审查并更新至最新版本以降低安全风险
</审计报告>
2025-02-01T15:32:47.727888+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：使用过时依赖（中危）
  ▶ 位置：L36-L38
  ▶ 代码特征：
    <artifactId>swagger-models</artifactId>
    <version>1.6.2</version>
  ▶ 攻击向量：依赖的swagger-models库版本过旧，可能存在已知的安全漏洞
  ▶ 修复建议：升级swagger-models库至最新版本以避免潜在的安全漏洞

■ 漏洞类型：配置不当（中危）
  ▶ 位置：L88
  ▶ 代码特征：
    <failOnMissingWebXml>false</failOnMissingWebXml>
  ▶ 攻击向量：未强制要求web.xml文件，可能导致安全配置的忽略
  ▶ 修复建议：将failOnMissingWebXml设置为true以确保安全配置
</审计报告>
2025-02-01T15:32:47.727888+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在依赖漏洞（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version> 
  ▶ 攻击向量：maven-war-plugin 版本 3.1.0 可能存在已知漏洞，建议检查并更新到最新稳定版本
  ▶ 修复建议：验证maven-war-plugin的版本并更新至安全版本

■ 漏洞类型：潜在依赖漏洞（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    <artifactId>mysql-connector-java</artifactId> 
  ▶ 攻击向量：mysql-connector-java 可能存在已知安全漏洞，建议检查依赖的版本，确保使用受支持的最新版本 
  ▶ 修复建议：更新mysql-connector-java至最新可用版本以降低风险
</审计报告>
2025-02-01T15:32:47.730400+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：无
  ▶ 位置：N/A
  ▶ 代码特征：N/A
  ▶ 修复建议：无

<审计通过>
</审计报告>
2025-02-01T15:32:47.731422+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:47.731422+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:47.731422+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：依赖版本过期（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 潜在影响：maven-war-plugin 版本 3.1.0 已知存在多个漏洞，可能导致构建的 WAR 文件存在安全隐患。
  ▶ 修复建议：升级到最新版本的 maven-war-plugin。

■ 漏洞类型：依赖版本过期（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    <version>2.5.15</version>
  ▶ 潜在影响：spring-boot-maven-plugin 版本 2.5.15 存在多个已知安全漏洞，可能导致项目在运行时受到攻击。
  ▶ 修复建议：升级到最新版本的 spring-boot-maven-plugin。
</审计报告>
2025-02-01T15:32:47.731422+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\pom.xml
■ 漏洞类型：使用过时的组件（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    <version>3.1.0</version>
  ▶ 攻击向量：潜在的已知漏洞可能被利用，攻击者可通过针对已知漏洞进行攻击。
  ▶ 修复建议：将maven-war-plugin更新至最新版本以修复已知安全问题。

</审计报告>
2025-02-01T15:32:51.238008+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L4
  ▶ 代码特征：
    <property name="log.path" value="/home/ruoyi/logs" />
  ▶ 攻击向量：攻击者可能通过日志路径获取到应用的日志文件，进而窃取敏感信息
  ▶ 修复建议：将日志路径设置为不易被猜测的路径，同时限制日志文件访问权限

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L6
  ▶ 代码特征：
    <property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />
  ▶ 攻击向量：如果日志中包含敏感信息，攻击者可能通过分析日志格式获取重要上下文信息
  ▶ 修复建议：确保不在日志中输出敏感信息
</审计报告>
2025-02-01T15:32:51.239025+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:51.239025+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：敏感数据泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：日志文件路径和名称可被外部用户猜测，可能导致敏感信息泄露
  ▶ 修复建议：使用动态的、随机的文件名称，或确保日志文件的访问权限严格控制

■ 漏洞类型：敏感数据泄露（中危）
  ▶ 位置：L9
  ▶ 代码特征：
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
  ▶ 攻击向量：控制台输出日志可能包含敏感信息，攻击者通过控制台注入等手段获取敏感数据
  ▶ 修复建议：过滤或屏蔽敏感信息，确保不在控制台输出中显示

</审计报告>
2025-02-01T15:32:51.240022+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L17-L27
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：${log.path}若暴露可以导致系统日志路径泄露，攻击者可试图访问日志文件
  ▶ 修复建议：检查${log.path}的访问权限，避免将敏感配置暴露
  
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62-L72
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：${log.path}若未加以保护，可能导致用户访问日志文件泄露
  ▶ 修复建议：实施日志文件的访问控制和加密措施
</审计报告>
2025-02-01T15:32:51.240525+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：日志文件路径外泄（中危）
  ▶ 位置：L62, L39
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
    <file>${log.path}/sys-error.log</file>
  ▶ 攻击向量：攻击者可通过预测或暴力破解日志路径，访问敏感日志信息
  ▶ 修复建议：确保log.path为安全目录，限制访问权限，并考虑使用更复杂的路径名避免推测

■ 漏洞类型：敏感信息记录（中危）
  ▶ 位置：L70, L48
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：若log.pattern中包含敏感数据（如用户信息），则可能泄露到日志中
  ▶ 修复建议：确保log.pattern不包含任何敏感信息

</审计报告>
2025-02-01T15:32:51.240525+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：若${log.path}被暴露，攻击者可能获取日志文件位置，从而访问敏感信息
  ▶ 修复建议：使用安全的存储路径，并限制对日志文件的访问权限

■ 漏洞类型：日志记录敏感信息（高危）
  ▶ 位置：L70
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：若log.pattern中包含敏感信息（如用户信息、密码），将导致敏感信息被记录并可能泄露
  ▶ 修复建议：确保日志不记录敏感信息，使用合适的日志模式
</审计报告>
2025-02-01T15:32:51.240525+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:51.240525+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:51.241526+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L62
  ▶ 代码特征：
    <file>${log.path}/sys-user.log</file>
  ▶ 攻击向量：若${log.path}被不当配置，攻击者可显示或访问日志文件，暴露敏感信息。
  ▶ 修复建议：限制日志文件的访问权限，并确保路径配置安全。
  
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    <fileNamePattern>${log.path}/sys-user.%d{yyyy-MM-dd}.log</fileNamePattern>
  ▶ 攻击向量：同上，在日志文件名中包含日期信息可能被恶意利用，帮助攻击者推测日志生成的时间和频率，进一步暴露系统使用情况。
  ▶ 修复建议：同上，确保日志文件的访问权限安全，并适配更安全的文件命名策略。
</审计报告>
2025-02-01T15:32:51.241526+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：缺乏敏感信息过滤（信息）
  ▶ 位置：L8-L12
  ▶ 代码特征：
    <pattern>${log.pattern}</pattern>
  ▶ 攻击向量：如果log.pattern包含敏感数据，可能在控制台输出中泄露
  ▶ 修复建议：使用合适的模式过滤敏感信息
  
■ 漏洞类型：缺乏日志审计（中危）
  ▶ 位置：L84-L86
  ▶ 代码特征：
    <root level="info">
  ▶ 攻击向量：信息级别日志记录未包括调试和错误信息，可能导致问题排查困难
  ▶ 修复建议：考虑添加debug和error日志级别以增强审计能力
</审计报告>
2025-02-01T15:32:58.299378+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\logback.xml
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L17
  ▶ 代码特征：
    <file>${log.path}/sys-info.log</file>
  ▶ 攻击向量：如果${log.path}指向外部可访问目录，恶意用户可通过访问日志文件获取敏感信息。
  ▶ 修复建议：确保日志文件路径不可被外部访问，或使用安全权限配置。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L21
  ▶ 代码特征：
    <fileNamePattern>${log.path}/sys-info.%d{yyyy-MM-dd}.log</fileNamePattern>
  ▶ 攻击向量：暴露历史日志文件名模式，潜在泄露系统操作信息。
  ▶ 修复建议：限制外部访问日志文件，或对日志名进行混淆处理。
</审计报告>
2025-02-01T15:32:58.299906+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\resources\mybatis\mybatis-config.xml
■ 漏洞类型：开启缓存可能引发的缓存污染（中危）
  ▶ 位置：L8
  ▶ 代码特征：
    <setting name="cacheEnabled" value="true" />
  ▶ 攻击向量：如果缓存未妥善管理，恶意用户可能通过重复请求利用缓存数据导致数据泄露或篡改
  ▶ 修复建议：根据需求调整缓存策略并确保缓存清理机制的实施

■ 漏洞类型：默认执行器类型未限制（中危）
  ▶ 位置：L13
  ▶ 代码特征：
    <setting name="defaultExecutorType" value="SIMPLE" />
  ▶ 攻击向量：使用BATCH执行器未加控制可能导致任意SQL执行，恶意用户可以执行大量操作
  ▶ 修复建议：限制执行器类型为REUSE或通过参数化查询减少风险

</审计报告>
2025-02-01T15:32:58.300414+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:58.300414+0800 | DEBUG | <审计通过>
2025-02-01T15:32:58.300414+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:58.300414+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:32:58.301421+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：攻击者可以通过直接访问该接口获取验证码图像的Base64编码，从而可能进行恶意操作（如暴力破解）。
  ▶ 修复建议：对生成的验证码进行额外的保护，例如引入限制请求频率或增加验证码复杂度。

■ 漏洞类型：未充分验证的用户输入（信息）
  ▶ 位置：L49
  ▶ 代码特征：
    boolean captchaEnabled = configService.selectCaptchaEnabled();
  ▶ 攻击向量：如果configService遭到攻击，攻击者能够修改验证码启用状态，导致验证码被绕过。
  ▶ 修复建议：确保configService的安全性，并对其返回结果进行有效验证。

</审计报告>
2025-02-01T15:32:58.301421+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：恶意用户可利用此接口获取验证码的Base64编码，从而进行暴力破解
  ▶ 潜在影响：未限制验证码的获取频率，攻击者可能通过自动化手段获取大量验证码，影响账号安全
  ▶ 修复建议：引入验证码请求次数限制和有效时间限制，并对验证码的获取行为进行验证

■ 漏洞类型：未验证的输入（低危）
  ▶ 位置：L49
  ▶ 代码特征：
    boolean captchaEnabled = configService.selectCaptchaEnabled();
  ▶ 攻击向量：未对configService的返回结果进行严格检查，若其被篡改，可能导致验证码功能被关闭
  ▶ 潜在影响：攻击者通过改变配置使得验证码失效，从而进行恶意操作
  ▶ 修复建议：确保configService的返回结果经过适当的验证和保护
</审计报告>
2025-02-01T15:32:58.301421+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L64
  ▶ 代码特征：
    String captchaType = RuoYiConfig.getCaptchaType();
  ▶ 攻击向量：可被恶意用户通过操控请求参数来影响验证码的生成类型，可能导致生成不安全的或不必要的验证码
  ▶ 修复建议：对captchaType进行白名单验证，确保其值为预期的类型

■ 漏洞类型：不安全的图像处理（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    ImageIO.write(image, "jpg", os);
  ▶ 攻击向量：若image对象来源于用户输入，可能存在图像处理上的漏洞
  ▶ 修复建议：确保image是经过验证和清理的，并限制图像类型以防止潜在的恶意文件上传

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L87
  ▶ 代码特征：
    return AjaxResult.error(e.getMessage());
  ▶ 攻击向量：抛出异常时直接返回错误信息，可能泄露系统内部信息给攻击者
  ▶ 修复建议：不要直接返回异常的细节，采用通用错误信息，并记录详细日志
</审计报告>
2025-02-01T15:32:58.301421+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CaptchaController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    ajax.put("img", Base64.encode(os.toByteArray()));
  ▶ 攻击向量：如果Base64编码的验证码图像被发送到第三方，可以被恶意用户利用进行暴力破解。
  ▶ 修复建议：在前端或后端实现flood protection来限制验证码图像的请求频率，同时对返回的验证码进行过期处理，避免长时间有效。

■ 漏洞类型：未验证的外部输入（中危）
  ▶ 位置：L64
  ▶ 代码特征：
    String captchaType = RuoYiConfig.getCaptchaType();
  ▶ 攻击向量：若RuoYiConfig.getCaptchaType()返回了未验证的内容，有可能导致生成的验证码不符合预期，允许攻击者更改生成的验证码方式。
  ▶ 修复建议：确保captchaType的可选值是有限且经过验证的。

</审计报告>
2025-02-01T15:33:02.965747+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L51-L53
  ▶ 代码特征：
    if (!FileUtils.checkAllowDownload(fileName)) {
        throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));
    }
  ▶ 攻击向量：如果checkAllowDownload方法未进行适当的验证，攻击者可以构造fileName如"../../../../etc/passwd"进行路径遍历攻击，提取系统文件。
  ▶ 修复建议：完善checkAllowDownload方法，对fileName进行严格的格式和路径验证，确保只允许合法的文件名。

■ 漏洞类型：不安全的文件下载（中危）
  ▶ 位置：L60
  ▶ 代码特征：
    FileUtils.writeBytes(filePath, response.getOutputStream());
  ▶ 攻击向量：如果filePath参数可被攻击者控制，可以下载非预期文件。
  ▶ 修复建议：确保filePath的生成和用户输入的严格验证，避免直接使用来自外部的输入进行文件操作。
</审计报告>
2025-02-01T15:33:02.965747+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：不安全文件下载（高危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：攻击者可以通过构造恶意文件路径（如../）下载服务器敏感文件
  ▶ 修复建议：对downloadPath进行严格校验，确保仅允许下载特定文件。

■ 漏洞类型：信息泄露（高危）
  ▶ 位置：L51-L54
  ▶ 代码特征：
    throw new Exception(StringUtils.format("文件名称({})非法，不允许下载。 ", fileName));
  ▶ 攻击向量：错误信息中包含非法文件名称，可能被攻击者用于猜测文件系统结构
  ▶ 修复建议：抛出通用异常，不透露具体的非法文件名称。
</审计报告>
2025-02-01T15:33:02.966725+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L56
  ▶ 代码特征：
    String filePath = RuoYiConfig.getDownloadPath() + fileName;
  ▶ 攻击向量：构造fileName="../secret/file.txt"以读取服务器文件
  ▶ 修复建议：对fileName进行严格校验，只允许下载特定目录下的文件名

■ 漏洞类型：未处理的IO异常（中危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：当downloadPath无效时，可能导致应用崩溃或返回错误信息
  ▶ 修复建议：使用try-catch处理IO异常，并返回用户友好的错误提示
</审计报告>
2025-02-01T15:33:02.966725+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：构造downloadPath为包含路径穿越字符的字符串，如"../../etc/passwd"，以下载服务器敏感文件
  ▶ 修复建议：对downloadPath进行严格验证，限制可下载的路径。

■ 漏洞类型：文件上传未验证（高危）
  ▶ 位置：L83
  ▶ 代码特征：
    String fileName = FileUploadUtils.upload(filePath, file);
  ▶ 攻击向量：上传的文件未经过扩展名或内容审核，允许上传恶意文件（如.php或.jsp）
  ▶ 修复建议：实现文件类型检查与文件杀毒。

</审计报告>
2025-02-01T15:33:02.966725+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\common\CommonController.java
■ 漏洞类型：路径遍历（高危）
  ▶ 位置：L155-L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：构造downloadPath=../../secret/file.txt访问服务器上任意文件
  ▶ 潜在影响：攻击者可通过特殊构造的路径下载服务器内任意敏感文件
  ▶ 修复建议：对downloadPath进行严格验证，确保其路径合法

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L84
  ▶ 代码特征：
    String url = serverConfig.getUrl() + fileName;
  ▶ 攻击向量：若fileName未被充分校验，攻击者可能利用此信息构造恶意请求
  ▶ 潜在影响：HTTP响应中可能泄露敏感信息或提供有关服务器结构的信息
  ▶ 修复建议：对fileName进行适当的过滤和校验
</审计报告>
2025-02-01T15:33:02.967717+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：路径穿越（高危）
  ▶ 位置：L156
  ▶ 代码特征：
    FileUtils.writeBytes(downloadPath, response.getOutputStream());
  ▶ 攻击向量：如果downloadPath参数来自用户输入，可能构造路径如 '../../../etc/passwd' 进行敏感文件下载
  ▶ 修复建议：验证downloadPath不包含路径穿越字符并进行白名单过滤

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L89
  ▶ 代码特征：
    ajax.put("originalFilename", file.getOriginalFilename());
  ▶ 攻击向量：通过未过滤直接返回用户上传文件名，可能泄露敏感信息
  ▶ 修复建议：对originalFilename进行过滤，仅返回安全的文件名
</审计报告>
2025-02-01T15:33:02.967717+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的反序列化（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
  ▶ 攻击向量：如果攻击者能够控制Redis内容，可能导致恶意数据的反序列化，从而执行代码或获取敏感数据。
  ▶ 修复建议：确保该输入来自可信源，并验证输入的数据完整性。

■ 漏洞类型：未处理的异常（中危）
  ▶ 位置：L50
  ▶ 代码特征：
    public AjaxResult getInfo() throws Exception
  ▶ 攻击向量：如果Redis操作失败，可能导致信息泄露或程序崩溃。
  ▶ 修复建议：捕获异常并返回用户友好的错误信息，而不是直接抛出异常。

■ 漏洞类型：权限绕过（高危）
  ▶ 位置：L48
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('monitor:cache:list')")
  ▶ 攻击向量：如果SpEL表达式未正确实现，可能被绕过，从而导致未授权访问。
  ▶ 修复建议：审查权限管理逻辑以确保安全性。

</审计报告>
2025-02-01T15:33:02.967717+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：潜在拒绝服务攻击（DoS）（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    Properties info = (Properties) redisTemplate.execute((RedisCallback<Object>) connection -> connection.info());
  ▶ 攻击向量：若Redis数据库连接不够健壮，恶意用户可频繁调用此方法使得Redis服务负载过高，导致服务拒绝。
  ▶ 修复建议：在调用前加入连接池的使用及连接数量限制，并添加适当的异常处理逻辑。

■ 漏洞类型：未经授权的缓存删除（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：未对cacheKeys的内容进行验证，如果用户能够操控cacheKeys，则可以执行不必要的删除操作。
  ▶ 修复建议：添加对cacheKeys的来源和有效性的检查，只允许特定用户或来源的请求。

</审计报告>
2025-02-01T15:33:02.968713+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：不安全的直接缓存操作（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys来自不受信任的输入，可能导致意外删除或清空缓存
  ▶ 修复建议：确保cacheKeys经过验证和清理，只允许删除已知的安全键

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L54
  ▶ 代码特征：
    Object dbSize = redisTemplate.execute((RedisCallback<Object>) connection -> connection.dbSize());
  ▶ 攻击向量：如果攻击者能够访问该函数的执行权限，可以调用dbSize方法，获取数据库的大小信息，可能泄露存储信息
  ▶ 修复建议：限制该操作的可访问性，并通过权限控制防止未授权访问
</审计报告>
2025-02-01T15:33:02.968713+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：命令注入（中危）
  ▶ 位置：L83
  ▶ 代码特征：
    Set<String> cacheKeys = redisTemplate.keys(cacheName + "*");
  ▶ 攻击向量：构造cacheName为"abc' OR '1'='1"可以获取不应有的缓存键
  ▶ 修复建议：验证并清理cacheName的输入，限制合法字符

■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys被恶意构造，攻击者可能删除所有缓存数据
  ▶ 修复建议：在delete操作前验证用户身份和权限，确保其有权删除特定缓存
</审计报告>
2025-02-01T15:33:06.856734+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：任意缓存清除（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys来自于用户输入，攻击者可以构造cacheKeys删除全局或重要缓存键。
  ▶ 修复建议：在使用cacheKeys前进行严格验证，确保不包含恶意或未授权的键。

■ 漏洞类型：未验证的缓存获取（中危）
  ▶ 位置：L91
  ▶ 代码特征：
    String cacheValue = redisTemplate.opsForValue().get(cacheKey);
  ▶ 攻击向量：如果cacheKey来自用户输入，攻击者可以尝试访问未授权的缓存内容。
  ▶ 修复建议：验证cacheKey的合法性和安全性，避免敏感信息泄露。
</审计报告>
2025-02-01T15:33:06.856734+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：未验证的参数（中危）
  ▶ 位置：L101-L118
  ▶ 代码特征：
    redisTemplate.delete(cacheKeys);
  ▶ 攻击向量：如果cacheKeys来自不受信任的用户输入，可能导致批量删除不应删除的缓存项
  ▶ 修复建议：对cacheKeys进行验证，确保只包含合法的缓存键

</审计报告>
2025-02-01T15:33:06.857761+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
<审计通过>
</审计报告>
2025-02-01T15:33:06.857761+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\CacheController.java
■ 漏洞类型：输入验证不足（中危）
  ▶ 位置：L65
  ▶ 代码特征：
    data.put("value", StringUtils.substringBetween(property, "calls=", ",usec"));
  ▶ 攻击向量：如果property为用户可控输入，可能导致substringBetween方法引入未验证的数据，造成YAML/JSON注入等问题
  ▶ 修复建议：对property进行严格的格式验证和限制输入来源

<审计通过> 
</审计报告>
2025-02-01T15:33:06.857761+0800 | DEBUG | <审计报告>
<审计通过>
</审计报告>
2025-02-01T15:33:06.857761+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\ServerController.java
■ 漏洞类型：反序列化漏洞（高危）
  ▶ 位置：L23-L25
  ▶ 代码特征：
    Server server = new Server();
    server.copyTo();
    return AjaxResult.success(server);
  ▶ 攻击向量：攻击者可以通过构造恶意的Server对象，利用copyTo方法执行任意代码。
  ▶ 潜在影响：可能导致代码执行，服务器被控制。
  ▶ 修复建议：对传入的对象进行严格验证或使用安全的对象反序列化方法。
</审计报告>
2025-02-01T15:33:06.857761+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\ServerController.java
■ 漏洞类型：无漏洞
</审计报告>
2025-02-01T15:33:06.857761+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
  ▶ 攻击向量：未对logininfor参数进行严格的输入验证，可能导致通过构造恶意对象进行SQL注入或其他攻击。
  ▶ 修复建议：对logininfor对象进行输入验证，确保其属性符合预期格式和范围。

</审计报告>
2025-02-01T15:33:06.857761+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L50-L52
  ▶ 代码特征：
    List<SysLogininfor> list = logininforService.selectLogininforList(logininfor);
  ▶ 攻击向量：构造恶意SysLogininfor对象注入到selectLogininforList()，导致绕过验证及获取敏感数据
  ▶ 修复建议：在调用selectLogininforList之前，对logininfor进行严谨的校验

■ 漏洞类型：敏感信息泄露（高危）
  ▶ 位置：L53-L54
  ▶ 代码特征：
    util.exportExcel(response, list, "登录日志");
  ▶ 攻击向量：通过不正当手段访问导出的Excel文件，可能会泄露用户登录信息
  ▶ 修复建议：确保只有具备适当权限的用户能调用该导出功能，并对返回数据进行脱敏处理
</审计报告>
2025-02-01T15:33:06.859199+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysLogininforController.java
■ 漏洞类型：不安全的用户输入处理（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    passwordService.clearLoginRecordCache(userName);
  ▶ 攻击向量：如果userName未经过适当的验证和清理，有可能被恶意用户构造特殊输入，例如利用空值、控制字符等，可能导致不必要的清理操作或信息泄露。
  ▶ 修复建议：在调用passwordService方法前，验证并清理userName用户输入。

</审计报告>
2025-02-01T15:33:16.354016+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysOperlogController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L36-L40
  ▶ 代码特征：
    List<SysOperLog> list = operLogService.selectOperLogList(operLog);
  ▶ 攻击向量：如果SysOperLog类的某些字段未进行适当的输入验证，攻击者可以构造恶意输入，导致数据库中的敏感信息泄露。
  ▶ 修复建议：对操作日志查询参数进行合法性校验以及必要的数据过滤。

■ 漏洞类型：权限管理不当（中危）
  ▶ 位置：L64-L66
  ▶ 代码特征：
    operLogService.cleanOperLog();
  ▶ 攻击向量：如果未对调用clean()方法的用户进行适当权限验证，攻击者可能会恶意调用此方法清除日志，从而隐藏其恶意活动。
  ▶ 修复建议：在调用清除操作日志方法前，添加用户权限校验。

</审计报告>
2025-02-01T15:33:16.354016+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysOperlogController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L64-L66
  ▶ 代码特征：
    operLogService.cleanOperLog();
  ▶ 攻击向量：未对调用者进行身份验证，恶意用户可以直接调用该方法清除日志
  ▶ 修复建议：在调用该方法前进行用户权限验证，确保调用者具有相应角色权限

■ 漏洞类型：数据泄露（信息）
  ▶ 位置：L48-L50
  ▶ 代码特征：
    util.exportExcel(response, list, "操作日志");
  ▶ 攻击向量：如果操作日志列表包含敏感信息，恶意用户可能通过导出接口泄露这些信息
  ▶ 修复建议：对导出的数据进行清洗，确保不包含敏感信息或在导出前进行权限检查
</审计报告>
2025-02-01T15:33:16.355017+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L45
  ▶ 代码特征：
    Collection<String> keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + "*");
  ▶ 攻击向量：如果CacheConstants.LOGIN_TOKEN_KEY的值来自用户输入，攻击者可能可以通过输入恶意值来操作Redis键，导致未授权访问或数据泄露
  ▶ 修复建议：对CacheConstants.LOGIN_TOKEN_KEY进行严格验证或清洗，确保不包含恶意字符或意外的输入

■ 漏洞类型：代码逻辑问题（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：tokenId的来源未检查，恶意用户可以构造tokenId值影响删除的对象，导致意外删除用户会话。
  ▶ 修复建议：在删除操作前，验证tokenId的合法性和权限

</审计报告>
2025-02-01T15:33:16.355017+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L52
  ▶ 代码特征：
    userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));
  ▶ 攻击向量：攻击者可能通过构造特定的ipaddr、userName、user值，利用selectOnlineByInfo方法获取不应暴露的用户在线信息
  ▶ 修复建议：对输入参数进行严格验证和过滤，以防止敏感信息泄露

■ 漏洞类型：不当授权（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：若tokenId可以被用户控制，攻击者可能伪造tokenId进行非法的TOKEN删除操作
  ▶ 修复建议：对tokenId进行验证，确保只有授权用户才能进行删除操作
</审计报告>
2025-02-01T15:33:16.355017+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\monitor\SysUserOnlineController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L80
  ▶ 代码特征：
    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);
  ▶ 攻击向量：未对tokenId进行有效性验证，可能导致恶意token的删除操作，例如tokenId="; DROP TABLE users; --"
  ▶ 修复建议：对tokenId进行格式和有效性检查，避免执行未知的删除操作。
  
■ 漏洞类型：数据泄露（信息）
  ▶ 位置：L69
  ▶ 代码特征：
    return getDataTable(userOnlineList);
  ▶ 攻击向量：userOnlineList未经过滤，可能泄露敏感用户信息，例如用户在线状态、IP地址等。
  ▶ 修复建议：确保对返回数据进行必要的隐私过滤，只返回必要的字段。

</审计报告>
2025-02-01T15:33:16.355017+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L42-L46
  ▶ 代码特征：
    List<SysConfig> list = configService.selectConfigList(config);
  ▶ 攻击向量：未验证config参数来源，恶意用户可构造请求导致敏感配置信息泄露
  ▶ 修复建议：对config参数进行验证和清洗，限制输入的字段和类型

<审计通过>
2025-02-01T15:33:16.356014+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysConfigController.java
■ 漏洞类型：潜在的未授权访问（中危）
  ▶ 位置：L54
  ▶ 代码特征：
    List<SysConfig> list = configService.selectConfigList(config);
  ▶ 攻击向量：如果config中的参数未经过严格验证，攻击者可能构造特定参数导致不当数据访问
  ▶ 修复建议：对传入的config参数进行严谨的验证和条件限制

■ 漏洞类型：输出数据未转义（中危）
  ▶ 位置：L56
  ▶ 代码特征：
    util.exportExcel(response, list, "参数数据");
  ▶ 攻击向量：如果list中的数据未被正确处理，可能导致恶意数据被导出，形成数据泄露风险
  ▶ 修复建议：确保生成Excel时对信息进行必要的筛选和编码处理以防止数据泄露
</审计报告>
2025-02-01T15:33:16.356014+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDeptController.java
■ 漏洞类型：缺乏数据验证（中危）
  ▶ 位置：L119-L130
  ▶ 代码特征：
    public AjaxResult remove(@PathVariable Long deptId)
    {
        if (deptService.hasChildByDeptId(deptId))
        {
            return warn("存在下级部门,不允许删除");
        }
        ...
        return toAjax(deptService.deleteDeptById(deptId));
  ▶ 攻击向量：deptId可能由于没有有效验证，攻击者可构造无效或恶意的deptId进行删除操作，可能导致意外数据丢失。
  ▶ 修复建议：在remove方法中增加对deptId的有效性验证，比如检查其是否为正整数且符合业务逻辑。

■ 漏洞类型：缺乏权限控制（高危）
  ▶ 位置：L129
  ▶ 代码特征：
    deptService.checkDeptDataScope(deptId);
  ▶ 攻击向量：如果该方法没有实现有效的权限检查，攻击者可以操纵deptId以访问或删除他们不应有权限操作的数据。
  ▶ 修复建议：确保checkDeptDataScope方法中实施了足够的权限验证。

<审计通过>
</审计报告>
2025-02-01T15:33:16.356014+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的删除操作（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：如果dictCodes未经过适当验证和清理，攻击者可能构造恶意输入如'drop table users;'进行数据删除。
  ▶ 修复建议：对dictCodes进行有效性和类型检查，确保只允许合法的字典数据ID。

■ 漏洞类型：缺乏分页保护（中危）
  ▶ 位置：L47
  ▶ 代码特征：
    List<SysDictData> list = dictDataService.selectDictDataList(dictData);
  ▶ 攻击向量：未对startPage()进行限制，攻击者可以通过构造大量的dictData请求进行拒绝服务（DoS）攻击。
  ▶ 修复建议：限制每次请求返回的数据量，并记录请求频率以防止滥用。
</审计报告>
2025-02-01T15:33:16.356014+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：如果未对用户进行身份验证或授权，恶意用户可能构造请求以删除字典数据。
  ▶ 修复建议：在调用该方法之前添加权限验证。

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L119
  ▶ 代码特征：
    return success();
  ▶ 攻击向量：在dictDataService.deleteDictDataByIds调用失败时，没有处理异常可能导致应用崩溃或返回不当信息。
  ▶ 修复建议：增加异常处理逻辑。

<审计通过>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictDataController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L57
  ▶ 代码特征：
    List<SysDictData> list = dictDataService.selectDictDataList(dictData);
  ▶ 攻击向量：如果未对用户进行身份验证或授权，攻击者可能获取敏感的字典数据。
  ▶ 修复建议：在执行该方法之前添加权限验证。

■ 漏洞类型：未处理异常（中危）
  ▶ 位置：L60
  ▶ 代码特征：
    util.exportExcel(response, list, "字典数据");
  ▶ 攻击向量：在Excel导出过程中，如遇到I/O问题，可能造成应用程序异常。
  ▶ 修复建议：增加异常处理逻辑以妥善处理导出过程中的错误。
</审计报告>
2025-02-01T15:33:20.793960+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证输入（高危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictDataService.deleteDictDataByIds(dictCodes);
  ▶ 攻击向量：未验证的dictCodes变量可能导致批量删除操作的SQL注入，通过发送恶意构造的dictCodes值，例如"1'; DROP TABLE users; --"
  ▶ 修复建议：对dictCodes进行严格验证，确保合法性。

■ 漏洞类型：未处理的空值（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    if (StringUtils.isNull(data))
  ▶ 攻击向量：当dictType无效时，data为null但未进行充分处理，可能导致后续逻辑崩溃或空指针异常
  ▶ 修复建议：对dictType和data进行更全面的验证和处理。
</审计报告>
2025-02-01T15:33:20.794973+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：潜在的未过滤输入（中危）
  ▶ 位置：L128-L129
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果selectDictTypeAll未对查询参数进行有效过滤，可能导致敏感数据泄露或未授权数据访问
  ▶ 修复建议：在selectDictTypeAll方法中确保对输入参数进行有效验证和过滤

■ 漏洞类型：缺乏权限审查（中危）
  ▶ 位置：L37-L37
  ▶ 代码特征：
    @PreAuthorize("@ss.hasPermi('system:dict:list')")
  ▶ 攻击向量：若权限控制存在缺陷，用户可能会访问受限的字典类型信息
  ▶ 修复建议：确保在字典类型服务层进行严格的权限验证
</审计报告>
2025-02-01T15:33:20.794973+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L42
  ▶ 代码特征：
    List<SysDictType> list = dictTypeService.selectDictTypeList(dictType);
  ▶ 攻击向量：如果dictType中的属性未进行适当验证和处理，攻击者可能构造恶意输入，例如在dictType某些字段中插入SQL片段。
  ▶ 修复建议：对dictType中的所有输入进行严格验证并使用参数化查询。

■ 漏洞类型：反序列化攻击（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果SysDictType的反序列化过程受到不信任数据的影响，攻击者可以发送精心构造的对象，可能影响系统安全。
  ▶ 修复建议：使用安全的反序列化方法并确保从未信任的来源获取数据时进行验证。
</审计报告>
2025-02-01T15:33:20.795973+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：路径参数未验证（中危）
  ▶ 位置：L61-L63
  ▶ 代码特征：
    public AjaxResult getInfo(@PathVariable Long dictId)
  ▶ 攻击向量：构造dictId为负值或其他非法类型，可能导致不当操作或信息泄露
  ▶ 修复建议：在使用dictId之前进行有效性验证，确保其在预期范围内

<审计通过>
</审计报告>
2025-02-01T15:33:20.795973+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L76
  ▶ 代码特征：
    return error("新增字典'" + dict.getDictName() + "'失败，字典类型已存在");
  ▶ 攻击向量：攻击者可通过观察错误返回信息推测系统中已存在的字典类型名称
  ▶ 修复建议：返回通用错误信息，避免泄露具体内容

<审计通过>
<审计通过>
</审计报告>
2025-02-01T15:33:20.795973+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：不当输入验证（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果selectDictTypeAll方法未对输入数据进行有效验证，攻击者可能通过构造恶意输入来影响返回结果
  ▶ 修复建议：确保dictTypeService.selectDictTypeAll()方法对输入进行严格验证和清理

■ 漏洞类型：不当输入验证（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    return toAjax(dictTypeService.insertDictType(dict));
  ▶ 攻击向量：如果insertDictType方法接受的dict对象包含未经过滤的用户输入，可能导致数据库被注入恶意数据
  ▶ 修复建议：在insertDictType方法中加入对dict对象字段的严格验证
</审计报告>
2025-02-01T15:33:20.796957+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysDictTypeController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：攻击者可能通过调用selectDictTypeAll接口，获取未授权的字典类型数据
  ▶ 修复建议：在访问控制层面增加鉴权检查，以确保只有授权用户才能访问该方法

■ 漏洞类型：未处理异常（信息）
  ▶ 位置：L95
  ▶ 代码特征：
    return toAjax(dictTypeService.updateDictType(dict));
  ▶ 攻击向量：如果dictTypeService.updateDictType抛出异常，可能未能妥善处理，返回的结果可能会泄露敏感信息
  ▶ 修复建议：使用try-catch进行异常处理，并返回适当的错误信息
</审计报告>
2025-02-01T15:33:20.796957+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未授权访问（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    dictTypeService.deleteDictTypeByIds(dictIds);
  ▶ 攻击向量：如果没有实施权限控制，恶意用户可以调用此方法删除字典类型，可能导致数据丢失。
  ▶ 修复建议：添加权限验证，确保只有授权用户才能执行删除操作。

■ 漏洞类型：未验证输入（中危）
  ▶ 位置：L128
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果dictTypeService的方法内部未对dictIds参数进行校验，可能导致恶意用户输入无效或恶意数据。
  ▶ 修复建议：对输入参数进行严格的验证和清理，确保其有效性和安全性。
</审计报告>
2025-02-01T15:33:20.796957+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L128-L130
  ▶ 代码特征：
    List<SysDictType> dictTypes = dictTypeService.selectDictTypeAll();
  ▶ 攻击向量：如果未对返回的字典类型数据进行权限检查，攻击者可能会通过调用该接口获取敏感字典信息
  ▶ 修复建议：在返回前加入用户权限验证，确保用户有权访问字典数据

■ 漏洞类型：缓存控制缺失（中危）
  ▶ 位置：L118
  ▶ 代码特征：
    dictTypeService.resetDictCache();
  ▶ 攻击向量：如果系统未正确实现访问限制，恶意用户可能会频繁调用此接口刷新缓存，影响系统性能
  ▶ 修复建议：为缓存刷新接口添加权限控制
</审计报告>
2025-02-01T15:33:20.798041+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无漏洞
  ▶ 位置：无
  ▶ 代码特征：无
  ▶ 修复建议：无
</审计报告>
2025-02-01T15:33:29.353030+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysIndexController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：恶意用户可能通过访问首页接口获取系统配置的名称和版本信息，进一步足够的信息可能被恶意利用。
  ▶ 修复建议：不直接暴露敏感信息，考虑更改返回的信息，或控制权限访问。

</审计报告>
2025-02-01T15:33:29.353542+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysIndexController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L27
  ▶ 代码特征：
    return StringUtils.format("欢迎使用{}后台管理框架，当前版本：v{}，请通过前端地址访问。", ruoyiConfig.getName(), ruoyiConfig.getVersion());
  ▶ 攻击向量：攻击者能够通过公开的接口获取系统名称及版本，可能易受针对已知漏洞的攻击
  ▶ 修复建议：避免向外部泄露内部配置信息，可以通过限制访问或移除版本信息

<审计通过>
2025-02-01T15:33:29.353542+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L53
  ▶ 代码特征：
    String token = loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(), loginBody.getUuid());
  ▶ 攻击向量：若login方法未采取安全措施，攻击者可利用无效或抓取的凭证进行会话劫持
  ▶ 修复建议：确保使用安全的令牌生成机制，并在登录失败时限制返回信息

■ 漏洞类型：未验证输入（高危）
  ▶ 位置：L49-L50
  ▶ 代码特征：
    public AjaxResult login(@RequestBody LoginBody loginBody)
  ▶ 攻击向量：若loginBody中的字段未验证，攻击者能够构造特殊的输入内容如SQL注入、远程代码执行等
  ▶ 修复建议：对loginBody进行严格的输入验证和过滤

■ 漏洞类型：潜在SQL注入（高危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：若selectMenuTreeByUserId(userId)未妥善处理userId的类型和查询，可能导致SQL注入
  ▶ 修复建议：确保userId在用作查询前经过严格类型验证和过滤处理
</审计报告>
2025-02-01T15:33:29.353542+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L67-L68
  ▶ 代码特征：
    LoginUser loginUser = SecurityUtils.getLoginUser();
    SysUser user = loginUser.getUser();
  ▶ 攻击向量：若返回的用户信息包含敏感数据，则可能被攻击者获取
  ▶ 修复建议：限制返回的用户信息，仅提供必要字段

■ 漏洞类型：未经验证的用户ID（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：未验证用户身份，攻击者可能构造请求获取不应查看的菜单列表
  ▶ 修复建议：在调用menuService前，确保已验证用户身份及其权限
</审计报告>
2025-02-01T15:33:29.354544+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：如果SecurityUtils.getUserId()未能正确验证或过滤输入，恶意用户可能构造请求以获取其他用户的菜单。
  ▶ 修复建议：确保SecurityUtils.getUserId()包含适当的输入验证和权限检查，以防止未授权访问。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L70-L72
  ▶ 代码特征：
    Set<String> roles = permissionService.getRolePermission(user);
    Set<String> permissions = permissionService.getMenuPermission(user);
  ▶ 攻击向量：如果用户对象未经过严格的身份验证则可能导致角色和权限信息泄露给未授权用户。
  ▶ 修复建议：确保获取用户角色和权限信息前进行充分的身份验证。

</审计报告>
2025-02-01T15:33:29.354544+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysLoginController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：如果SecurityUtils.getUserId()未严格验证用户身份，攻击者可获取他人用户ID，造成信息泄露
  ▶ 修复建议：确保getUserId()方法内有适当的用户验证机制，防止任意用户信息被获取

■ 漏洞类型：授权问题（高危）
  ▶ 位置：L94
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：用户恶意修改userId参数，获取未授权的菜单树
  ▶ 修复建议：在selectMenuTreeByUserId方法中添加对userId的有效性和权限检查

</审计报告>
2025-02-01T15:33:29.354544+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的用户输入处理（中危）
  ▶ 位置：L93
  ▶ 代码特征：
    Long userId = SecurityUtils.getUserId();
  ▶ 攻击向量：如果SecurityUtils.getUserId() 方法未严格验证用户身份或存在伪造token的可能性，攻击者可能通过用户身份伪造获取菜单信息。
  ▶ 潜在影响：可导致未授权访问敏感用户菜单，影响系统信息安全和业务逻辑。
  ▶ 修复建议：确保SecurityUtils.getUserId()中包含对用户身份的严格验证。

■ 漏洞类型：潜在的权限控制缺失（中危）
  ▶ 位置：L94
  ▶ 代码特征：
    menuService.selectMenuTreeByUserId(userId);
  ▶ 攻击向量：如果没有对userId的权限进行验证，攻击者在恶意构造情况下可能会获取其他用户的菜单。
  ▶ 潜在影响：未授权用户可能访问本不应可见的菜单信息。
  ▶ 修复建议：在调用menuService.selectMenuTreeByUserId(userId)之前，验证用户的权限。

</审计报告>
2025-02-01T15:33:29.354544+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未认证访问（中危）
  ▶ 位置：L140
  ▶ 代码特征：
    return toAjax(menuService.deleteMenuById(menuId));
  ▶ 攻击向量：未对menuId进行来源验证，攻击者可直接调用deleteMenuById删除任意菜单
  ▶ 修复建议：在调用deleteMenuById前进行用户权限和menuId有效性检查

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysMenu> menus = menuService.selectMenuList(menu, getUserId());
  ▶ 攻击向量：若未对用户权限进行限制，可能泄露用户不该看到的菜单信息
  ▶ 修复建议：对返回的菜单数据进行访问控制
</审计报告>
2025-02-01T15:33:29.355733+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysNoticeController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L43
  ▶ 代码特征：
    List<SysNotice> list = noticeService.selectNoticeList(notice);
  ▶ 攻击向量：如果notice对象未经过滤，攻击者可以构造恶意数据使得sql查询被操纵，比如notice的条件包含SQL片段。
  ▶ 修复建议：确保对notice对象的属性进行有效验证和过滤，避免SQL注入风险。

■ 漏洞类型：不安全的数据处理（中危）
  ▶ 位置：L89
  ▶ 代码特征：
    return toAjax(noticeService.deleteNoticeByIds(noticeIds));
  ▶ 攻击向量：如果noticeIds未经过严格验证，攻击者可能通过构造恶意请求删除任意记录。
  ▶ 修复建议：对noticeIds进行严格的格式验证和权限检查，确保只有合法的ID才能被删除。
</审计报告>
2025-02-01T15:33:29.355733+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：无
  ▶ 位置：无具体漏洞
  ▶ 修复建议：无
</审计报告>
2025-02-01T15:33:43.154258+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的输入（中危）
  ▶ 位置：L44
  ▶ 代码特征：
    startPage();
  ▶ 攻击向量：未验证输入可能导致分页参数的注入，攻击者可以构造恶意请求以获取非授权数据。
  ▶ 修复建议：确保在调用startPage()之前对输入参数进行严格的验证和清理。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：成功返回的对象包含敏感数据，攻击者通过获得返回结果可能获取未授权信息。
  ▶ 修复建议：对返回的数据进行过滤，只返回必要的字段。
</审计报告>
2025-02-01T15:33:43.155264+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：潜在的命令注入（中危）
  ▶ 位置：L45
  ▶ 代码特征：
    List<SysPost> list = postService.selectPostList(post);
  ▶ 攻击向量：如果post参数未经过严格验证，攻击者可以构造恶意post输入，导致命令注入。
  ▶ 修复建议：对post参数进行严格的输入验证和过滤。

■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：成功返回posts时，如果posts包含敏感信息，可能会导致信息泄露。
  ▶ 修复建议：在返回前对posts进行敏感信息过滤。
</审计报告>
2025-02-01T15:33:43.155264+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：潜在XSS（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts中包含HTML或JavaScript代码，攻击者可通过传入恶意数据实现跨站脚本攻击。
  ▶ 修复建议：对返回的数据进行HTML编码处理，确保数据的安全性。

■ 漏洞类型：潜在XSS（中危）
  ▶ 位置：L46
  ▶ 代码特征：
    return getDataTable(list);
  ▶ 攻击向量：如果list中使用了用户上传的数据，且未经过处理，可能导致跨站脚本攻击。
  ▶ 修复建议：在返回前对list进行过滤和编码，确保安全。
</审计报告>
2025-02-01T15:33:43.155264+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：不安全的Excel导出（中危）
  ▶ 位置：L55
  ▶ 代码特征：
    ExcelUtil<SysPost> util = new ExcelUtil<SysPost>(SysPost.class);
  ▶ 攻击向量：如果ExcelUtil未对文件内容进行验证，攻击者可上传恶意脚本，通过构造数据影响导出结果
  ▶ 修复建议：确保Excel导出功能验证数据完整性和来源

<审计通过>
</审计报告>
2025-02-01T15:33:43.155264+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：若postId未经过充分验证或清洗，攻击者可能通过构造不当的postId查询数据库，查看敏感岗位信息
  ▶ 修复建议：对postId进行验证和过滤，确保其是合法有效的值
  
■ 漏洞类型：不充分的权限检查（中危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：如果postService.selectPostById方法未实现适当的权限校验，恶意用户可查询不应拥有的岗位信息
  ▶ 修复建议：在selectPostById方法中加入严格的权限检查，以确认请求者是否有权限访问该岗位信息
</审计报告>
2025-02-01T15:33:43.156262+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：XXE（XML外部实体注入）（高危）
  ▶ 位置：L66
  ▶ 代码特征：
    return success(postService.selectPostById(postId));
  ▶ 攻击向量：构造postId为'1 OR 1=1'进行GET请求，可导致数据泄露
  ▶ 修复建议：对postId进行严格的类型和格式验证，避免直接使用用户输入。

■ 漏洞类型：不安全的数据返回（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：未对posts进行过滤，可能泄露敏感信息
  ▶ 修复建议：确保posts对象中的数据经过严格的字段过滤和隐私保护处理。
</审计报告>
2025-02-01T15:33:43.156262+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感信息，返回可能导致信息泄露
  ▶ 修复建议：对返回的数据进行敏感信息过滤

■ 漏洞类型：逻辑漏洞（中危）
  ▶ 位置：L77
  ▶ 代码特征：
    if (!postService.checkPostNameUnique(post))
  ▶ 攻击向量：如果checkPostNameUnique方法未能有效阻止重复的岗位名称，可能导致重复数据的处理
  ▶ 修复建议：确保checkPostNameUnique实现了完全的唯一性检查
</审计报告>
2025-02-01T15:33:43.156262+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L79
  ▶ 代码特征：
    return error("新增岗位'" + post.getPostName() + "'失败，岗位名称已存在");
  ▶ 攻击向量：攻击者可以通过频繁尝试相同的岗位名称获取有效的反馈，进而推测系统中已存在的岗位信息。
  ▶ 修复建议：避免返回具体错误信息，改为“操作失败，请检查输入”。

<审计通过>
2025-02-01T15:33:43.156262+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts包含敏感信息，可能导致通过正常接口暴露数据
  ▶ 修复建议：确保posts不包含敏感信息，或使用脱敏处理

■ 漏洞类型：逻辑漏洞（中危）
  ▶ 位置：L81
  ▶ 代码特征：
    else if (!postService.checkPostCodeUnique(post))
  ▶ 攻击向量：如果checkPostCodeUnique方法实现不当，可能导致允许重复的岗位编码
  ▶ 修复建议：对checkPostCodeUnique的实现进行安全审计，确保唯一性检查的正确性
</审计报告>
2025-02-01T15:33:43.157258+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L85
  ▶ 代码特征：
    post.setCreateBy(getUsername());
  ▶ 攻击向量：如果getUsername()未经过身份验证或获取用户信息的逻辑存在缺陷，攻击者可能伪造用户身份。
  ▶ 修复建议：应确保getUsername()的调用有适当的权限检查，避免未授权访问。

■ 漏洞类型：数据泄露（信息）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts数据未经过授权检验，攻击者可能获取敏感岗位信息。
  ▶ 修复建议：在返回数据前应验证当前用户的权限，确保用户只能访问授权范围内的数据。
</审计报告>
2025-02-01T15:33:54.926825+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L86
  ▶ 代码特征：
    return toAjax(postService.insertPost(post));
  ▶ 攻击向量：如果没有适当的权限验证，恶意用户可能通过调用此接口插入任意岗位
  ▶ 修复建议：在调用insertPost之前添加权限验证

<审计通过>
</审计报告>
2025-02-01T15:33:54.927832+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L99
  ▶ 代码特征：
    return error("修改岗位'" + post.getPostName() + "'失败，岗位名称已存在");
  ▶ 攻击向量：恶意用户可通过反向工程获得敏感岗位名称信息，提高社会工程学攻击的成功率
  ▶ 修复建议：在返回错误信息时避免暴露敏感字段，可以使用通用错误提示
    
■ 漏洞类型：未验证返回数据安全（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：如果posts数据来自用户输入而未进行验证，恶意用户可能构造数据进行注入攻击
  ▶ 修复建议：在返回数据前进行适当的验证和过滤
</审计报告>
2025-02-01T15:33:54.927832+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：未验证用户输入（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    return success(posts);
  ▶ 攻击向量：未对posts进行验证，攻击者可构造恶意数据进行返回。
  ▶ 修复建议：确保对posts的数据结构和内容进行有效验证。
  
■ 漏洞类型：信息泄露（信息）
  ▶ 位置：L105
  ▶ 代码特征：
    post.setUpdateBy(getUsername());
  ▶ 攻击向量：当前用户信息未进行适当的保护，可能泄露用户身份信息。
  ▶ 修复建议：对getUsername()返回的敏感信息进行适当的审计和处理。

</审计报告>
2025-02-01T15:33:54.927832+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：代码注入（中危）
  ▶ 位置：L106
  ▶ 代码特征：
    return toAjax(postService.updatePost(post));
  ▶ 攻击向量：未对post进行充分验证，可以构造恶意post对象来影响updatePost逻辑
  ▶ 修复建议：对post对象进行严格的验证和过滤以避免代码注入风险

<审计通过>
</审计报告>
2025-02-01T15:33:54.927832+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：缺乏输入验证（高危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：postIds未经过严格验证与清洗，攻击者可构造postIds为非预期值，例如使用postIds='1,2; DROP TABLE users;'进行SQL注入或删除其他不相关数据
  ▶ 修复建议：对postIds进行类型检查和白名单过滤

<审计通过>
2025-02-01T15:33:54.927832+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：缺乏输入验证（高危）
  ▶ 位置：L117
  ▶ 代码特征：
    return toAjax(postService.deletePostByIds(postIds));
  ▶ 攻击向量：未验证postIds参数，可能导致SQL注入或者删除任意记录
  ▶ 修复建议：对postIds进行严格的输入验证和合法性检查

<审计通过>
</审计报告>
2025-02-01T15:33:54.929051+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysPostController.java
■ 漏洞类型：权限绕过（中危）
  ▶ 位置：L126-L127
  ▶ 代码特征：
    List<SysPost> posts = postService.selectPostAll();
    return success(posts);
  ▶ 攻击向量：如果postService.selectPostAll未验证用户权限，恶意用户可能会获取所有岗位信息
  ▶ 修复建议：在调用selectPostAll之前添加权限验证逻辑

</审计报告>
2025-02-01T15:33:54.929051+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：不安全的文件导出（中危）
  ▶ 位置：L56
  ▶ 代码特征：
    util.exportExcel(response, list, "岗位数据")
  ▶ 攻击向量：如果list包含恶意数据，可能导致Excel文件中嵌入恶意脚本。
  ▶ 潜在影响：用户下载的Excel文件中可能会出现恶意代码，导致XSS攻击。
  ▶ 修复建议：在导出前对数据进行严格的清洗和验证，确保不包含恶意内容。
</审计报告>
2025-02-01T15:33:54.929051+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：通过输出错误信息，攻击者可推测系统中已存在的用户名或电话号码，进而进行针对性攻击。
  ▶ 修复建议：避免直接输出用户相关信息，使用通用错误信息替代。

■ 漏洞类型：密码明文传输（高危）
  ▶ 位置：L98-L99
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
  ▶ 攻击向量：旧密码以明文形式与存储密码进行比对，可能在传输过程中被窃取。
  ▶ 修复建议：使用加密或哈希方案进行密码比对，确保传输过程中数据安全。

■ 漏洞类型：文件上传漏洞（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：如果FileUploadUtils未有效验证文件类型或大小，可能导致恶意文件上传。
  ▶ 修复建议：对上传文件进行严格验证，包括文件类型、大小及内容检查。

■ 漏洞类型：无验证的操作（高危）
  ▶ 位置：L128
  ▶ 代码特征：
    if (userService.updateUserAvatar(loginUser.getUsername(), avatar))
  ▶ 攻击向量：未检查用户权限可能导致任意用户更改头像。
  ▶ 修复建议：增加用户身份和权限验证，确保用户执行的操作是其权限范围内的。
</审计报告>
2025-02-01T15:33:54.929051+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71-L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：通过触发异常信息，可以泄露用户存在与否的信息
  ▶ 修复建议：避免在错误信息中使用具体的用户敏感信息，使用更为通用的错误提示。

■ 漏洞类型：文件上传未做验证（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：恶意用户可以通过上传一个非图片格式文件来进行攻击
  ▶ 修复建议：在上传文件时进行 MIME 类型和文件扩展名双重检查，确保文件为预期类型。

■ 漏洞类型：敏感信息使用不当（中危）
  ▶ 位置：L100-L104
  ▶ 代码特征：
    return error("修改密码失败，旧密码错误");
    return error("新密码不能与旧密码相同");
  ▶ 攻击向量：错误信息中泄露密码验证失败原因，可能会被恶意用户利用
  ▶ 修复建议：使用通用的错误信息，例如“密码验证失败”而非具体的描述。

</审计报告>
2025-02-01T15:34:03.017658+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：潜在的信息泄露（中危）
  ▶ 位置：L71, L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：攻击者可以构造请求，获取到其他用户的手机号码或邮箱信息，尤其是在响应中泄露的情况下。
  ▶ 修复建议：避免将用户信息直接暴露在错误信息中，可以使用通用的错误消息，不暴露具体的用户信息。

■ 漏洞类型：不安全的信息存储（中危）
  ▶ 位置：L106
  ▶ 代码特征：
    newPassword = SecurityUtils.encryptPassword(newPassword);
  ▶ 攻击向量：加密方法使用可能存在弱密码算法，不保证新密码的安全性，攻击者可能通过密码暴力破解获得信息。
  ▶ 修复建议：确保使用强加密算法和随机salt，保持安全性。

■ 漏洞类型：未验证的文件上传（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：攻击者可以上传恶意文件，导致远程代码执行或服务拒绝。
  ▶ 修复建议：对上传的文件进行严格验证，确保文件类型和内容的合法性。

■ 漏洞类型：未校验的用户输入（高危）
  ▶ 位置：L43-L53
  ▶ 代码特征：
    ajax.put("roleGroup", userService.selectUserRoleGroup(loginUser.getUsername()));
    ajax.put("postGroup", userService.selectUserPostGroup(loginUser.getUsername()));
  ▶ 攻击向量：用户可能利用图灵完整性范式对敏感数据发起攻击，造成未授权的数据访问和篡改。
  ▶ 修复建议：校验用户的权限，防止滥用行为。

</审计报告>
2025-02-01T15:34:03.018176+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L48-L49
  ▶ 代码特征：
    LoginUser loginUser = getLoginUser();
    SysUser user = loginUser.getUser();
  ▶ 攻击向量：若未正确验证用户身份，攻击者可能通过getLoginUser()窃取其他用户的信息。
  ▶ 修复建议：确保getLoginUser()方法严格验证用户身份。

■ 漏洞类型：用户输入校验缺失（低危）
  ▶ 位置：L69-L73
  ▶ 代码特征：
    if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))
  ▶ 攻击向量：若用户输入的手机号码经过形式验证未经过内容验证，攻击者可以利用特定的号码进行验证，可能导致业务逻辑绕过。
  ▶ 修复建议：增加手机号码的格式校验与合法性检查。

■ 漏洞类型：潜在的密码暴力破解（中危）
  ▶ 位置：L98
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
  ▶ 攻击向量：不限制尝试次数的情况下，攻击者可以通过暴力破解获取用户密码。
  ▶ 修复建议：对尝试密码的次数进行限制，并引入账户锁定机制。

■ 漏洞类型：不安全的文件上传（高危）
  ▶ 位置：L128
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：如果未进行足够的文件类型和内容检查，攻击者可以上传恶意文件，导致服务器被入侵。
  ▶ 修复建议：在文件上传时，严格校验文件的MIME类型和内容，确保上传的文件只有图片类型。

■ 漏洞类型：用户信息未加密存储（高危）
  ▶ 位置：L110
  ▶ 代码特征：
    loginUser.getUser().setPassword(newPassword);
  ▶ 攻击向量：如果新密码在未加密的情况下被存储，攻击者能够直接访问用户信息库，窃取用户密码。
  ▶ 修复建议：确保用户的密码信息始终使用安全的加密算法进行存储。
</审计报告>
2025-02-01T15:34:03.019180+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L71
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，手机号码已存在");
  ▶ 攻击向量：攻击者可能通过反复尝试不同的手机号码，获取哪些号码已注册，暴露用户名信息
  ▶ 修复建议：返回通用错误信息，而不要泄露用户名或其他敏感信息

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    return error("修改用户'" + loginUser.getUsername() + "'失败，邮箱账号已存在");
  ▶ 攻击向量：同上，攻击者得到相同信息，可以通过邮箱信息定位用户
  ▶ 修复建议：返回通用错误信息，而不要泄露用户名或其他敏感信息

■ 漏洞类型：强制类型转换（低危）
  ▶ 位置：L99-100
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
  ▶ 攻击向量：若提供了错误格式的密码（如null），将可能抛出异常或导致逻辑错误
  ▶ 修复建议：增加对输入密码的类型检查和处理

■ 漏洞类型：输入验证不足（低危）
  ▶ 位置：L124-126
  ▶ 代码特征：
    if (!file.isEmpty())
  ▶ 攻击向量：可以上传恶意文件，可能导致远程代码执行
  ▶ 修复建议：检查文件类型和大小，并对输入进行更加严格的验证
</审计报告>
2025-02-01T15:34:03.019180+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L49
  ▶ 代码特征：
    SysUser user = loginUser.getUser();
  ▶ 攻击向量：若未授权用户访问，则用户信息泄露
  ▶ 修复建议：在获取用户信息前，检查并确保用户已通过身份验证

■ 漏洞类型：密码安全（中危）
  ▶ 位置：L102-L106
  ▶ 代码特征：
    newPassword = SecurityUtils.encryptPassword(newPassword);
  ▶ 攻击向量：若新密码加密方法存在漏洞，可能导致用户密码被暴露
  ▶ 修复建议：使用更强的加密算法，同时确保安全存储加密后的密码

■ 漏洞类型：文件上传漏洞（高危）
  ▶ 位置：L126-L134
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：上传恶意文件可能导致代码执行或服务中断
  ▶ 修复建议：对上传文件进行更严格的类型和内容检查，确保只允许安全的文件类型

■ 漏洞类型：缺少有效性检查（信息）
  ▶ 位置：L69-L71, L73-L75
  ▶ 代码特征：
    if (StringUtils.isNotEmpty(user.getPhonenumber()) && !userService.checkPhoneUnique(currentUser))
  ▶ 攻击向量：若没有有效性检查，可能造成重复手机号或邮箱导致的用户数据混乱
  ▶ 修复建议：加强用户输入的有效性检查和反馈机制
</审计报告>
2025-02-01T15:34:03.019180+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysProfileController.java
■ 漏洞类型：密码暴露（中危）
  ▶ 位置：L98-L106
  ▶ 代码特征：
    if (!SecurityUtils.matchesPassword(oldPassword, password))
    if (SecurityUtils.matchesPassword(newPassword, password))
  ▶ 攻击向量：如果攻击者获取了系统中用户的旧密码，可以利用该功能暴力破解或进行社会工程学攻击，导致用户账户安全受威胁
  ▶ 修复建议：增加对旧密码的安全性检测，例如限制登录尝试次数，并使用更复杂的条件来验证新旧密码

</审计报告>
2025-02-01T15:34:03.020177+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：未验证的文件上传（高危）
  ▶ 位置：L127
  ▶ 代码特征：
    String avatar = FileUploadUtils.upload(RuoYiConfig.getAvatarPath(), file, MimeTypeUtils.IMAGE_EXTENSION);
  ▶ 攻击向量：恶意文件上传，用户可以上传任意文件，可能导致远程代码执行
  ▶ 修复建议：验证上传文件的类型和内容，确保仅允许上传图像文件

// 文件路径2
■ 漏洞类型：明文密码存储（高危）
  ▶ 位置：L106
  ▶ 代码特征：
    newPassword = SecurityUtils.encryptPassword(newPassword);
  ▶ 攻击向量：若没有强加密机制，攻击者可能在数据库中获取明文密码
  ▶ 修复建议：确保使用强加密算法和适当的盐值进行加密，避免使用已知的过时加密算法
</审计报告>
2025-02-01T15:34:03.020177+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：未验证的用户输入（中危）
  ▶ 位置：L31
  ▶ 代码特征：
    if (!("true".equals(configService.selectConfigByKey("sys.account.registerUser"))))
  ▶ 攻击向量：如果configService.selectConfigByKey方法返回的用户输入无法被正确验证，攻击者可能通过恶意修改配置实现非法注册。
  ▶ 修复建议：确保从configService获取的配置项是经过严格验证的，且增加必要的异常处理。

<审计通过>
</审计报告>
2025-02-01T15:34:03.020177+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
■ 漏洞类型：信任用户输入（高危）
  ▶ 位置：L35
  ▶ 代码特征：
    String msg = registerService.register(user);
  ▶ 攻击向量：如果register方法未对user进行充分验证，可构造恶意用户数据进行注册，可能导致用户数据篡改或服务拒绝。
  ▶ 修复建议：添加输入验证和清理逻辑，确保user数据符合预期格式和标准。

<审计通过>
2025-02-01T15:34:03.020177+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRegisterController.java
<审计通过>
</审计报告>
2025-02-01T15:34:03.020177+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L63
  ▶ 代码特征：
    List<SysRole> list = roleService.selectRoleList(role);
  ▶ 攻击向量：如果role对象中的字段如名称等未进行有效的过滤，则攻击者可构造含有SQL注入的角色名字或id来操控查询条件。
  ▶ 修复建议：在对role对象字段进行数据库查询前，应用有效的参数化查询或数据过滤。

■ 漏洞类型：反序列化漏洞（高危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果SysDept类没有进行适当的输入验证，攻击者可能通过构造恶意的SysDept对象，导致不安全的反序列化过程。
  ▶ 修复建议：确保对输入数据执行严格的验证与清理，避免对外部输入直接反序列化。

</审计报告>
2025-02-01T15:34:09.067031+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：潜在信息泄露（中危）
  ▶ 位置：L70-L74
  ▶ 代码特征：
    List<SysRole> list = roleService.selectRoleList(role);
    ExcelUtil<SysRole> util = new ExcelUtil<SysRole>(SysRole.class);
    util.exportExcel(response, list, "角色数据");
  ▶ 攻击向量：若未对传入的role进行严格验证，可能导致敏感角色信息的导出
  ▶ 修复建议：对role对象进行有效的安全检查，确保不导出超出权限的数据

■ 漏洞类型：不安全的对象创建（低危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：未验证SysDept对象的内容，可能导致敏感列表的暴露
  ▶ 修复建议：在创建SysDept对象时，确保对输入参数进行严格验证
</审计报告>
2025-02-01T15:34:09.067031+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L135
  ▶ 代码特征：
    loginUser.setUser(userService.selectUserByUserName(loginUser.getUser().getUserName()));
  ▶ 攻击向量：如果userName由用户输入且未经过严格验证，攻击者可利用此漏洞获取用户详细信息。
  ▶ 修复建议：对用户输入的userName进行严格的验证和过滤，避免不受信任的输入。

■ 漏洞类型：未经验证的输入（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果SysDept类的属性可以被用户控制，攻击者可以利用此主机类构造特殊输入，从而影响系统的行为。
  ▶ 修复建议：确保SysDept类的所有输入属性经过充分的验证。

</审计报告>
2025-02-01T15:34:09.068029+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：缺乏输入验证（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：如果SysDept类未对输入进行严格验证，攻击者可以通过修改请求体输入恶意数据来操控返回的部门树列表。
  ▶ 修复建议：对SysDept的输入进行严格的验证和清洗，确保数据的合法性和合规性。

■ 漏洞类型：缺乏权限验证（中危）
  ▶ 位置：L136
  ▶ 代码特征：
    loginUser.setPermissions(permissionService.getMenuPermission(loginUser.getUser()));
  ▶ 攻击向量：如果permissionService未对用户权限进行严格检查，攻击者可以被授权不当的权限，可能造成敏感信息泄露或操作篡改。
  ▶ 修复建议：在获取权限前验证用户的身份和角色，确保用户只能获取其拥有的权限。
</审计报告>
2025-02-01T15:34:09.068029+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L137
  ▶ 代码特征：
    tokenService.setLoginUser(loginUser);
  ▶ 攻击向量：未对loginUser进行身份验证，可通过伪造请求设置其他用户的登录状态
  ▶ 修复建议：在调用setLoginUser之前验证用户身份

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    deptService.selectDeptTreeList(new SysDept());
  ▶ 攻击向量：如果deptService根据未适当限制的SysDept对象返回所有部门信息，恶意用户可能利用此漏洞获取敏感的部门信息
  ▶ 修复建议：对SysDept输入进行验证和权限控制，以确保只有授权用户可以访问相关信息
</审计报告>
2025-02-01T15:34:09.068029+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysRoleController.java
■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L258
  ▶ 代码特征：
    ajax.put("checkedKeys", deptService.selectDeptListByRoleId(roleId));
  ▶ 攻击向量：如果roleId是由用户输入且未充分验证，攻击者可以通过构造任意roleId来获取任意角色的部门列表。
  ▶ 修复建议：在调用selectDeptListByRoleId前，确保roleId经过严格的身份验证，且仅允许合法用户访问该资源。

■ 漏洞类型：未授权访问（中危）
  ▶ 位置：L259
  ▶ 代码特征：
    ajax.put("depts", deptService.selectDeptTreeList(new SysDept()));
  ▶ 攻击向量：该代码未对deptService所返回的数据进行访问控制，攻击者可能通过调用相应接口获得部门树信息。
  ▶ 修复建议：在selectDeptTreeList方法中增加用户授权校验，确保只有具备适当权限的用户才能访问部门数据。
</审计报告>
2025-02-01T15:34:09.069025+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：SQL注入（高危）
  ▶ 位置：L64
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：如果user对象中属性未经过验证，攻击者可能构造恶意输入从而注入SQL语句
  ▶ 修复建议：确保user对象中的输入值经过验证和清洗

</审计报告>
2025-02-01T15:34:09.069025+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺少输入验证（中危）
  ▶ 位置：L73
  ▶ 代码特征：
    List<SysUser> list = userService.selectUserList(user);
  ▶ 攻击向量：如果user对象未经过严格验证，可能导致不当的数据检索，例如通过构造user对象进行信息泄露。
  ▶ 修复建议：对user对象的字段进行验证，确保无不合法值传入。

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L75
  ▶ 代码特征：
    util.exportExcel(response, list, "用户数据");
  ▶ 攻击向量：导出的Excel文件可能泄露敏感用户数据。
  ▶ 修复建议：对导出数据进行权限验证，确保用户只能导出有权限查看的数据。
</审计报告>
2025-02-01T15:34:09.069025+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L113
  ▶ 代码特征：
    List<SysRole> roles = roleService.selectRoleAll();
  ▶ 攻击向量：未适当地限制用户权限，普通用户可能获取到管理员角色信息
  ▶ 修复建议：增加角色权限验证，确保只有拥有相应权限的用户可以访问管理员角色信息

<审计通过>
</审计报告>
2025-02-01T15:34:09.069025+0800 | DEBUG | <审计报告>
// C:\Users\34834\Desktop\黑客\AiCodeAudits\pythonProject\演示项目\RuoYi-Vue-master\ruoyi-admin\src\main\java\com\ruoyi\web\controller\system\SysUserController.java
■ 漏洞类型：权限控制缺失（中危）
  ▶ 位置：L127
  ▶ 代码特征：
    deptService.checkDeptDataScope(user.getDeptId());
  ▶ 攻击向量：未验证userId，攻击者可能构造请求篡改deptId，导致未授权访问数据
  ▶ 修复建议：在调用checkDeptDataScope前添加用户权限校验逻辑

■ 漏洞类型：信息泄露（低危）
  ▶ 位置：L254
  ▶ 代码特征：
    return success(deptService.selectDeptTreeList(dept));
  ▶ 攻击向量：返回的部门树列表可能包含敏感信息，攻击者可利用接口推断系统结构
  ▶ 修复建议：根据用户权限过滤返回数据
</审计报告>
2025-02-01T15:34:09.069025+0800 | DEBUG | <审计报告>
// 文件路径1
■ 漏洞类型：缺乏用户输入验证（中危）
  ▶ 位置：L43-L46
  ▶ 代码特征：
    List<UserEntity> userList = new ArrayList<UserEntity>(users.values());
  ▶ 攻击向量：未验证users数据来源，如果users未经过权限控制可导致信息泄露
  ▶ 修复建议：在获取用户列表之前增加权限验证，确保只有授权用户能访问该数据

■ 漏洞类型：信息泄露（中危）
  ▶ 位置：L111
  ▶ 代码特征：
    return R.fail("用户不存在");
  ▶ 攻击向量：返回模糊化信息，攻击者可通过多次尝试确定用户身份
  ▶ 修复建议：改为返回通用错误信息，例如"操作失败"而不暴露具体上下文
</审计报告>
